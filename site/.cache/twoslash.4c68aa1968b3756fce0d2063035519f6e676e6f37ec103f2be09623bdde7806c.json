"{\"value\":{\"code\":\"import { toBlobSidecars, toBlobs } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ \\n  data: '0x1234',\\n  kzg, \\n  to: 'bytes', // [!code focus]  \\n}) \\n\\nsidecars // [!code focus]\\n\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function toBlobSidecars<const data extends Hex | ByteArray | undefined = undefined, const blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | ... 2 more ... | (blobs extends readonly ByteArray[] ? \\\"bytes\\\" : never)>(parameters: ToBlobSidecarsParameters<data, blobs, to>): ToBlobSidecarsReturnType<to>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":9,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function toBlobs<const data extends Hex | ByteArray, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | (data extends ByteArray ? \\\"bytes\\\" : never)>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to>\\nimport toBlobs\",\"docs\":\"Transforms arbitrary data to blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobs, stringToHex } from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n```\"]],\"start\":25,\"length\":7,\"target\":\"toBlobs\",\"line\":0,\"character\":25},{\"type\":\"hover\",\"text\":\"const sidecars: BlobSidecars<ByteArray>\",\"start\":54,\"length\":8,\"target\":\"sidecars\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toBlobSidecars<\\\"0x1234\\\", undefined, \\\"bytes\\\">(parameters: ToBlobSidecarsParameters<\\\"0x1234\\\", undefined, \\\"bytes\\\", never>): BlobSidecars<ByteArray>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":65,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":2,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data: `0x${string}` | ByteArray\",\"docs\":\"Data to transform into blobs.\",\"start\":85,\"length\":4,\"target\":\"data\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) kzg: Kzg\",\"docs\":\"KZG implementation.\",\"start\":103,\"length\":3,\"target\":\"kzg\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to?: To | undefined\",\"docs\":\"Return type.\",\"start\":111,\"length\":2,\"target\":\"to\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const sidecars: BlobSidecars<ByteArray>\",\"start\":148,\"length\":8,\"target\":\"sidecars\",\"line\":8,\"character\":0},{\"type\":\"query\",\"text\":\"const sidecars: BlobSidecars<ByteArray>\",\"start\":148,\"length\":8,\"target\":\"sidecars\",\"line\":8,\"character\":0}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[254,260],[0,80]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { defineKzg } from 'viem'\\nconst kzg = defineKzg({} as any)\\n\\n// ---cut---\\nimport { toBlobSidecars, toBlobs } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ \\n  data: '0x1234',\\n  kzg, \\n  to: 'bytes', // [!code focus]  \\n}) \\n\\nsidecars // [!code focus]\\n// ^?\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[231],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[{\"type\":\"query\",\"text\":\"const sidecars: BlobSidecars<ByteArray>\",\"start\":148,\"length\":8,\"target\":\"sidecars\",\"line\":8,\"character\":0}],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function toBlobSidecars<const data extends Hex | ByteArray | undefined = undefined, const blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | ... 2 more ... | (blobs extends readonly ByteArray[] ? \\\"bytes\\\" : never)>(parameters: ToBlobSidecarsParameters<data, blobs, to>): ToBlobSidecarsReturnType<to>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":9,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function toBlobs<const data extends Hex | ByteArray, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | (data extends ByteArray ? \\\"bytes\\\" : never)>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to>\\nimport toBlobs\",\"docs\":\"Transforms arbitrary data to blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobs, stringToHex } from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n```\"]],\"start\":25,\"length\":7,\"target\":\"toBlobs\",\"line\":0,\"character\":25},{\"type\":\"hover\",\"text\":\"const sidecars: BlobSidecars<ByteArray>\",\"start\":54,\"length\":8,\"target\":\"sidecars\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toBlobSidecars<\\\"0x1234\\\", undefined, \\\"bytes\\\">(parameters: ToBlobSidecarsParameters<\\\"0x1234\\\", undefined, \\\"bytes\\\", never>): BlobSidecars<ByteArray>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":65,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":2,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data: `0x${string}` | ByteArray\",\"docs\":\"Data to transform into blobs.\",\"start\":85,\"length\":4,\"target\":\"data\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) kzg: Kzg\",\"docs\":\"KZG implementation.\",\"start\":103,\"length\":3,\"target\":\"kzg\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to?: To | undefined\",\"docs\":\"Return type.\",\"start\":111,\"length\":2,\"target\":\"to\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const sidecars: BlobSidecars<ByteArray>\",\"start\":148,\"length\":8,\"target\":\"sidecars\",\"line\":8,\"character\":0}],\"tags\":[]}}"
