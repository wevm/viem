"{\"value\":{\"code\":\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { client, owner } from './config.js'\\n\\nconst account = await toSmartAccount({\\n  client,\\n  owners: [owner],\\n})\\n\\nconst signature = await account.signMessage({ // [!code focus]\\n  message: 'hello world', // [!code focus]\\n}) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":9,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":75,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":83,\"length\":5,\"target\":\"owner\",\"line\":1,\"character\":17},{\"type\":\"hover\",\"text\":\"const account: any\",\"start\":117,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":133,\"length\":14,\"target\":\"toSmartAccount\",\"line\":3,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":152,\"length\":6,\"target\":\"client\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}[]\",\"start\":162,\"length\":6,\"target\":\"owners\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":171,\"length\":5,\"target\":\"owner\",\"line\":5,\"character\":11},{\"type\":\"hover\",\"text\":\"const signature: any\",\"start\":189,\"length\":9,\"target\":\"signature\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: any\",\"start\":207,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":24},{\"type\":\"hover\",\"text\":\"any\",\"start\":215,\"length\":11,\"target\":\"signMessage\",\"line\":8,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) message: string\",\"start\":248,\"length\":7,\"target\":\"message\",\"line\":9,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,339]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { http, createPublicClient } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":300,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { client, owner } from './config.js'\\n\\nconst account = await toSmartAccount({\\n  client,\\n  owners: [owner],\\n})\\n\\nconst signature = await account.signMessage({ // [!code focus]\\n  message: 'hello world', // [!code focus]\\n}) // [!code focus]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":9,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":75,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":83,\"length\":5,\"target\":\"owner\",\"line\":1,\"character\":17},{\"type\":\"hover\",\"text\":\"const account: any\",\"start\":117,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":133,\"length\":14,\"target\":\"toSmartAccount\",\"line\":3,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":152,\"length\":6,\"target\":\"client\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}[]\",\"start\":162,\"length\":6,\"target\":\"owners\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":171,\"length\":5,\"target\":\"owner\",\"line\":5,\"character\":11},{\"type\":\"hover\",\"text\":\"const signature: any\",\"start\":189,\"length\":9,\"target\":\"signature\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: any\",\"start\":207,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":24},{\"type\":\"hover\",\"text\":\"any\",\"start\":215,\"length\":11,\"target\":\"signMessage\",\"line\":8,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) message: string\",\"start\":248,\"length\":7,\"target\":\"message\",\"line\":9,\"character\":2}],\"tags\":[]}}"
