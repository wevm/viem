"{\"value\":{\"mdx\":\"---\\noutline: deep\\ndescription: Proves a withdrawal that occurred on an L2.\\n---\\n\\n# proveWithdrawal\\n\\nProves a withdrawal that occurred on an L2. Used in the Withdrawal flow.\\n\\nInternally performs a contract write to the [`proveWithdrawalTransaction` function](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol#L197) on the [Optimism Portal contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol).\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { account, publicClientL1, publicClientL2, walletClientL1 } from './config'\\n\\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: '0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039',\\n})\\n\\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await publicClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n\\nconst args = await publicClientL2.buildProveWithdrawal({\\n  account,\\n  output,\\n  withdrawal,\\n})\\n \\nconst hash = await walletClientL1.proveWithdrawal(args) // [!code hl]\\n```\\n\\n```ts [config.ts]\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, optimism } from 'viem/chains'\\nimport { publicActionsL1, publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\nexport const publicClientL1 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL1())\\n\\nexport const walletClientL1 = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n\\n// JSON-RPC Account\\nexport const [account] = await walletClientL1.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n```\\n\\n:::\\n\\n\\n:::warning\\n\\nYou must [build the parameters](#building-parameters) on the L2 before calling this function. If the gas is too low, transaction execution will fail on the L2.\\n\\n:::\\n\\n### Building Parameters\\n\\nThe [`buildProveWithdrawal` Action](/op-stack/actions/buildProveWithdrawal) builds & prepares the prove withdrawal transaction parameters. \\n\\nWe can use the resulting `args` to prove the withdrawal transaction on the L1.\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { account, publicClientL2, walletClientL1 } from './config'\\n\\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: '0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039',\\n})\\n\\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await walletClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n\\nconst args = await publicClientL2.buildProveWithdrawal({ // [!code hl]\\n  account, // [!code hl]\\n  output, // [!code hl]\\n  withdrawal, // [!code hl]\\n}) // [!code hl]\\n \\nconst hash = await walletClientL1.proveWithdrawal(args)\\n```\\n\\n```ts [config.ts]\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, optimism } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\nexport const walletClientL1 = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n\\n// JSON-RPC Account\\nexport const [account] = await walletClientL1.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n```\\n\\n:::\\n\\n[See more on the `buildProveWithdrawal` Action.](/op-stack/actions/buildProveWithdrawal)\\n\\n\\n### Account Hoisting\\n\\nIf you do not wish to pass an `account` to every `proveWithdrawal`, you can also hoist the Account on the Wallet Client (see `config.ts`).\\n\\n[Learn more.](/docs/clients/wallet#account)\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { account, publicClientL2, walletClientL1 } from './config'\\n\\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: '0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039',\\n})\\n\\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await walletClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n\\nconst args = await publicClientL2.buildProveWithdrawal({\\n  output,\\n  withdrawal,\\n})\\n \\nconst hash = await walletClientL1.proveWithdrawal(args)\\n```\\n\\n```ts [config.ts (JSON-RPC Account)]\\nimport { createWalletClient, createPublicClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, optimism } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\n// Retrieve Account from an EIP-1193 Provider. // [!code hl]\\nconst [account] = await window.ethereum.request({ // [!code hl]\\n  method: 'eth_requestAccounts' // [!code hl]\\n}) // [!code hl]\\n\\nexport const walletClientL1 = createWalletClient({\\n  account, // [!code hl]\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n```\\n\\n```ts [config.ts (Local Account)]\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, optimism } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\nexport const walletClientL1 = createWalletClient({\\n  account: privateKeyToAccount('0x...'), // [!code hl]\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n```\\n\\n:::\\n\\n## Returns\\n\\n[`Hash`](/docs/glossary/types#hash)\\n\\nThe prove withdrawal [Transaction](/docs/glossary/terms#transaction) hash.\\n\\n## Parameters\\n\\n### account\\n\\n- **Type:** `Account | Address`\\n\\nThe Account to send the transaction from.\\n\\nAccepts a [JSON-RPC Account](/docs/clients/wallet#json-rpc-accounts) or [Local Account (Private Key, etc)](/docs/clients/wallet#local-accounts-private-key-mnemonic-etc).\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', // [!code focus]\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### chain (optional)\\n\\n- **Type:** [`Chain`](/docs/glossary/types#chain)\\n- **Default:** `client.chain`\\n\\nThe L1 chain. If there is a mismatch between the wallet's current chain & this chain, an error will be thrown.\\n\\n```ts\\nimport { mainnet } from 'viem/chains'\\n\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  chain: mainnet, // [!code focus]\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### gas (optional)\\n\\n- **Type:** `bigint`\\n\\nGas limit for transaction execution on the L1. \\n\\n`null` to skip gas estimation & defer calculation to signer. \\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n,  // [!code focus]\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### l2OutputIndex \\n\\n- **Type:** `bigint`\\n\\nThe index of the L2 output. Typically derived from the [`buildProveWithdrawal` Action](/op-stack/actions/buildProveWithdrawal).\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n, // [!code focus]\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### maxFeePerGas (optional)\\n\\n- **Type:** `bigint`\\n\\nTotal fee per gas (in wei), inclusive of `maxPriorityFeePerGas`. \\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  maxFeePerGas: parseGwei('20'),  // [!code focus]\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### maxPriorityFeePerGas (optional)\\n\\n- **Type:** `bigint`\\n\\nMax priority fee per gas (in wei). Only applies to [EIP-1559 Transactions](/docs/glossary/terms#eip-1559-transaction)\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  maxFeePerGas: parseGwei('20'), \\n  maxPriorityFeePerGas: parseGwei('2'),  // [!code focus]\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### nonce (optional)\\n\\n- **Type:** `number`\\n\\nUnique number identifying this transaction.\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  nonce: 69, // [!code focus]\\n  targetChain: optimism,\\n})\\n```\\n\\n### outputRootProof (optional)\\n\\n- **Type:** `bigint`\\n\\nThe proof of the L2 output. Typically derived from the [`buildProveWithdrawal` Action](/op-stack/actions/buildProveWithdrawal).\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ }, // [!code focus]\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### portalAddress (optional)\\n\\n- **Type:** `Address`\\n- **Default:** `targetChain.contracts.portal[chainId].address`\\n\\nThe address of the [Optimism Portal contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol). Defaults to the Optimism Portal contract specified on the `targetChain`.\\n\\nIf a `portalAddress` is provided, the `targetChain` parameter becomes optional.\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  portalAddress: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed' // [!code focus]\\n  targetChain: optimism,\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n})\\n```\\n\\n### targetChain\\n\\n- **Type:** [`Chain`](/docs/glossary/types#chain)\\n\\nThe L2 chain to execute the transaction on.\\n\\n```ts\\nimport { mainnet } from 'viem/chains'\\n\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism, // [!code focus]\\n})\\n```\\n\\n### withdrawalProof\\n\\n- **Type:** `bigint`\\n\\nThe proof of the L2 withdrawal. Typically derived from the [`buildProveWithdrawal` Action](/op-stack/actions/buildProveWithdrawal).\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ], // [!code focus]\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n```\\n\\n### withdrawal\\n\\n- **Type:** `bigint`\\n\\nThe withdrawal. Typically derived from the [`buildProveWithdrawal` Action](/op-stack/actions/buildProveWithdrawal).\\n\\n```ts\\nconst hash = await client.proveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ }, // [!code focus]\\n  targetChain: optimism,\\n})\\n```\",\"document\":[{\"href\":\"/op-stack/actions/proveWithdrawal#provewithdrawal\",\"html\":\"</header>\\n<p>Proves a withdrawal that occurred on an L2. Used in the Withdrawal flow.</p>\\n<p>Internally performs a contract write to the <a href=\\\"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol#L197\\\"><code>proveWithdrawalTransaction</code> function</a> on the <a href=\\\"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol\\\">Optimism Portal contract</a>.</p>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#provewithdrawal\",\"isPage\":true,\"text\":\"\\nProves a withdrawal that occurred on an L2. Used in the Withdrawal flow.\\nInternally performs a contract write to the proveWithdrawalTransaction function on the Optimism Portal contract.\\n\",\"title\":\"proveWithdrawal\",\"titles\":[]},{\"href\":\"/op-stack/actions/proveWithdrawal#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, publicClientL1, publicClientL2, walletClientL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> receipt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicClientL2, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">withdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getWithdrawals</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(receipt)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> output</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getL2Output</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2BlockNumber: receipt.blockNumber,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: publicClientL2.chain,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL2.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(args) </span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, createWalletClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL1, publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// JSON-RPC Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Local Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n<aside data-callout=\\\"warning\\\"><p>You must <a href=\\\"#building-parameters\\\">build the parameters</a> on the L2 before calling this function. If the gas is too low, transaction execution will fail on the L2.</p></aside>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#usage\",\"isPage\":false,\"text\":\"\\nimport { account, publicClientL1, publicClientL2, walletClientL1 } from &#x27;./config&#x27;\\n \\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: &#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;,\\n})\\n \\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await publicClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n \\nconst args = await publicClientL2.buildProveWithdrawal({\\n  account,\\n  output,\\n  withdrawal,\\n})\\n \\nconst hash = await walletClientL1.proveWithdrawal(args) import { createPublicClient, createWalletClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, optimism } from &#x27;viem/chains&#x27;\\nimport { publicActionsL1, publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\nexport const publicClientL1 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL1())\\n \\nexport const walletClientL1 = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n \\n// JSON-RPC Account\\nexport const [account] = await walletClientL1.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\nYou must build the parameters on the L2 before calling this function. If the gas is too low, transaction execution will fail on the L2.\\n\",\"title\":\"Usage\",\"titles\":[\"proveWithdrawal\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#building-parameters\",\"html\":\"\\n<p>The <a href=\\\"/op-stack/actions/buildProveWithdrawal\\\"><code>buildProveWithdrawal</code> Action</a> builds &amp; prepares the prove withdrawal transaction parameters.</p>\\n<p>We can use the resulting <code>args</code> to prove the withdrawal transaction on the L1.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, publicClientL2, walletClientL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> receipt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicClientL2, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">withdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getWithdrawals</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(receipt)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> output</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getL2Output</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2BlockNumber: receipt.blockNumber,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: publicClientL2.chain,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL2.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(args)</span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, createWalletClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// JSON-RPC Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Local Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n<p><a href=\\\"/op-stack/actions/buildProveWithdrawal\\\">See more on the <code>buildProveWithdrawal</code> Action.</a></p>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#building-parameters\",\"isPage\":false,\"text\":\"\\nThe buildProveWithdrawal Action builds &amp; prepares the prove withdrawal transaction parameters.\\nWe can use the resulting args to prove the withdrawal transaction on the L1.\\nimport { account, publicClientL2, walletClientL1 } from &#x27;./config&#x27;\\n \\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: &#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;,\\n})\\n \\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await walletClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n \\nconst args = await publicClientL2.buildProveWithdrawal({ \\n  account, \\n  output, \\n  withdrawal, \\n}) \\n \\nconst hash = await walletClientL1.proveWithdrawal(args)import { createPublicClient, createWalletClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, optimism } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\nexport const walletClientL1 = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n \\n// JSON-RPC Account\\nexport const [account] = await walletClientL1.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\nSee more on the buildProveWithdrawal Action.\\n\",\"title\":\"Building Parameters\",\"titles\":[\"proveWithdrawal\",\"Usage\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#account-hoisting\",\"html\":\"\\n<p>If you do not wish to pass an <code>account</code> to every <code>proveWithdrawal</code>, you can also hoist the Account on the Wallet Client (see <code>config.ts</code>).</p>\\n<p><a href=\\\"/docs/clients/wallet#account\\\">Learn more.</a></p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, publicClientL2, walletClientL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> receipt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicClientL2, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">withdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getWithdrawals</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(receipt)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> output</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getL2Output</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2BlockNumber: receipt.blockNumber,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: publicClientL2.chain,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL2.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(args)</span></span></code></pre></div><div data-title=\\\"config.ts (JSON-RPC Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (JSON-RPC Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, createPublicClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Retrieve Account from an EIP-1193 Provider. </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.ethereum.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_requestAccounts&#x27;</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div><div data-title=\\\"config.ts (Local Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (Local Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, createWalletClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div></div>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#account-hoisting\",\"isPage\":false,\"text\":\"\\nIf you do not wish to pass an account to every proveWithdrawal, you can also hoist the Account on the Wallet Client (see config.ts).\\nLearn more.\\nimport { account, publicClientL2, walletClientL1 } from &#x27;./config&#x27;\\n \\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: &#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;,\\n})\\n \\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await walletClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n \\nconst args = await publicClientL2.buildProveWithdrawal({\\n  output,\\n  withdrawal,\\n})\\n \\nconst hash = await walletClientL1.proveWithdrawal(args)import { createWalletClient, createPublicClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, optimism } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\n// Retrieve Account from an EIP-1193 Provider. \\nconst [account] = await window.ethereum.request({ \\n  method: &#x27;eth_requestAccounts&#x27;\\n}) \\n \\nexport const walletClientL1 = createWalletClient({\\n  account, \\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())import { createPublicClient, createWalletClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, optimism } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\nexport const walletClientL1 = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;), \\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: http()\\n}).extend(publicActionsL2())\\n\",\"title\":\"Account Hoisting\",\"titles\":[\"proveWithdrawal\",\"Usage\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hash\\\"><code>Hash</code></a></p>\\n<p>The prove withdrawal <a href=\\\"/docs/glossary/terms#transaction\\\">Transaction</a> hash.</p>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#returns\",\"isPage\":false,\"text\":\"\\nHash\\nThe prove withdrawal Transaction hash.\\n\",\"title\":\"Returns\",\"titles\":[\"proveWithdrawal\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#parameters\",\"html\":\"\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"proveWithdrawal\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#account\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address</code></li>\\n</ul>\\n<p>The Account to send the transaction from.</p>\\n<p>Accepts a <a href=\\\"/docs/clients/wallet#json-rpc-accounts\\\">JSON-RPC Account</a> or <a href=\\\"/docs/clients/wallet#local-accounts-private-key-mnemonic-etc\\\">Local Account (Private Key, etc)</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#account\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address\\n\\nThe Account to send the transaction from.\\nAccepts a JSON-RPC Account or Local Account (Private Key, etc).\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;, \\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"account\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\"><code>Chain</code></a></li>\\n<li><strong>Default:</strong> <code>client.chain</code></li>\\n</ul>\\n<p>The L1 chain. If there is a mismatch between the wallet&#x27;s current chain &amp; this chain, an error will be thrown.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\nDefault: client.chain\\n\\nThe L1 chain. If there is a mismatch between the wallet&#x27;s current chain &amp; this chain, an error will be thrown.\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  chain: mainnet, \\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"chain (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#gas-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Gas limit for transaction execution on the L1.</p>\\n<p><code>null</code> to skip gas estimation &amp; defer calculation to signer.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#gas-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nGas limit for transaction execution on the L1.\\nnull to skip gas estimation &amp; defer calculation to signer.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n,  \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"gas (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#l2outputindex\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The index of the L2 output. Typically derived from the <a href=\\\"/op-stack/actions/buildProveWithdrawal\\\"><code>buildProveWithdrawal</code> Action</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#l2outputindex\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe index of the L2 output. Typically derived from the buildProveWithdrawal Action.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n, \\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"l2OutputIndex\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#maxfeepergas-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Total fee per gas (in wei), inclusive of <code>maxPriorityFeePerGas</code>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#maxfeepergas-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nTotal fee per gas (in wei), inclusive of maxPriorityFeePerGas.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  maxFeePerGas: parseGwei(&#x27;20&#x27;),  \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"maxFeePerGas (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#maxpriorityfeepergas-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Max priority fee per gas (in wei). Only applies to <a href=\\\"/docs/glossary/terms#eip-1559-transaction\\\">EIP-1559 Transactions</a></p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxPriorityFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#maxpriorityfeepergas-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nMax priority fee per gas (in wei). Only applies to EIP-1559 Transactions\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  maxFeePerGas: parseGwei(&#x27;20&#x27;), \\n  maxPriorityFeePerGas: parseGwei(&#x27;2&#x27;),  \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"maxPriorityFeePerGas (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#nonce-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Unique number identifying this transaction.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#nonce-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nUnique number identifying this transaction.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  nonce: 69, \\n  targetChain: optimism,\\n})\\n\",\"title\":\"nonce (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#outputrootproof-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The proof of the L2 output. Typically derived from the <a href=\\\"/op-stack/actions/buildProveWithdrawal\\\"><code>buildProveWithdrawal</code> Action</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#outputrootproof-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe proof of the L2 output. Typically derived from the buildProveWithdrawal Action.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ }, \\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"outputRootProof (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#portaladdress-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n<li><strong>Default:</strong> <code>targetChain.contracts.portal[chainId].address</code></li>\\n</ul>\\n<p>The address of the <a href=\\\"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol\\\">Optimism Portal contract</a>. Defaults to the Optimism Portal contract specified on the <code>targetChain</code>.</p>\\n<p>If a <code>portalAddress</code> is provided, the <code>targetChain</code> parameter becomes optional.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  portalAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#portaladdress-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: targetChain.contracts.portal[chainId].address\\n\\nThe address of the Optimism Portal contract. Defaults to the Optimism Portal contract specified on the targetChain.\\nIf a portalAddress is provided, the targetChain parameter becomes optional.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  portalAddress: &#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;\\n  targetChain: optimism,\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n})\\n\",\"title\":\"portalAddress (optional)\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#targetchain\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\"><code>Chain</code></a></li>\\n</ul>\\n<p>The L2 chain to execute the transaction on.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#targetchain\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\n\\nThe L2 chain to execute the transaction on.\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ },\\n  targetChain: optimism, \\n})\\n\",\"title\":\"targetChain\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#withdrawalproof\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The proof of the L2 withdrawal. Typically derived from the <a href=\\\"/op-stack/actions/buildProveWithdrawal\\\"><code>buildProveWithdrawal</code> Action</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#withdrawalproof\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe proof of the L2 withdrawal. Typically derived from the buildProveWithdrawal Action.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ], \\n  withdrawal: { /* ... */ },\\n  targetChain: optimism,\\n})\\n\",\"title\":\"withdrawalProof\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/proveWithdrawal#withdrawal\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The withdrawal. Typically derived from the <a href=\\\"/op-stack/actions/buildProveWithdrawal\\\"><code>buildProveWithdrawal</code> Action</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4529</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputRootProof: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalProof: [ </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/op-stack/actions/proveWithdrawal.md#withdrawal\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe withdrawal. Typically derived from the buildProveWithdrawal Action.\\nconst hash = await client.proveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  l2OutputIndex: 4529n,\\n  gas: 420_000n, \\n  outputRootProof: { /* ... */ },\\n  withdrawalProof: [ /* ... */ ],\\n  withdrawal: { /* ... */ }, \\n  targetChain: optimism,\\n})\",\"title\":\"withdrawal\",\"titles\":[\"proveWithdrawal\",\"Parameters\"]}]}}"
