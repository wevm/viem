"{\"value\":{\"code\":\"import { parseAbi } from 'viem'\\n\\nconst filter = await publicClient.createEventFilter({\\n  events: parseAbi([ // [!code focus:4]\\n    'event Approval(address indexed owner, address indexed sender, uint256 value)',\\n    'event Transfer(address indexed from, address indexed to, uint256 value)',\\n  ]),\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const filter: {\\n    id: Hex;\\n    request: EIP1193RequestFn<readonly [{\\n        Method: \\\"eth_getFilterChanges\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[] | Hex[];\\n    }, {\\n        Method: \\\"eth_getFilterLogs\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[];\\n    }, {\\n        ...;\\n    }]>;\\n    ... 6 more ...;\\n    strict: undefined;\\n}\",\"start\":39,\"length\":6,\"target\":\"filter\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":54,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) createEventFilter: <undefined, readonly [{\\n    readonly name: \\\"Approval\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"sender\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, {\\n    ...;\\n}], undefined, undefined, undefined, undefined, undefined>(args?: CreateEventFilterParameters<...> | undefined) => Promise<...>\",\"docs\":\"Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\\n\\n- Docs: https://viem.sh/docs/actions/public/createEventFilter\\n- JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\",\"tags\":[[\"param\",\"args - {@link CreateEventFilterParameters}\"],[\"returns\",\"[`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst filter = await client.createEventFilter({\\n  address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\\n})\"]],\"start\":67,\"length\":17,\"target\":\"createEventFilter\",\"line\":2,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) events: readonly [{\\n    readonly name: \\\"Approval\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"sender\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, {\\n    ...;\\n}] | undefined\",\"start\":89,\"length\":6,\"target\":\"events\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"event Approval(address indexed owner, address indexed sender, uint256 value)\\\", \\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\"]>(signatures: [\\\"event Approval(address indexed owner, address indexed sender, uint256 value)\\\", \\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":97,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":10}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nimport { parseAbi } from 'viem'\\n\\nconst filter = await publicClient.createEventFilter({\\n  events: parseAbi([ // [!code focus:4]\\n    'event Approval(address indexed owner, address indexed sender, uint256 value)',\\n    'event Transfer(address indexed from, address indexed to, uint256 value)',\\n  ]),\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const filter: {\\n    id: Hex;\\n    request: EIP1193RequestFn<readonly [{\\n        Method: \\\"eth_getFilterChanges\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[] | Hex[];\\n    }, {\\n        Method: \\\"eth_getFilterLogs\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[];\\n    }, {\\n        ...;\\n    }]>;\\n    ... 6 more ...;\\n    strict: undefined;\\n}\",\"start\":39,\"length\":6,\"target\":\"filter\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":54,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) createEventFilter: <undefined, readonly [{\\n    readonly name: \\\"Approval\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"sender\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, {\\n    ...;\\n}], undefined, undefined, undefined, undefined, undefined>(args?: CreateEventFilterParameters<...> | undefined) => Promise<...>\",\"docs\":\"Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\\n\\n- Docs: https://viem.sh/docs/actions/public/createEventFilter\\n- JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\",\"tags\":[[\"param\",\"args - {@link CreateEventFilterParameters}\"],[\"returns\",\"[`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst filter = await client.createEventFilter({\\n  address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\\n})\"]],\"start\":67,\"length\":17,\"target\":\"createEventFilter\",\"line\":2,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) events: readonly [{\\n    readonly name: \\\"Approval\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"sender\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, {\\n    ...;\\n}] | undefined\",\"start\":89,\"length\":6,\"target\":\"events\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"event Approval(address indexed owner, address indexed sender, uint256 value)\\\", \\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\"]>(signatures: [\\\"event Approval(address indexed owner, address indexed sender, uint256 value)\\\", \\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":97,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":10}],\"tags\":[]}}"
