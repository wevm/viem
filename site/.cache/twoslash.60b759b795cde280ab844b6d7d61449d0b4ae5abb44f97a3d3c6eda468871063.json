"{\"value\":{\"code\":\"import { createClient, http, publicActions, walletActions } from 'viem'\\nimport { arbitrumSepolia } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { toSimple7702SmartAccount } from 'viem/account-abstraction'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n\\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n\\nexport const paymasterAddress = '0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966'\\nexport const usdcAddress = '0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d' \",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: ClientConfig<transport, chain, accountOrAddress, rpcSchema>): Prettify<Client<transport, chain, accountOrAddress extends Address ? Prettify<JsonRpcAccount<accountOrAddress>> : accountOrAddress, rpcSchema>>\\nimport createClient\",\"start\":9,\"length\":12,\"target\":\"createClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":23,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":23},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":29,\"length\":13,\"target\":\"publicActions\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":44,\"length\":13,\"target\":\"walletActions\",\"line\":0,\"character\":44},{\"type\":\"hover\",\"text\":\"(alias) const arbitrumSepolia: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport arbitrumSepolia\",\"start\":81,\"length\":15,\"target\":\"arbitrumSepolia\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":127,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function toSimple7702SmartAccount(parameters: ToSimple7702SmartAccountParameters): Promise<ToSimple7702SmartAccountReturnType>\\nimport toSimple7702SmartAccount\",\"tags\":[[\"description\",\"Create a Simple7702 Smart Account â€“ based off [eth-infinitism's `Simple7702Account.sol`](https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/accounts/Simple7702Account.sol).\"],[\"param\",\"parameters - {@link ToSimple7702SmartAccountParameters}\"],[\"returns\",\"Simple7702 Smart Account. {@link ToSimple7702SmartAccountReturnType}\"],[\"example\",\"import { toSimple7702SmartAccount } from 'viem/account-abstraction'\\nimport { client } from './client.js'\\n\\nconst implementation = toSimple7702SmartAccount({\\n  client,\\n  owner: '0x...',\\n})\"]],\"start\":179,\"length\":24,\"target\":\"toSimple7702SmartAccount\",\"line\":3,\"character\":9},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":252,\"length\":5,\"target\":\"owner\",\"line\":5,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":260,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":5,\"character\":21},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\",\"start\":303,\"length\":6,\"target\":\"client\",\"line\":7,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) createClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined>(parameters: ClientConfig<...>): {\\n    ...;\\n}\\nimport createClient\",\"start\":312,\"length\":12,\"target\":\"createClient\",\"line\":7,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    ...;\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":330,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":339,\"length\":5,\"target\":\"owner\",\"line\":8,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":348,\"length\":5,\"target\":\"chain\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const arbitrumSepolia: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport arbitrumSepolia\",\"start\":355,\"length\":15,\"target\":\"arbitrumSepolia\",\"line\":9,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":375,\"length\":9,\"target\":\"transport\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false>): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":386,\"length\":4,\"target\":\"http\",\"line\":10,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) extend: <PublicActions<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}>>(fn: (client: Client<...>) => PublicActions<...>) => Client<...>\",\"start\":400,\"length\":6,\"target\":\"extend\",\"line\":12,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":407,\"length\":13,\"target\":\"publicActions\",\"line\":12,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) extend: <WalletActions<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}>>(fn: (client: Client<...>) => WalletActions<...>) => Client<...>\",\"start\":425,\"length\":6,\"target\":\"extend\",\"line\":13,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":432,\"length\":13,\"target\":\"walletActions\",\"line\":13,\"character\":10},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":461,\"length\":7,\"target\":\"account\",\"line\":15,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) toSimple7702SmartAccount(parameters: ToSimple7702SmartAccountParameters): Promise<ToSimple7702SmartAccountReturnType>\\nimport toSimple7702SmartAccount\",\"tags\":[[\"description\",\"Create a Simple7702 Smart Account â€“ based off [eth-infinitism's `Simple7702Account.sol`](https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/accounts/Simple7702Account.sol).\"],[\"param\",\"parameters - {@link ToSimple7702SmartAccountParameters}\"],[\"returns\",\"Simple7702 Smart Account. {@link ToSimple7702SmartAccountReturnType}\"],[\"example\",\"import { toSimple7702SmartAccount } from 'viem/account-abstraction'\\nimport { client } from './client.js'\\n\\nconst implementation = toSimple7702SmartAccount({\\n  client,\\n  owner: '0x...',\\n})\"]],\"start\":477,\"length\":24,\"target\":\"toSimple7702SmartAccount\",\"line\":15,\"character\":29},{\"type\":\"hover\",\"text\":\"(property) client: Client<Transport, Chain | undefined, {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} | JsonRpcAccount | undefined>\",\"start\":504,\"length\":6,\"target\":\"client\",\"line\":15,\"character\":56},{\"type\":\"hover\",\"text\":\"(property) owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":512,\"length\":5,\"target\":\"owner\",\"line\":15,\"character\":64},{\"type\":\"hover\",\"text\":\"const paymasterAddress: \\\"0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966\\\"\",\"start\":535,\"length\":16,\"target\":\"paymasterAddress\",\"line\":17,\"character\":13},{\"type\":\"hover\",\"text\":\"const usdcAddress: \\\"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\\\"\",\"start\":612,\"length\":11,\"target\":\"usdcAddress\",\"line\":18,\"character\":13}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { createClient, http, publicActions, walletActions } from 'viem'\\nimport { arbitrumSepolia } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { toSimple7702SmartAccount } from 'viem/account-abstraction'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n\\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n\\nexport const paymasterAddress = '0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966'\\nexport const usdcAddress = '0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d' \",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: ClientConfig<transport, chain, accountOrAddress, rpcSchema>): Prettify<Client<transport, chain, accountOrAddress extends Address ? Prettify<JsonRpcAccount<accountOrAddress>> : accountOrAddress, rpcSchema>>\\nimport createClient\",\"start\":9,\"length\":12,\"target\":\"createClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":23,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":23},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":29,\"length\":13,\"target\":\"publicActions\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":44,\"length\":13,\"target\":\"walletActions\",\"line\":0,\"character\":44},{\"type\":\"hover\",\"text\":\"(alias) const arbitrumSepolia: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport arbitrumSepolia\",\"start\":81,\"length\":15,\"target\":\"arbitrumSepolia\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":127,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function toSimple7702SmartAccount(parameters: ToSimple7702SmartAccountParameters): Promise<ToSimple7702SmartAccountReturnType>\\nimport toSimple7702SmartAccount\",\"tags\":[[\"description\",\"Create a Simple7702 Smart Account â€“ based off [eth-infinitism's `Simple7702Account.sol`](https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/accounts/Simple7702Account.sol).\"],[\"param\",\"parameters - {@link ToSimple7702SmartAccountParameters}\"],[\"returns\",\"Simple7702 Smart Account. {@link ToSimple7702SmartAccountReturnType}\"],[\"example\",\"import { toSimple7702SmartAccount } from 'viem/account-abstraction'\\nimport { client } from './client.js'\\n\\nconst implementation = toSimple7702SmartAccount({\\n  client,\\n  owner: '0x...',\\n})\"]],\"start\":179,\"length\":24,\"target\":\"toSimple7702SmartAccount\",\"line\":3,\"character\":9},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":252,\"length\":5,\"target\":\"owner\",\"line\":5,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":260,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":5,\"character\":21},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\",\"start\":303,\"length\":6,\"target\":\"client\",\"line\":7,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) createClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined>(parameters: ClientConfig<...>): {\\n    ...;\\n}\\nimport createClient\",\"start\":312,\"length\":12,\"target\":\"createClient\",\"line\":7,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    ...;\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":330,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":339,\"length\":5,\"target\":\"owner\",\"line\":8,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":348,\"length\":5,\"target\":\"chain\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const arbitrumSepolia: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport arbitrumSepolia\",\"start\":355,\"length\":15,\"target\":\"arbitrumSepolia\",\"line\":9,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":375,\"length\":9,\"target\":\"transport\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false>): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":386,\"length\":4,\"target\":\"http\",\"line\":10,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) extend: <PublicActions<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}>>(fn: (client: Client<...>) => PublicActions<...>) => Client<...>\",\"start\":400,\"length\":6,\"target\":\"extend\",\"line\":12,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":407,\"length\":13,\"target\":\"publicActions\",\"line\":12,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) extend: <WalletActions<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    blockTime?: number | undefined | undefined;\\n    ... 12 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}>>(fn: (client: Client<...>) => WalletActions<...>) => Client<...>\",\"start\":425,\"length\":6,\"target\":\"extend\",\"line\":13,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":432,\"length\":13,\"target\":\"walletActions\",\"line\":13,\"character\":10},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":461,\"length\":7,\"target\":\"account\",\"line\":15,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) toSimple7702SmartAccount(parameters: ToSimple7702SmartAccountParameters): Promise<ToSimple7702SmartAccountReturnType>\\nimport toSimple7702SmartAccount\",\"tags\":[[\"description\",\"Create a Simple7702 Smart Account â€“ based off [eth-infinitism's `Simple7702Account.sol`](https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/accounts/Simple7702Account.sol).\"],[\"param\",\"parameters - {@link ToSimple7702SmartAccountParameters}\"],[\"returns\",\"Simple7702 Smart Account. {@link ToSimple7702SmartAccountReturnType}\"],[\"example\",\"import { toSimple7702SmartAccount } from 'viem/account-abstraction'\\nimport { client } from './client.js'\\n\\nconst implementation = toSimple7702SmartAccount({\\n  client,\\n  owner: '0x...',\\n})\"]],\"start\":477,\"length\":24,\"target\":\"toSimple7702SmartAccount\",\"line\":15,\"character\":29},{\"type\":\"hover\",\"text\":\"(property) client: Client<Transport, Chain | undefined, {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} | JsonRpcAccount | undefined>\",\"start\":504,\"length\":6,\"target\":\"client\",\"line\":15,\"character\":56},{\"type\":\"hover\",\"text\":\"(property) owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":512,\"length\":5,\"target\":\"owner\",\"line\":15,\"character\":64},{\"type\":\"hover\",\"text\":\"const paymasterAddress: \\\"0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966\\\"\",\"start\":535,\"length\":16,\"target\":\"paymasterAddress\",\"line\":17,\"character\":13},{\"type\":\"hover\",\"text\":\"const usdcAddress: \\\"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\\\"\",\"start\":612,\"length\":11,\"target\":\"usdcAddress\",\"line\":18,\"character\":13}],\"tags\":[]}}"
