"{\"value\":{\"code\":\"import { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createTestClient<mode extends \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\", transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: TestClientConfig<mode, transport, chain, accountOrAddress, rpcSchema>): TestClient<mode, transport, chain, ParseAccount<accountOrAddress>, true, rpcSchema>\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":16,\"target\":\"createTestClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":27,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":27},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":55,\"length\":7,\"target\":\"foundry\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const client: {\\n    mode: \\\"anvil\\\";\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 40 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":91,\"length\":6,\"target\":\"client\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createTestClient<\\\"anvil\\\", HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":100,\"length\":16,\"target\":\"createTestClient\",\"line\":3,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":121,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":128,\"length\":7,\"target\":\"foundry\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) mode: \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\"\",\"docs\":\"Mode of the test client.\",\"start\":139,\"length\":4,\"target\":\"mode\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":156,\"length\":9,\"target\":\"transport\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":167,\"length\":4,\"target\":\"http\",\"line\":6,\"character\":13}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createTestClient<mode extends \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\", transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: TestClientConfig<mode, transport, chain, accountOrAddress, rpcSchema>): TestClient<mode, transport, chain, ParseAccount<accountOrAddress>, true, rpcSchema>\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":16,\"target\":\"createTestClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":27,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":27},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":55,\"length\":7,\"target\":\"foundry\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const client: {\\n    mode: \\\"anvil\\\";\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 40 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":91,\"length\":6,\"target\":\"client\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createTestClient<\\\"anvil\\\", HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":100,\"length\":16,\"target\":\"createTestClient\",\"line\":3,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":121,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":128,\"length\":7,\"target\":\"foundry\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) mode: \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\"\",\"docs\":\"Mode of the test client.\",\"start\":139,\"length\":4,\"target\":\"mode\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":156,\"length\":9,\"target\":\"transport\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":167,\"length\":4,\"target\":\"http\",\"line\":6,\"character\":13}],\"tags\":[]}}"
