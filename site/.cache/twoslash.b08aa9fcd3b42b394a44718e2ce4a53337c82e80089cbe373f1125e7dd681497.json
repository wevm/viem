"{\"value\":{\"code\":\"const authorization = await account.experimental_signAuthorization({\\n  contractAddress: '0x...',\\n  chainId: 1,\\n  nonce: 1,\\n})\\n\\nconst signature = await account.signTransaction({\\n  authorizationList: [authorization], // [!code focus]\\n  chainId: 1,\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":6,\"length\":13,\"target\":\"authorization\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":28,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) experimental_signAuthorization: (parameters: Authorization) => Promise<SignAuthorizationReturnType>\",\"start\":36,\"length\":30,\"target\":\"experimental_signAuthorization\",\"line\":0,\"character\":36},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":71,\"length\":15,\"target\":\"contractAddress\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) chainId: number\",\"docs\":\"Chain ID to authorize.\",\"start\":99,\"length\":7,\"target\":\"chainId\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) nonce: number\",\"docs\":\"Nonce of the Authority to authorize.\",\"start\":113,\"length\":5,\"target\":\"nonce\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"const signature: `0x04${string}`\",\"start\":133,\"length\":9,\"target\":\"signature\",\"line\":6,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":151,\"length\":7,\"target\":\"account\",\"line\":6,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <SerializeTransactionFn<TransactionSerializable>, {\\n    authorizationList: SignAuthorizationReturnType[];\\n    chainId: number;\\n}>(transaction: {\\n    authorizationList: SignAuthorizationReturnType[];\\n    chainId: number;\\n}, options?: {\\n    ...;\\n} | undefined) => Promise<...>\",\"start\":159,\"length\":15,\"target\":\"signTransaction\",\"line\":6,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: SignAuthorizationReturnType[]\",\"start\":179,\"length\":17,\"target\":\"authorizationList\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":199,\"length\":13,\"target\":\"authorization\",\"line\":7,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) chainId: number\",\"start\":234,\"length\":7,\"target\":\"chainId\",\"line\":8,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,110]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { privateKeyToAccount } from 'viem/accounts'\\nconst account = privateKeyToAccount('0x...')\\n// ---cut---\\nconst authorization = await account.experimental_signAuthorization({\\n  contractAddress: '0x...',\\n  chainId: 1,\\n  nonce: 1,\\n})\\n\\nconst signature = await account.signTransaction({\\n  authorizationList: [authorization], // [!code focus]\\n  chainId: 1,\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":6,\"length\":13,\"target\":\"authorization\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":28,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) experimental_signAuthorization: (parameters: Authorization) => Promise<SignAuthorizationReturnType>\",\"start\":36,\"length\":30,\"target\":\"experimental_signAuthorization\",\"line\":0,\"character\":36},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":71,\"length\":15,\"target\":\"contractAddress\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) chainId: number\",\"docs\":\"Chain ID to authorize.\",\"start\":99,\"length\":7,\"target\":\"chainId\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) nonce: number\",\"docs\":\"Nonce of the Authority to authorize.\",\"start\":113,\"length\":5,\"target\":\"nonce\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"const signature: `0x04${string}`\",\"start\":133,\"length\":9,\"target\":\"signature\",\"line\":6,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":151,\"length\":7,\"target\":\"account\",\"line\":6,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <SerializeTransactionFn<TransactionSerializable>, {\\n    authorizationList: SignAuthorizationReturnType[];\\n    chainId: number;\\n}>(transaction: {\\n    authorizationList: SignAuthorizationReturnType[];\\n    chainId: number;\\n}, options?: {\\n    ...;\\n} | undefined) => Promise<...>\",\"start\":159,\"length\":15,\"target\":\"signTransaction\",\"line\":6,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: SignAuthorizationReturnType[]\",\"start\":179,\"length\":17,\"target\":\"authorizationList\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":199,\"length\":13,\"target\":\"authorization\",\"line\":7,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) chainId: number\",\"start\":234,\"length\":7,\"target\":\"chainId\",\"line\":8,\"character\":2}],\"tags\":[]}}"
