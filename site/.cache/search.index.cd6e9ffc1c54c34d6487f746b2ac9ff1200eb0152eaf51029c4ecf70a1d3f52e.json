"{\"value\":{\"mdx\":\"# Blob Transactions [Sending your first Blob Transaction with Viem.]\\n\\nBlob Transactions are a new type of transaction in Ethereum (introduced in [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)) that allows you to broadcast BLObs (Binary Large Objects) to the Ethereum network. Blob Transactions are like any other transaction, but with the added ability to carry a payload of Blobs. Blobs are extremely larger than regular calldata (~128kB), however unlike regular calldata, they are not accessible on the EVM. The EVM can only view the commitments of the blobs. Blobs are also transient, and only last for 4096 epochs (approx. 18 days).\\n\\nTo read more on Blob Transactions and EIP-4844, check out these resources: \\n\\n- [EIP-4844 Spec](https://eips.ethereum.org/EIPS/eip-4844)\\n- [EIP-4844 Website](https://www.eip4844.com/#faq)\\n- [EIP-4844 FAQ](https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#Proto-Danksharding-FAQ)\\n\\nIn this guide, we will walk you through how to send your first Blob Transaction with Viem.\\n\\n::::steps\\n\\n## Set up Client\\n\\nWe will first set up our Viem Client. \\n\\nLet's create a `client.ts` file that holds our Client.\\n\\n```ts twoslash [client.ts] filename=\\\"client.ts\\\"\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n## Install KZG bindings\\n\\nNext, we will need to install some KZG bindings. KZG will be used to compute the commitments of the blobs, and generate proofs from the blobs & commitments. The commitments and proofs are needed to serialize and sign the Blob Transaction before we send it off.\\n\\nA couple of KZG implementations we recommend are:\\n- [c-kzg](https://github.com/ethereum/c-kzg-4844): Node.js bindings to c-kzg.\\n- [kzg-wasm](https://github.com/ethereumjs/kzg-wasm): WebAssembly bindings to c-kzg.\\n\\n:::code-group\\n\\n```bash [npm]\\nnpm i c-kzg\\n# or\\nnpm i kzg-wasm\\n```\\n\\n```bash [pnpm]\\npnpm i c-kzg\\n# or\\npnpm i kzg-wasm\\n```\\n\\n```bash [bun]\\nbun i c-kzg\\n# or\\nbun i kzg-wasm\\n```\\n\\n:::\\n\\n## Set up KZG interface\\n\\nAfter that, we will need to hook up the KZG bindings to Viem.\\n\\nLet's create a `kzg.ts` file that holds our KZG interface.\\n\\n:::code-group\\n\\n```ts twoslash [kzg.ts] filename=\\\"kzg.ts\\\"\\n// @noErrors\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nexport const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n```\\n\\n```ts twoslash [client.ts]\\n// [!include client.ts]\\n```\\n\\n:::\\n\\n## Send Blob Transaction\\n\\nNow that we have our Client and KZG interface set up, we can send our first Blob Transaction.\\n\\nFor demonstration purposes, we will construct a blob with a simple string: `\\\"hello world\\\"`, and send it to the zero address.\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { parseGwei, stringToHex, toBlobs } from 'viem'\\nimport { account, client } from './client'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n\\nconst hash = await client.sendTransaction({\\n  blobs,\\n  kzg,\\n  maxFeePerBlobGas: parseGwei('30'),\\n  to: '0x0000000000000000000000000000000000000000',\\n})\\n```\\n\\n```ts twoslash [kzg.ts]\\n// [!include kzg.ts]\\n```\\n\\n```ts twoslash [client.ts]\\n// [!include client.ts]\\n```\\n\\n:::\\n\\n::::\\n\\n## That's it!\\n\\nYou've just sent your first Blob Transaction with Viem. \\n\\nWith the `hash` you received in Step 4, you can now track your Blob Transaction on a blob explorer like [Blobscan](https://blobscan.com/).\\n\",\"document\":[{\"href\":\"/docs/guides/blob-transactions#blob-transactions\",\"html\":\"<div role=\\\"doc-subtitle\\\">Sending your first Blob Transaction with Viem.</div></header>\\n<p>Blob Transactions are a new type of transaction in Ethereum (introduced in <a href=\\\"https://eips.ethereum.org/EIPS/eip-4844\\\">EIP-4844</a>) that allows you to broadcast BLObs (Binary Large Objects) to the Ethereum network. Blob Transactions are like any other transaction, but with the added ability to carry a payload of Blobs. Blobs are extremely larger than regular calldata (~128kB), however unlike regular calldata, they are not accessible on the EVM. The EVM can only view the commitments of the blobs. Blobs are also transient, and only last for 4096 epochs (approx. 18 days).</p>\\n<p>To read more on Blob Transactions and EIP-4844, check out these resources:</p>\\n<ul>\\n<li><a href=\\\"https://eips.ethereum.org/EIPS/eip-4844\\\">EIP-4844 Spec</a></li>\\n<li><a href=\\\"https://www.eip4844.com/#faq\\\">EIP-4844 Website</a></li>\\n<li><a href=\\\"https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#Proto-Danksharding-FAQ\\\">EIP-4844 FAQ</a></li>\\n</ul>\\n<p>In this guide, we will walk you through how to send your first Blob Transaction with Viem.</p>\\n<div data-vocs-steps=\\\"true\\\"><div data-depth=\\\"2\\\">\",\"id\":\"pages/docs/guides/blob-transactions.md#blob-transactions\",\"isPage\":true,\"text\":\"Sending your first Blob Transaction with Viem.\\nBlob Transactions are a new type of transaction in Ethereum (introduced in EIP-4844) that allows you to broadcast BLObs (Binary Large Objects) to the Ethereum network. Blob Transactions are like any other transaction, but with the added ability to carry a payload of Blobs. Blobs are extremely larger than regular calldata (~128kB), however unlike regular calldata, they are not accessible on the EVM. The EVM can only view the commitments of the blobs. Blobs are also transient, and only last for 4096 epochs (approx. 18 days).\\nTo read more on Blob Transactions and EIP-4844, check out these resources:\\n\\nEIP-4844 Spec\\nEIP-4844 Website\\nEIP-4844 FAQ\\n\\nIn this guide, we will walk you through how to send your first Blob Transaction with Viem.\\n\",\"title\":\"Blob Transactions\",\"titles\":[]},{\"href\":\"/docs/guides/blob-transactions#set-up-client\",\"html\":\"<p>We will first set up our Viem Client.</p><p>Let&#x27;s create a <code>client.ts</code> file that holds our Client.</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts&quot; filename=&quot;client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/docs/guides/blob-transactions.md#set-up-client\",\"isPage\":false,\"text\":\"We will first set up our Viem Client.Let&#x27;s create a client.ts file that holds our Client.import { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const account = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http()\\n})\",\"title\":\"Set up Client\",\"titles\":[\"Blob Transactions\"]},{\"href\":\"/docs/guides/blob-transactions#install-kzg-bindings\",\"html\":\"<p>Next, we will need to install some KZG bindings. KZG will be used to compute the commitments of the blobs, and generate proofs from the blobs &amp; commitments. The commitments and proofs are needed to serialize and sign the Blob Transaction before we send it off.</p><p>A couple of KZG implementations we recommend are:</p><ul>\\n<li><a href=\\\"https://github.com/ethereum/c-kzg-4844\\\">c-kzg</a>: Node.js bindings to c-kzg.</li>\\n<li><a href=\\\"https://github.com/ethereumjs/kzg-wasm\\\">kzg-wasm</a>: WebAssembly bindings to c-kzg.</li>\\n</ul><div class=\\\"code-group\\\"><div data-title=\\\"npm\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"npm\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">npm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> c-kzg</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># or</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">npm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> kzg-wasm</span></span></code></pre></div><div data-title=\\\"pnpm\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"pnpm\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">pnpm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> c-kzg</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># or</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">pnpm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> kzg-wasm</span></span></code></pre></div><div data-title=\\\"bun\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"bun\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">bun</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> c-kzg</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># or</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">bun</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> kzg-wasm</span></span></code></pre></div></div></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/docs/guides/blob-transactions.md#install-kzg-bindings\",\"isPage\":false,\"text\":\"Next, we will need to install some KZG bindings. KZG will be used to compute the commitments of the blobs, and generate proofs from the blobs &amp; commitments. The commitments and proofs are needed to serialize and sign the Blob Transaction before we send it off.A couple of KZG implementations we recommend are:\\nc-kzg: Node.js bindings to c-kzg.\\nkzg-wasm: WebAssembly bindings to c-kzg.\\nnpm i c-kzg\\n# or\\nnpm i kzg-wasmpnpm i c-kzg\\n# or\\npnpm i kzg-wasmbun i c-kzg\\n# or\\nbun i kzg-wasm\",\"title\":\"Install KZG bindings\",\"titles\":[\"Blob Transactions\"]},{\"href\":\"/docs/guides/blob-transactions#set-up-kzg-interface\",\"html\":\"<p>After that, we will need to hook up the KZG bindings to Viem.</p><p>Let&#x27;s create a <code>kzg.ts</code> file that holds our KZG interface.</p><div class=\\\"code-group\\\"><div data-title=\\\"kzg.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"kzg.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(cKzg, mainnetTrustedSetupPath)</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/docs/guides/blob-transactions.md#set-up-kzg-interface\",\"isPage\":false,\"text\":\"After that, we will need to hook up the KZG bindings to Viem.Let&#x27;s create a kzg.ts file that holds our KZG interface.// @noErrors\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { setupKzg } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nexport const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)import { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const account = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http()\\n})\",\"title\":\"Set up KZG interface\",\"titles\":[\"Blob Transactions\"]},{\"href\":\"/docs/guides/blob-transactions#send-blob-transaction\",\"html\":\"<p>Now that we have our Client and KZG interface set up, we can send our first Blob Transaction.</p><p>For demonstration purposes, we will construct a blob with a simple string: <code>&quot;hello world&quot;</code>, and send it to the zero address.</p><div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: kzg.ts</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(cKzg, mainnetTrustedSetupPath)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: client.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { parseGwei, stringToHex, toBlobs } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { kzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./kzg&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> blobs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toBlobs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ data: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">stringToHex</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  blobs,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  kzg,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerBlobGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;30&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x0000000000000000000000000000000000000000&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-title=\\\"kzg.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"kzg.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(cKzg, mainnetTrustedSetupPath)</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div></div></div>\\n\",\"id\":\"pages/docs/guides/blob-transactions.md#send-blob-transaction\",\"isPage\":false,\"text\":\"Now that we have our Client and KZG interface set up, we can send our first Blob Transaction.For demonstration purposes, we will construct a blob with a simple string: &quot;hello world&quot;, and send it to the zero address.// @filename: kzg.ts\\n \\n// @noErrors\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { setupKzg } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nexport const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n// @filename: client.ts\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const account = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http()\\n})\\n// @filename: example.js\\n \\n// ---cut---\\nimport { parseGwei, stringToHex, toBlobs } from &#x27;viem&#x27;\\nimport { account, client } from &#x27;./client&#x27;\\nimport { kzg } from &#x27;./kzg&#x27;\\n \\nconst blobs = toBlobs({ data: stringToHex(&#x27;hello world&#x27;) })\\n \\nconst hash = await client.sendTransaction({\\n  blobs,\\n  kzg,\\n  maxFeePerBlobGas: parseGwei(&#x27;30&#x27;),\\n  to: &#x27;0x0000000000000000000000000000000000000000&#x27;,\\n})// @noErrors\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { setupKzg } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nexport const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)import { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const account = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Send Blob Transaction\",\"titles\":[\"Blob Transactions\"]},{\"href\":\"/docs/guides/blob-transactions#thats-it\",\"html\":\"\\n<p>You&#x27;ve just sent your first Blob Transaction with Viem.</p>\\n<p>With the <code>hash</code> you received in Step 4, you can now track your Blob Transaction on a blob explorer like <a href=\\\"https://blobscan.com/\\\">Blobscan</a>.</p>\",\"id\":\"pages/docs/guides/blob-transactions.md#thats-it\",\"isPage\":false,\"text\":\"\\nYou&#x27;ve just sent your first Blob Transaction with Viem.\\nWith the hash you received in Step 4, you can now track your Blob Transaction on a blob explorer like Blobscan.\",\"title\":\"That&#x27;s it!\",\"titles\":[\"Blob Transactions\"]}]}}"
