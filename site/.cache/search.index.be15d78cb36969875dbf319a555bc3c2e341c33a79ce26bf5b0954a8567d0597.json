"{\"value\":{\"mdx\":\"# decodeAbiParameters [Decodes ABI encoded data.]\\n\\nDecodes ABI encoded data using the [ABI specification](https://solidity.readthedocs.io/en/latest/abi-spec), given a set of ABI parameters (`inputs`/`outputs`) and the encoded ABI data.\\n\\nThe `decodeAbiParameters` function is used by the other contract decoding utilities (ie. `decodeFunctionData`, `decodeEventLog`, etc).\\n\\n## Install\\n\\n```ts\\nimport { decodeAbiParameters } from 'viem'\\n```\\n\\n## Usage\\n\\nThe `decodeAbiParameters` function takes in two parameters:\\n\\n- a set of ABI Parameters (`params`), that can be in the shape of the `inputs` or `outputs` attribute of an ABI Item.\\n- the ABI encoded data (`data`) that correspond to the given `params`.\\n\\n```ts\\nimport { decodeAbiParameters } from 'viem'\\n\\nconst values = decodeAbiParameters(\\n  [\\n    { name: 'x', type: 'string' },\\n    { name: 'y', type: 'uint' },\\n    { name: 'z', type: 'bool' }\\n  ],\\n  '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\\n)\\n// ['wagmi', 420n, true]\\n```\\n\\n### Human Readable\\n\\nYou can also pass in [Human Readable](/docs/glossary/terms#human-readable-abi) parameters with the [`parseAbiParameters` utility](/docs/abi/parseAbiParameters).\\n\\n```ts\\nimport { decodeAbiParameters, parseAbiParameters } from 'viem'\\n\\nconst values = decodeAbiParameters(\\n  parseAbiParameters('string x, uint y, bool z'),\\n  '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000'\\n)\\n// ['wagmi', 420n, true]\\n```\\n\\n## Return Value\\n\\nThe decoded data. Type is inferred from the ABI.\\n\\n## Parameters\\n\\n### params\\n\\n- **Type**: [`AbiParameter[]`](/docs/glossary/types#abiparameter)\\n\\nThe set of ABI parameters to decode against `data`, in the shape of the `inputs` or `outputs` attribute of an ABI event/function.\\n\\nThese parameters must include valid [ABI types](https://docs.soliditylang.org/en/develop/abi-spec#types).\\n\\n```ts\\nconst values = decodeAbiParameters(\\n  [{ name: 'x', type: 'uint32' }], // [!code focus]\\n  '0x0000000000000000000000000000000000000000000000000000000000010f2c',\\n)\\n```\\n\\n### data\\n\\n- **Type:** [`Hex`](/docs/glossary/types#hex)\\n\\nThe ABI encoded data.\\n\\n```ts\\nconst values = decodeAbiParameters(\\n  [{ name: 'x', type: 'uint32' }],\\n  '0x0000000000000000000000000000000000000000000000000000000000010f2c', // [!code focus]\\n)\\n```\\n\\n## More Examples\\n\\n### Simple struct\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { abi } from './abi'\\n\\nconst values = decodeAbiParameters(\\n  abi[0].outputs,\\n  '0x00000000000000000000000000000000000000000000000000000000000001a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac',\\n)\\n// { x: 420n, y: true, z: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC' }\\n```\\n\\n```ts [abi.ts]\\nexport const abi = [\\n  {\\n    name: 'staticStruct',\\n    outputs: [\\n      {\\n        components: [\\n          {\\n            name: 'x',\\n            type: 'uint256',\\n          },\\n          {\\n            name: 'y',\\n            type: 'bool',\\n          },\\n          {\\n            name: 'z',\\n            type: 'address',\\n          },\\n        ],\\n        name: 'foo',\\n        type: 'tuple',\\n      },\\n    ],\\n  }\\n] as const\\n```\\n\\n```solidity [Example.sol]\\ncontract Example {\\n  struct Foo {\\n    uint256 x;\\n    bool y;\\n    address z;\\n  }\\n\\n  function staticStruct(...) returns (Foo calldata foo) { \\n    ... \\n    return foo;\\n  }\\n}\\n```\\n\\n:::\",\"document\":[{\"href\":\"/docs/abi/decodeAbiParameters#decodeabiparameters\",\"html\":\"<div role=\\\"doc-subtitle\\\">Decodes ABI encoded data.</div></header>\\n<p>Decodes ABI encoded data using the <a href=\\\"https://solidity.readthedocs.io/en/latest/abi-spec\\\">ABI specification</a>, given a set of ABI parameters (<code>inputs</code>/<code>outputs</code>) and the encoded ABI data.</p>\\n<p>The <code>decodeAbiParameters</code> function is used by the other contract decoding utilities (ie. <code>decodeFunctionData</code>, <code>decodeEventLog</code>, etc).</p>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#decodeabiparameters\",\"isPage\":true,\"text\":\"Decodes ABI encoded data.\\nDecodes ABI encoded data using the ABI specification, given a set of ABI parameters (inputs/outputs) and the encoded ABI data.\\nThe decodeAbiParameters function is used by the other contract decoding utilities (ie. decodeFunctionData, decodeEventLog, etc).\\n\",\"title\":\"decodeAbiParameters\",\"titles\":[]},{\"href\":\"/docs/abi/decodeAbiParameters#install\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { decodeAbiParameters } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#install\",\"isPage\":false,\"text\":\"\\nimport { decodeAbiParameters } from &#x27;viem&#x27;\\n\",\"title\":\"Install\",\"titles\":[\"decodeAbiParameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#usage\",\"html\":\"\\n<p>The <code>decodeAbiParameters</code> function takes in two parameters:</p>\\n<ul>\\n<li>a set of ABI Parameters (<code>params</code>), that can be in the shape of the <code>inputs</code> or <code>outputs</code> attribute of an ABI Item.</li>\\n<li>the ABI encoded data (<code>data</code>) that correspond to the given <code>params</code>.</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { decodeAbiParameters } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> values</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;string&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;y&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;bool&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  &#x27;0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// [&#x27;wagmi&#x27;, 420n, true]</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#usage\",\"isPage\":false,\"text\":\"\\nThe decodeAbiParameters function takes in two parameters:\\n\\na set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\\nthe ABI encoded data (data) that correspond to the given params.\\n\\nimport { decodeAbiParameters } from &#x27;viem&#x27;\\n \\nconst values = decodeAbiParameters(\\n  [\\n    { name: &#x27;x&#x27;, type: &#x27;string&#x27; },\\n    { name: &#x27;y&#x27;, type: &#x27;uint&#x27; },\\n    { name: &#x27;z&#x27;, type: &#x27;bool&#x27; }\\n  ],\\n  &#x27;0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000&#x27;,\\n)\\n// [&#x27;wagmi&#x27;, 420n, true]\\n\",\"title\":\"Usage\",\"titles\":[\"decodeAbiParameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#human-readable\",\"html\":\"\\n<p>You can also pass in <a href=\\\"/docs/glossary/terms#human-readable-abi\\\">Human Readable</a> parameters with the <a href=\\\"/docs/abi/parseAbiParameters\\\"><code>parseAbiParameters</code> utility</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { decodeAbiParameters, parseAbiParameters } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> values</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  parseAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;string x, uint y, bool z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  &#x27;0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// [&#x27;wagmi&#x27;, 420n, true]</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#human-readable\",\"isPage\":false,\"text\":\"\\nYou can also pass in Human Readable parameters with the parseAbiParameters utility.\\nimport { decodeAbiParameters, parseAbiParameters } from &#x27;viem&#x27;\\n \\nconst values = decodeAbiParameters(\\n  parseAbiParameters(&#x27;string x, uint y, bool z&#x27;),\\n  &#x27;0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000&#x27;\\n)\\n// [&#x27;wagmi&#x27;, 420n, true]\\n\",\"title\":\"Human Readable\",\"titles\":[\"decodeAbiParameters\",\"Usage\"]},{\"href\":\"/docs/abi/decodeAbiParameters#return-value\",\"html\":\"\\n<p>The decoded data. Type is inferred from the ABI.</p>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#return-value\",\"isPage\":false,\"text\":\"\\nThe decoded data. Type is inferred from the ABI.\\n\",\"title\":\"Return Value\",\"titles\":[\"decodeAbiParameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"decodeAbiParameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#params\",\"html\":\"\\n<ul>\\n<li><strong>Type</strong>: <a href=\\\"/docs/glossary/types#abiparameter\\\"><code>AbiParameter[]</code></a></li>\\n</ul>\\n<p>The set of ABI parameters to decode against <code>data</code>, in the shape of the <code>inputs</code> or <code>outputs</code> attribute of an ABI event/function.</p>\\n<p>These parameters must include valid <a href=\\\"https://docs.soliditylang.org/en/develop/abi-spec#types\\\">ABI types</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> values</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint32&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  &#x27;0x0000000000000000000000000000000000000000000000000000000000010f2c&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#params\",\"isPage\":false,\"text\":\"\\n\\nType: AbiParameter[]\\n\\nThe set of ABI parameters to decode against data, in the shape of the inputs or outputs attribute of an ABI event/function.\\nThese parameters must include valid ABI types.\\nconst values = decodeAbiParameters(\\n  [{ name: &#x27;x&#x27;, type: &#x27;uint32&#x27; }], \\n  &#x27;0x0000000000000000000000000000000000000000000000000000000000010f2c&#x27;,\\n)\\n\",\"title\":\"params\",\"titles\":[\"decodeAbiParameters\",\"Parameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#data\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></li>\\n</ul>\\n<p>The ABI encoded data.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> values</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint32&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  &#x27;0x0000000000000000000000000000000000000000000000000000000000010f2c&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#data\",\"isPage\":false,\"text\":\"\\n\\nType: Hex\\n\\nThe ABI encoded data.\\nconst values = decodeAbiParameters(\\n  [{ name: &#x27;x&#x27;, type: &#x27;uint32&#x27; }],\\n  &#x27;0x0000000000000000000000000000000000000000000000000000000000010f2c&#x27;, \\n)\\n\",\"title\":\"data\",\"titles\":[\"decodeAbiParameters\",\"Parameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#more-examples\",\"html\":\"\\n\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#more-examples\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"More Examples\",\"titles\":[\"decodeAbiParameters\"]},{\"href\":\"/docs/abi/decodeAbiParameters#simple-struct\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { abi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> values</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].outputs,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">  &#x27;0x00000000000000000000000000000000000000000000000000000000000001a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// { x: 420n, y: true, z: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27; }</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> abi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;staticStruct&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        components: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;y&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;bool&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;foo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;tuple&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span></span></code></pre></div><div data-title=\\\"Example.sol\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"Example.sol\\\" data-lang=\\\"solidity\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">contract</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> Example</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  struct</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> Foo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    uint256</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> x;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    bool</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> y;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> z;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> staticStruct</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(...) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">returns</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">Foo</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> calldata</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\"> foo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ... </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> foo;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre></div></div>\",\"id\":\"pages/docs/abi/decodeAbiParameters.md#simple-struct\",\"isPage\":false,\"text\":\"\\nimport { abi } from &#x27;./abi&#x27;\\n \\nconst values = decodeAbiParameters(\\n  abi[0].outputs,\\n  &#x27;0x00000000000000000000000000000000000000000000000000000000000001a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;,\\n)\\n// { x: 420n, y: true, z: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27; }export const abi = [\\n  {\\n    name: &#x27;staticStruct&#x27;,\\n    outputs: [\\n      {\\n        components: [\\n          {\\n            name: &#x27;x&#x27;,\\n            type: &#x27;uint256&#x27;,\\n          },\\n          {\\n            name: &#x27;y&#x27;,\\n            type: &#x27;bool&#x27;,\\n          },\\n          {\\n            name: &#x27;z&#x27;,\\n            type: &#x27;address&#x27;,\\n          },\\n        ],\\n        name: &#x27;foo&#x27;,\\n        type: &#x27;tuple&#x27;,\\n      },\\n    ],\\n  }\\n] as constcontract Example {\\n  struct Foo {\\n    uint256 x;\\n    bool y;\\n    address z;\\n  }\\n \\n  function staticStruct(...) returns (Foo calldata foo) { \\n    ... \\n    return foo;\\n  }\\n}\",\"title\":\"Simple struct\",\"titles\":[\"decodeAbiParameters\",\"More Examples\"]}]}}"
