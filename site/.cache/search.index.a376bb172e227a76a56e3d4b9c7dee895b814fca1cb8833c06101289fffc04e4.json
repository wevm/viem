"{\"value\":{\"mdx\":\"# multicall [Batches up multiple functions on a contract in a single call.]\\n\\nSimilar to [`readContract`](/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall). \\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { publicClient } from './client'\\nimport { wagmiAbi } from './abi'\\n\\nconst wagmiContract = {\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi\\n} as const\\n\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      ...wagmiContract,\\n      functionName: 'totalSupply',\\n    },\\n    {\\n      ...wagmiContract,\\n      functionName: 'ownerOf',\\n      args: [69420n]\\n    },\\n    {\\n      ...wagmiContract,\\n      functionName: 'mint'\\n    }\\n  ]\\n})\\n/**\\n * [\\n *  { result: 424122n, status: 'success' },\\n *  { result: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b', status: 'success' },\\n *  { error: [ContractFunctionExecutionError: ...], status: 'failure' }\\n * ]\\n */\\n```\\n\\n```ts [abi.ts]\\nexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [],\\n    name: \\\"totalSupply\\\",\\n    outputs: [{ name: \\\"\\\", type: \\\"uint256\\\" }],\\n    stateMutability: \\\"view\\\",\\n    type: \\\"function\\\",\\n  },\\n  {\\n    inputs: [{ name: \\\"tokenId\\\", type: \\\"uint256\\\" }],\\n    name: \\\"ownerOf\\\",\\n    outputs: [{ name: \\\"\\\", type: \\\"address\\\" }],\\n    stateMutability: \\\"view\\\",\\n    type: \\\"function\\\",\\n  },\\n  {\\n    inputs: [],\\n    name: \\\"mint\\\",\\n    outputs: [],\\n    stateMutability: \\\"view\\\",\\n    type: \\\"function\\\",\\n  },\\n  ...\\n] as const;\\n```\\n\\n```ts [client.ts]\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n## Return Value\\n\\n`({ data: <inferred>, status: 'success' } | { error: string, status: 'reverted' })[]`\\n\\nAn array of results with accompanying status.\\n\\nAdditionally, when [`allowFailure`](#allowfailure-optional) is set to `false`, it directly returns an array of inferred data:\\n\\n`(<inferred>)[]`\\n\\n## Parameters\\n\\n### contracts.address\\n\\n- **Type:** [`Address`](/docs/glossary/types#address)\\n\\nThe contract address.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2', // [!code focus]\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ]\\n})\\n```\\n\\n### contracts.abi\\n\\n- **Type:** [`Abi`](/docs/glossary/types#abi)\\n\\nThe contract ABI.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi, // [!code focus]\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ]\\n})\\n```\\n\\n### contracts.functionName\\n\\n- **Type**: `string`\\n\\nThe function name to call.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply', // [!code focus]\\n    },\\n    ...\\n  ]\\n})\\n```\\n\\n### contracts.args (optional)\\n\\n- **Type:** Inferred from ABI.\\n\\nArguments to pass to function call.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'balanceOf',\\n      args: ['0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b'] // [!code focus]\\n    },\\n    ...\\n  ]\\n})\\n```\\n\\n### allowFailure (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `true`\\n\\nWhether or not the `multicall` function should throw if a call reverts. If set to `true` (default), and a call reverts, then `multicall` will fail silently and its error will be logged in the `results` array.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ],\\n  allowFailure: false // [!code focus]\\n})\\n```\\n\\n### batchSize (optional)\\n\\n- **Type:** `number`\\n- **Default:** [`client.batch.multicall.batchSize`](/docs/clients/public#batch-multicall-batchsize-optional) (if set) or `1024`\\n\\nThe maximum size (in bytes) for each calldata chunk. Set to `0` to disable the size limit.\\n\\n> Note: Some RPC Providers limit the amount of calldata (`data`) that can be sent in a single `eth_call` request. It is best to check with your RPC Provider to see if there are any calldata size limits to `eth_call` requests.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ],\\n  batchSize: 4096 // 4kB // [!code focus]\\n})\\n```\\n\\n### blockNumber (optional)\\n\\n- **Type:** `number`\\n\\nThe block number to perform the read against.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ],\\n  blockNumber: 15121123n, // [!code focus]\\n})\\n```\\n\\n### multicallAddress (optional)\\n\\n- **Type:** [`Address`](/docs/glossary/types#address)\\n- **Default:** `client.chain.contracts.multicall3.address`\\n\\nAddress of Multicall Contract.\\n\\n```ts\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ],\\n  multicallAddress: '0xca11bde05977b3631167028862be2a173976ca11' // [!code focus]\\n})\\n```\\n\\n### stateOverride (optional)\\n\\n- **Type:** [`StateOverride`](/docs/glossary/types#stateoverride)\\n\\nThe state override set is an optional address-to-state mapping, where each entry specifies some state to be ephemerally overridden prior to executing the call.\\n\\n```ts\\nconst data = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi: wagmiAbi,\\n      functionName: 'totalSupply',\\n    },\\n    ...\\n  ],\\n  stateOverride: [ // [!code focus]\\n    { // [!code focus]\\n      address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', // [!code focus]\\n      balance: parseEther('1'), // [!code focus]\\n      stateDiff: [ // [!code focus]\\n        { // [!code focus]\\n          slot: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0', // [!code focus]\\n          value: '0x00000000000000000000000000000000000000000000000000000000000001a4', // [!code focus]\\n        }, // [!code focus]\\n      ], // [!code focus]\\n    } // [!code focus]\\n  ], // [!code focus]\\n})\\n```\\n\\n## Live Example\\n\\nCheck out the usage of `multicall` in the live [Multicall Example](https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_multicall) below.\\n\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_multicall?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=0&ctl=1\\\"></iframe>\\n\",\"document\":[{\"href\":\"/docs/contract/multicall#multicall\",\"html\":\"<div role=\\\"doc-subtitle\\\">Batches up multiple functions on a contract in a single call.</div></header>\\n<p>Similar to <a href=\\\"/docs/contract/readContract\\\"><code>readContract</code></a>, but batches up multiple functions on a contract in a single RPC call via the <a href=\\\"https://github.com/mds1/multicall\\\"><code>multicall3</code> contract</a>.</p>\\n\",\"id\":\"pages/docs/contract/multicall.md#multicall\",\"isPage\":true,\"text\":\"Batches up multiple functions on a contract in a single call.\\nSimilar to readContract, but batches up multiple functions on a contract in a single RPC call via the multicall3 contract.\\n\",\"title\":\"multicall\",\"titles\":[]},{\"href\":\"/docs/contract/multicall#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiContract</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">wagmiContract,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">wagmiContract,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      args: [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">wagmiContract,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;mint&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> *  { result: 424122n, status: &#x27;success&#x27; },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> *  { result: &#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;, status: &#x27;success&#x27; },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> *  { error: [ContractFunctionExecutionError: ...], status: &#x27;failure&#x27; }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> */</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;totalSupply&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;uint256&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;view&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;function&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;tokenId&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;uint256&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;ownerOf&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;address&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;view&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;function&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;mint&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;view&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;function&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/multicall.md#usage\",\"isPage\":false,\"text\":\"\\nimport { publicClient } from &#x27;./client&#x27;\\nimport { wagmiAbi } from &#x27;./abi&#x27;\\n \\nconst wagmiContract = {\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi\\n} as const\\n \\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      ...wagmiContract,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    {\\n      ...wagmiContract,\\n      functionName: &#x27;ownerOf&#x27;,\\n      args: [69420n]\\n    },\\n    {\\n      ...wagmiContract,\\n      functionName: &#x27;mint&#x27;\\n    }\\n  ]\\n})\\n/**\\n * [\\n *  { result: 424122n, status: &#x27;success&#x27; },\\n *  { result: &#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;, status: &#x27;success&#x27; },\\n *  { error: [ContractFunctionExecutionError: ...], status: &#x27;failure&#x27; }\\n * ]\\n */export const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [],\\n    name: &quot;totalSupply&quot;,\\n    outputs: [{ name: &quot;&quot;, type: &quot;uint256&quot; }],\\n    stateMutability: &quot;view&quot;,\\n    type: &quot;function&quot;,\\n  },\\n  {\\n    inputs: [{ name: &quot;tokenId&quot;, type: &quot;uint256&quot; }],\\n    name: &quot;ownerOf&quot;,\\n    outputs: [{ name: &quot;&quot;, type: &quot;address&quot; }],\\n    stateMutability: &quot;view&quot;,\\n    type: &quot;function&quot;,\\n  },\\n  {\\n    inputs: [],\\n    name: &quot;mint&quot;,\\n    outputs: [],\\n    stateMutability: &quot;view&quot;,\\n    type: &quot;function&quot;,\\n  },\\n  ...\\n] as const;import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"multicall\"]},{\"href\":\"/docs/contract/multicall#return-value\",\"html\":\"\\n<p><code>({ data: &lt;inferred&gt;, status: &#x27;success&#x27; } | { error: string, status: &#x27;reverted&#x27; })[]</code></p>\\n<p>An array of results with accompanying status.</p>\\n<p>Additionally, when <a href=\\\"#allowfailure-optional\\\"><code>allowFailure</code></a> is set to <code>false</code>, it directly returns an array of inferred data:</p>\\n<p><code>(&lt;inferred&gt;)[]</code></p>\\n\",\"id\":\"pages/docs/contract/multicall.md#return-value\",\"isPage\":false,\"text\":\"\\n({ data: &lt;inferred&gt;, status: &#x27;success&#x27; } | { error: string, status: &#x27;reverted&#x27; })[]\\nAn array of results with accompanying status.\\nAdditionally, when allowFailure is set to false, it directly returns an array of inferred data:\\n(&lt;inferred&gt;)[]\\n\",\"title\":\"Return Value\",\"titles\":[\"multicall\"]},{\"href\":\"/docs/contract/multicall#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/contract/multicall.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"multicall\"]},{\"href\":\"/docs/contract/multicall#contractsaddress\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#address\\\"><code>Address</code></a></li>\\n</ul>\\n<p>The contract address.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#contractsaddress\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\n\\nThe contract address.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;, \\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ]\\n})\\n\",\"title\":\"contracts.address\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#contractsabi\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#abi\\\"><code>Abi</code></a></li>\\n</ul>\\n<p>The contract ABI.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#contractsabi\",\"isPage\":false,\"text\":\"\\n\\nType: Abi\\n\\nThe contract ABI.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi, \\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ]\\n})\\n\",\"title\":\"contracts.abi\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#contractsfunctionname\",\"html\":\"\\n<ul>\\n<li><strong>Type</strong>: <code>string</code></li>\\n</ul>\\n<p>The function name to call.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#contractsfunctionname\",\"isPage\":false,\"text\":\"\\n\\nType: string\\n\\nThe function name to call.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;, \\n    },\\n    ...\\n  ]\\n})\\n\",\"title\":\"contracts.functionName\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#contractsargs-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> Inferred from ABI.</li>\\n</ul>\\n<p>Arguments to pass to function call.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;balanceOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#contractsargs-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Inferred from ABI.\\n\\nArguments to pass to function call.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;balanceOf&#x27;,\\n      args: [&#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;] \\n    },\\n    ...\\n  ]\\n})\\n\",\"title\":\"contracts.args (optional)\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#allowfailure-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>true</code></li>\\n</ul>\\n<p>Whether or not the <code>multicall</code> function should throw if a call reverts. If set to <code>true</code> (default), and a call reverts, then <code>multicall</code> will fail silently and its error will be logged in the <code>results</code> array.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  allowFailure: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#allowfailure-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: true\\n\\nWhether or not the multicall function should throw if a call reverts. If set to true (default), and a call reverts, then multicall will fail silently and its error will be logged in the results array.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ],\\n  allowFailure: false\\n})\\n\",\"title\":\"allowFailure (optional)\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#batchsize-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <a href=\\\"/docs/clients/public#batch-multicall-batchsize-optional\\\"><code>client.batch.multicall.batchSize</code></a> (if set) or <code>1024</code></li>\\n</ul>\\n<p>The maximum size (in bytes) for each calldata chunk. Set to <code>0</code> to disable the size limit.</p>\\n<blockquote>\\n<p>Note: Some RPC Providers limit the amount of calldata (<code>data</code>) that can be sent in a single <code>eth_call</code> request. It is best to check with your RPC Provider to see if there are any calldata size limits to <code>eth_call</code> requests.</p>\\n</blockquote>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  batchSize: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">4096</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> // 4kB </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#batchsize-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: client.batch.multicall.batchSize (if set) or 1024\\n\\nThe maximum size (in bytes) for each calldata chunk. Set to 0 to disable the size limit.\\n\\nNote: Some RPC Providers limit the amount of calldata (data) that can be sent in a single eth_call request. It is best to check with your RPC Provider to see if there are any calldata size limits to eth_call requests.\\n\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ],\\n  batchSize: 4096 // 4kB \\n})\\n\",\"title\":\"batchSize (optional)\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#blocknumber-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>The block number to perform the read against.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  blockNumber: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">15121123</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#blocknumber-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nThe block number to perform the read against.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ],\\n  blockNumber: 15121123n, \\n})\\n\",\"title\":\"blockNumber (optional)\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#multicalladdress-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#address\\\"><code>Address</code></a></li>\\n<li><strong>Default:</strong> <code>client.chain.contracts.multicall3.address</code></li>\\n</ul>\\n<p>Address of Multicall Contract.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> results</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  multicallAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xca11bde05977b3631167028862be2a173976ca11&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#multicalladdress-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: client.chain.contracts.multicall3.address\\n\\nAddress of Multicall Contract.\\nconst results = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ],\\n  multicallAddress: &#x27;0xca11bde05977b3631167028862be2a173976ca11&#x27;\\n})\\n\",\"title\":\"multicallAddress (optional)\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#stateoverride-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#stateoverride\\\"><code>StateOverride</code></a></li>\\n</ul>\\n<p>The state override set is an optional address-to-state mapping, where each entry specifies some state to be ephemerally overridden prior to executing the call.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">multicall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contracts: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;totalSupply&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  stateOverride: [ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      balance: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      stateDiff: [ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          slot: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          value: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x00000000000000000000000000000000000000000000000000000000000001a4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      ], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/multicall.md#stateoverride-optional\",\"isPage\":false,\"text\":\"\\n\\nType: StateOverride\\n\\nThe state override set is an optional address-to-state mapping, where each entry specifies some state to be ephemerally overridden prior to executing the call.\\nconst data = await publicClient.multicall({\\n  contracts: [\\n    {\\n      address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n      abi: wagmiAbi,\\n      functionName: &#x27;totalSupply&#x27;,\\n    },\\n    ...\\n  ],\\n  stateOverride: [ \\n    { \\n      address: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;, \\n      balance: parseEther(&#x27;1&#x27;), \\n      stateDiff: [ \\n        { \\n          slot: &#x27;0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0&#x27;, \\n          value: &#x27;0x00000000000000000000000000000000000000000000000000000000000001a4&#x27;, \\n        }, \\n      ], \\n    } \\n  ], \\n})\\n\",\"title\":\"stateOverride (optional)\",\"titles\":[\"multicall\",\"Parameters\"]},{\"href\":\"/docs/contract/multicall#live-example\",\"html\":\"\\n<p>Check out the usage of <code>multicall</code> in the live <a href=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_multicall\\\">Multicall Example</a> below.</p>\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_multicall?embed=1&amp;file=index.ts&amp;hideNavigation=1&amp;hideDevTools=true&amp;terminalHeight=0&amp;ctl=1\\\"></iframe>\",\"id\":\"pages/docs/contract/multicall.md#live-example\",\"isPage\":false,\"text\":\"\\nCheck out the usage of multicall in the live Multicall Example below.\\n\",\"title\":\"Live Example\",\"titles\":[\"multicall\"]}]}}"
