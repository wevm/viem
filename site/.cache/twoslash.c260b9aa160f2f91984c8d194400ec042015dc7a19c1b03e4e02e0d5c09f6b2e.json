"{\"value\":{\"code\":\"const result = await client.readContract({\\n\\n\\n  address: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',\\n  abi: erc20Abi,\\n  functionName: 'balanceOf',\\n  \\n  \\n\\n  // ↑ Notice how \\\"transfer\\\" is not included since it is not a \\\"read\\\" function\\n\\n  args: ['0x27a69ffba1e939ddcfecc8c7e0f967b872bac65c'],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const result: bigint\",\"start\":6,\"length\":6,\"target\":\"result\",\"line\":0,\"character\":6},{\"type\":\"query\",\"text\":\"const result: bigint\",\"start\":6,\"length\":6,\"target\":\"result\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":21,\"length\":6,\"target\":\"client\",\"line\":0,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) readContract: <readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: false;\\n        readonly name: \\\"value\\\";\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"balanceOf\\\", readonly [...]>(args: ReadContractParameters<...>) => Promise<...>\",\"docs\":\"Calls a read-only function on a contract, and returns the response.\\n\\n- Docs: https://viem.sh/docs/contract/readContract\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\",\"tags\":[[\"remarks\",\"A \\\"read-only\\\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\\n\\nInternally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\"],[\"param\",\"args - {@link ReadContractParameters}\"],[\"returns\",\"The response from the contract. Type is inferred. {@link ReadContractReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { readContract } from 'viem/contract'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst result = await client.readContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\\n  functionName: 'balanceOf',\\n  args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\\n})\\n// 424122n\"]],\"start\":28,\"length\":12,\"target\":\"readContract\",\"line\":0,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":47,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: false;\\n        readonly name: \\\"value\\\";\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"start\":104,\"length\":3,\"target\":\"abi\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const erc20Abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: false;\\n        readonly name: \\\"value\\\";\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport erc20Abi\",\"docs\":\"[ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\",\"start\":109,\"length\":8,\"target\":\"erc20Abi\",\"line\":4,\"character\":7},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"symbol\\\" | \\\"name\\\" | \\\"balanceOf\\\" | \\\"allowance\\\" | \\\"decimals\\\" | \\\"totalSupply\\\"\",\"start\":121,\"length\":12,\"target\":\"functionName\",\"line\":5,\"character\":2},{\"type\":\"query\",\"text\":\"(property) functionName: \\\"symbol\\\" | \\\"name\\\" | \\\"balanceOf\\\" | \\\"allowance\\\" | \\\"decimals\\\" | \\\"totalSupply\\\"\",\"start\":121,\"length\":12,\"target\":\"functionName\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`]\",\"start\":237,\"length\":4,\"target\":\"args\",\"line\":11,\"character\":2},{\"type\":\"query\",\"text\":\"(property) args: readonly [`0x${string}`]\",\"start\":237,\"length\":4,\"target\":\"args\",\"line\":11,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[470,478],[311,327],[197,206],[0,154]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":0,\"end\":13}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"// @noErrors\\nimport { createPublicClient, http, erc20Abi, parseAbi } from 'viem'\\n\\nconst client = createPublicClient({\\n  transport: http()\\n})\\n// ---cut---\\nconst result = await client.readContract({\\n  //  ^?\\n\\n\\n  address: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',\\n  abi: erc20Abi,\\n  functionName: 'balanceOf',\\n  //         ^?\\n  \\n  \\n\\n  // ↑ Notice how \\\"transfer\\\" is not included since it is not a \\\"read\\\" function\\n\\n  args: ['0x27a69ffba1e939ddcfecc8c7e0f967b872bac65c'],\\n  // ^?\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[160,295,419],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[{\"type\":\"query\",\"text\":\"const result: bigint\",\"start\":6,\"length\":6,\"target\":\"result\",\"line\":0,\"character\":6},{\"type\":\"query\",\"text\":\"(property) functionName: \\\"symbol\\\" | \\\"name\\\" | \\\"balanceOf\\\" | \\\"allowance\\\" | \\\"decimals\\\" | \\\"totalSupply\\\"\",\"start\":121,\"length\":12,\"target\":\"functionName\",\"line\":5,\"character\":2},{\"type\":\"query\",\"text\":\"(property) args: readonly [`0x${string}`]\",\"start\":237,\"length\":4,\"target\":\"args\",\"line\":11,\"character\":2}],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const result: bigint\",\"start\":6,\"length\":6,\"target\":\"result\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":21,\"length\":6,\"target\":\"client\",\"line\":0,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) readContract: <readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: false;\\n        readonly name: \\\"value\\\";\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"balanceOf\\\", readonly [...]>(args: ReadContractParameters<...>) => Promise<...>\",\"docs\":\"Calls a read-only function on a contract, and returns the response.\\n\\n- Docs: https://viem.sh/docs/contract/readContract\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\",\"tags\":[[\"remarks\",\"A \\\"read-only\\\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\\n\\nInternally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\"],[\"param\",\"args - {@link ReadContractParameters}\"],[\"returns\",\"The response from the contract. Type is inferred. {@link ReadContractReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { readContract } from 'viem/contract'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst result = await client.readContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\\n  functionName: 'balanceOf',\\n  args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\\n})\\n// 424122n\"]],\"start\":28,\"length\":12,\"target\":\"readContract\",\"line\":0,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":47,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: false;\\n        readonly name: \\\"value\\\";\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"start\":104,\"length\":3,\"target\":\"abi\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const erc20Abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: false;\\n        readonly name: \\\"value\\\";\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport erc20Abi\",\"docs\":\"[ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\",\"start\":109,\"length\":8,\"target\":\"erc20Abi\",\"line\":4,\"character\":7},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"symbol\\\" | \\\"name\\\" | \\\"balanceOf\\\" | \\\"allowance\\\" | \\\"decimals\\\" | \\\"totalSupply\\\"\",\"start\":121,\"length\":12,\"target\":\"functionName\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`]\",\"start\":237,\"length\":4,\"target\":\"args\",\"line\":11,\"character\":2}],\"tags\":[]}}"
