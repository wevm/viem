"{\"value\":{\"mdx\":\"---\\ndescription: Watches and returns pending transaction hashes.\\n---\\n\\n# watchPendingTransactions\\n\\nWatches and returns pending transaction hashes.\\n\\nThis Action will batch up all the pending transactions found within the [`pollingInterval`](#pollinginterval-optional), and invoke them via [`onTransactions`](#ontransactions).\\n\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { publicClient } from './client'\\n\\nconst unwatch = publicClient.watchPendingTransactions( // [!code focus:99]\\n  { onTransactions: hashes => console.log(hashes) }\\n)\\n// @log: > ['0x...', '0x...', '0x...']\\n// @log: > ['0x...', '0x...']\\n// @log: > ['0x...', '0x...', '0x...', ...]\\n```\\n\\n```ts twoslash [client.ts] filename=\\\"client.ts\\\"\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n## Returns\\n\\n`UnwatchFn`\\n\\nA function that can be invoked to stop watching for new pending transaction hashes.\\n\\n## Parameters\\n\\n### onTransactions\\n\\n- **Type:** `(hashes: '0x${string}'[]) => void`\\n\\nThe new pending transaction hashes.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { onTransactions: hashes => console.log(hashes) } // [!code focus:1]\\n)\\n```\\n\\n### batch (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `true`\\n\\nWhether or not to batch the transaction hashes between polling intervals.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    batch: false, // [!code focus]\\n    onTransactions: hashes => console.log(hashes),\\n  }\\n)\\n```\\n\\n### onError (optional)\\n\\n- **Type:** `(error: Error) => void`\\n\\nError thrown from listening for new pending transactions.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\n// @noErrors\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    onError: error => console.log(error), // [!code focus:1]\\n    onTransactions: hashes => console.log(hashes),\\n  }\\n)\\n```\\n\\n### poll (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `false` for WebSocket Clients, `true` for non-WebSocket Clients\\n\\nWhether or not to use a polling mechanism to check for new pending transactions instead of a WebSocket subscription.\\n\\nThis option is only configurable for Clients with a [WebSocket Transport](/docs/clients/transports/websocket).\\n\\n```ts twoslash\\nimport { createPublicClient, webSocket } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: webSocket()\\n})\\n\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    onTransactions: transactions => console.log(transactions),\\n    poll: true, // [!code focus]\\n  }\\n)\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n\\nPolling frequency (in ms). Defaults to the Client's `pollingInterval` config.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\n// @noErrors\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    pollingInterval: 1_000, // [!code focus]\\n    onTransactions: hashes => console.log(hashes),\\n  }\\n)\\n```\\n\\n## JSON-RPC Methods\\n\\n- When `poll: true`\\n  - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\\n  - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\\n- When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\\\"newPendingTransactions\\\"` event. \",\"document\":[{\"href\":\"/docs/actions/public/watchPendingTransactions#watchpendingtransactions\",\"html\":\"</header>\\n<p>Watches and returns pending transaction hashes.</p>\\n<p>This Action will batch up all the pending transactions found within the <a href=\\\"#pollinginterval-optional\\\"><code>pollingInterval</code></a>, and invoke them via <a href=\\\"#ontransactions\\\"><code>onTransactions</code></a>.</p>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#watchpendingtransactions\",\"isPage\":true,\"text\":\"\\nWatches and returns pending transaction hashes.\\nThis Action will batch up all the pending transactions found within the pollingInterval, and invoke them via onTransactions.\\n\",\"title\":\"watchPendingTransactions\",\"titles\":[]},{\"href\":\"/docs/actions/public/watchPendingTransactions#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: client.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchPendingTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">( </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">onTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">hashes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(hashes) }</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: &gt; [&#x27;0x...&#x27;, &#x27;0x...&#x27;, &#x27;0x...&#x27;]</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: &gt; [&#x27;0x...&#x27;, &#x27;0x...&#x27;]</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: &gt; [&#x27;0x...&#x27;, &#x27;0x...&#x27;, &#x27;0x...&#x27;, ...]</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#usage\",\"isPage\":false,\"text\":\"\\n// @filename: client.ts\\nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// @filename: example.js\\n \\n// ---cut---\\nimport { publicClient } from &#x27;./client&#x27;\\n \\nconst unwatch = publicClient.watchPendingTransactions( \\n  { onTransactions: hashes =&gt; console.log(hashes) }\\n)\\n// @log: &gt; [&#x27;0x...&#x27;, &#x27;0x...&#x27;, &#x27;0x...&#x27;]\\n \\n// @log: &gt; [&#x27;0x...&#x27;, &#x27;0x...&#x27;]\\n \\n// @log: &gt; [&#x27;0x...&#x27;, &#x27;0x...&#x27;, &#x27;0x...&#x27;, ...]import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"watchPendingTransactions\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#returns\",\"html\":\"\\n<p><code>UnwatchFn</code></p>\\n<p>A function that can be invoked to stop watching for new pending transaction hashes.</p>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#returns\",\"isPage\":false,\"text\":\"\\nUnwatchFn\\nA function that can be invoked to stop watching for new pending transaction hashes.\\n\",\"title\":\"Returns\",\"titles\":[\"watchPendingTransactions\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"watchPendingTransactions\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#ontransactions\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(hashes: &#x27;0x${string}&#x27;[]) =&gt; void</code></li>\\n</ul>\\n<p>The new pending transaction hashes.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchPendingTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">onTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">hashes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(hashes) } </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#ontransactions\",\"isPage\":false,\"text\":\"\\n\\nType: (hashes: &#x27;0x${string}&#x27;[]) =&gt; void\\n\\nThe new pending transaction hashes.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { onTransactions: hashes =&gt; console.log(hashes) } \\n)\\n\",\"title\":\"onTransactions\",\"titles\":[\"watchPendingTransactions\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#batch-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>true</code></li>\\n</ul>\\n<p>Whether or not to batch the transaction hashes between polling intervals.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchPendingTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    batch: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">hashes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(hashes),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#batch-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: true\\n\\nWhether or not to batch the transaction hashes between polling intervals.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    batch: false, \\n    onTransactions: hashes =&gt; console.log(hashes),\\n  }\\n)\\n\",\"title\":\"batch (optional)\",\"titles\":[\"watchPendingTransactions\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#onerror-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(error: Error) =&gt; void</code></li>\\n</ul>\\n<p>Error thrown from listening for new pending transactions.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchPendingTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onError</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">error</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(error), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">hashes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(hashes),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#onerror-optional\",\"isPage\":false,\"text\":\"\\n\\nType: (error: Error) =&gt; void\\n\\nError thrown from listening for new pending transactions.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\n// @noErrors\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    onError: error =&gt; console.log(error), \\n    onTransactions: hashes =&gt; console.log(hashes),\\n  }\\n)\\n\",\"title\":\"onError (optional)\",\"titles\":[\"watchPendingTransactions\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#poll-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>false</code> for WebSocket Clients, <code>true</code> for non-WebSocket Clients</li>\\n</ul>\\n<p>Whether or not to use a polling mechanism to check for new pending transactions instead of a WebSocket subscription.</p>\\n<p>This option is only configurable for Clients with a <a href=\\\"/docs/clients/transports/websocket\\\">WebSocket Transport</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, webSocket } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">webSocket</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchPendingTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">transactions</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(transactions),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    poll: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#poll-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: false for WebSocket Clients, true for non-WebSocket Clients\\n\\nWhether or not to use a polling mechanism to check for new pending transactions instead of a WebSocket subscription.\\nThis option is only configurable for Clients with a WebSocket Transport.\\nimport { createPublicClient, webSocket } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: webSocket()\\n})\\n \\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    onTransactions: transactions =&gt; console.log(transactions),\\n    poll: true, \\n  }\\n)\\n\",\"title\":\"poll (optional)\",\"titles\":[\"watchPendingTransactions\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Polling frequency (in ms). Defaults to the Client&#x27;s <code>pollingInterval</code> config.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchPendingTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onTransactions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">hashes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(hashes),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nPolling frequency (in ms). Defaults to the Client&#x27;s pollingInterval config.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\n// @noErrors\\nconst unwatch = publicClient.watchPendingTransactions(\\n  { \\n    pollingInterval: 1_000, \\n    onTransactions: hashes =&gt; console.log(hashes),\\n  }\\n)\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"watchPendingTransactions\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchPendingTransactions#json-rpc-methods\",\"html\":\"\\n<ul>\\n<li>When <code>poll: true</code>\\n<ul>\\n<li>Calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter\\\"><code>eth_newPendingTransactionFilter</code></a> to initialize the filter.</li>\\n<li>Calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges\\\"><code>eth_getFilterChanges</code></a> on a polling interval.</li>\\n</ul>\\n</li>\\n<li>When <code>poll: false</code> &amp; WebSocket Transport, uses a WebSocket subscription via <a href=\\\"https://docs.alchemy.com/reference/eth-subscribe-polygon\\\"><code>eth_subscribe</code></a> and the <code>&quot;newPendingTransactions&quot;</code> event.</li>\\n</ul>\",\"id\":\"pages/docs/actions/public/watchPendingTransactions.md#json-rpc-methods\",\"isPage\":false,\"text\":\"\\n\\nWhen poll: true\\n\\nCalls eth_newPendingTransactionFilter to initialize the filter.\\nCalls eth_getFilterChanges on a polling interval.\\n\\n\\nWhen poll: false &amp; WebSocket Transport, uses a WebSocket subscription via eth_subscribe and the &quot;newPendingTransactions&quot; event.\\n\",\"title\":\"JSON-RPC Methods\",\"titles\":[\"watchPendingTransactions\"]}]}}"
