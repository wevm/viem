"{\"value\":{\"code\":\"const filter = await publicClient.createEventFilter({\\n  toBlock: 70120n // [!code focus]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const filter: {\\n    id: Hex;\\n    request: EIP1193RequestFn<readonly [{\\n        Method: \\\"eth_getFilterChanges\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[] | Hex[];\\n    }, {\\n        Method: \\\"eth_getFilterLogs\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[];\\n    }, {\\n        ...;\\n    }]>;\\n    ... 6 more ...;\\n    strict?: undefined | undefined;\\n}\",\"start\":6,\"length\":6,\"target\":\"filter\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":21,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) createEventFilter: <undefined, undefined, undefined, undefined, 70120n, undefined, undefined>(args?: CreateEventFilterParameters<undefined, undefined, undefined, undefined, 70120n, undefined, undefined> | undefined) => Promise<...>\",\"docs\":\"Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\\n\\n- Docs: https://viem.sh/docs/actions/public/createEventFilter\\n- JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\",\"tags\":[[\"param\",\"args - {@link CreateEventFilterParameters}\"],[\"returns\",\"[`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst filter = await client.createEventFilter({\\n  address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\\n})\"]],\"start\":34,\"length\":17,\"target\":\"createEventFilter\",\"line\":0,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) toBlock?: bigint | BlockTag | undefined\",\"start\":56,\"length\":7,\"target\":\"toBlock\",\"line\":1,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst filter = await publicClient.createEventFilter({\\n  toBlock: 70120n // [!code focus]\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const filter: {\\n    id: Hex;\\n    request: EIP1193RequestFn<readonly [{\\n        Method: \\\"eth_getFilterChanges\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[] | Hex[];\\n    }, {\\n        Method: \\\"eth_getFilterLogs\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[];\\n    }, {\\n        ...;\\n    }]>;\\n    ... 6 more ...;\\n    strict?: undefined | undefined;\\n}\",\"start\":6,\"length\":6,\"target\":\"filter\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":21,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) createEventFilter: <undefined, undefined, undefined, undefined, 70120n, undefined, undefined>(args?: CreateEventFilterParameters<undefined, undefined, undefined, undefined, 70120n, undefined, undefined> | undefined) => Promise<...>\",\"docs\":\"Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\\n\\n- Docs: https://viem.sh/docs/actions/public/createEventFilter\\n- JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\",\"tags\":[[\"param\",\"args - {@link CreateEventFilterParameters}\"],[\"returns\",\"[`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst filter = await client.createEventFilter({\\n  address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\\n})\"]],\"start\":34,\"length\":17,\"target\":\"createEventFilter\",\"line\":0,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) toBlock?: bigint | BlockTag | undefined\",\"start\":56,\"length\":7,\"target\":\"toBlock\",\"line\":1,\"character\":2}],\"tags\":[]}}"
