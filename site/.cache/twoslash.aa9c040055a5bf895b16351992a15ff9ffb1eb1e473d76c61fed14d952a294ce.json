"{\"value\":{\"code\":\"import { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createPaymasterClient({\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/11155111/rpc')\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n\\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":9,\"length\":9,\"target\":\"rpcSchema\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":39,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":2,\"character\":5},{\"type\":\"hover\",\"text\":\"(property) Method: \\\"eth_wagmi\\\"\",\"start\":79,\"length\":6,\"target\":\"Method\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) Parameters: [string]\",\"start\":119,\"length\":10,\"target\":\"Parameters\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) ReturnType: string\",\"start\":159,\"length\":10,\"target\":\"ReturnType\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":222,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPaymasterClient<HttpTransport<undefined, false>, CustomRpcSchema>(parameters: {\\n    cacheTime?: number | undefined | undefined;\\n    key?: string | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    pollingInterval?: number | undefined | undefined;\\n    rpcSchema?: CustomRpcSchema | undefined;\\n    transport: HttpTransport<...>;\\n}): {\\n    ...;\\n}\\nimport createPaymasterClient\",\"docs\":\"Creates a Paymaster Client.\\n\\n- Docs: https://viem.sh/account-abstraction/clients/paymaster\",\"tags\":[[\"param\",\"config - {@link PaymasterClientConfig}\"],[\"returns\",\"A Paymaster Client. {@link PaymasterClient}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\"]],\"start\":231,\"length\":21,\"target\":\"createPaymasterClient\",\"line\":8,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) rpcSchema?: CustomRpcSchema | undefined\",\"docs\":\"Typed JSON-RPC schema for the client.\",\"start\":257,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) rpcSchema<CustomRpcSchema>(): CustomRpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":268,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":13},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":278,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":9,\"character\":23},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":317,\"length\":9,\"target\":\"transport\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":328,\"length\":4,\"target\":\"http\",\"line\":10,\"character\":13},{\"type\":\"hover\",\"text\":\"const result: string | (OneOf<{\\n    paymasterAndData: Hex;\\n} | {\\n    paymaster: Address;\\n    paymasterData: Hex;\\n    paymasterVerificationGasLimit: Hex;\\n    paymasterPostOpGasLimit: Hex;\\n}> & {\\n    ...;\\n}) | OneOf<...>\",\"start\":388,\"length\":6,\"target\":\"result\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":403,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) request: <undefined, {\\n    method: \\\"pm_getPaymasterStubData\\\";\\n    params: [userOperation: OneOf<PartialBy<Pick<{\\n        callData: Hex;\\n        callGasLimit: `0x${string}`;\\n        initCode?: `0x${string}` | undefined;\\n        maxFeePerGas: `0x${string}`;\\n        maxPriorityFeePerGas: `0x${string}`;\\n        ... 5 more ...;\\n        verificationGasLimit: `0x${string}`;\\n    }, \\\"callData\\\" | ... 7 more ... | \\\"verificationGasLimit\\\">, \\\"callGasLimit\\\" | ... 4 more ... | \\\"verificationGasLimit\\\"> | PartialBy<...>>, entrypoint: `0x${string}`, chainId: `0x${string}`, context: unknown] | undefined;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}, string | ... 1 more ... | OneOf<...>>(args: {\\n    method: \\\"pm_getPaymasterStubData\\\";\\n    params: [userOperation: OneOf<PartialBy<Pick<{\\n        callData: Hex;\\n        callGasLimit: `0x${string}`;\\n        initCode?: `0x${string}` | undefined;\\n        maxFeePerGas: `0x${string}`;\\n        maxPriorityFeePerGas: `0x${string}`;\\n        ... 5 more ...;\\n        verificationGasLimit: `0x${string}`;\\n    }, \\\"callData\\\" | ... 7 more ... | \\\"verificationGasLimit\\\">, \\\"callGasLimit\\\" | ... 4 more ... | \\\"verificationGasLimit\\\"> | PartialBy<...>>, entrypoint: `0x${string}`, chainId: `0x${string}`, context: unknown] | undefined;\\n} | ... 1 more ... | {\\n    ...;\\n}, options?: EIP1193RequestOptions | undefined) => Promise<...>\",\"docs\":\"Request function wrapped with friendly error handling\",\"start\":410,\"length\":7,\"target\":\"request\",\"line\":13,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) method: \\\"eth_wa // [!code focus] \\\"\",\"start\":439,\"length\":6,\"target\":\"method\",\"line\":14,\"character\":2},{\"type\":\"completion\",\"start\":454,\"length\":0,\"completions\":[{\"name\":\"eth_wagmi\",\"kindModifiers\":\"\",\"kind\":\"string\",\"sortText\":\"11\",\"replacementSpan\":{\"start\":567,\"length\":5},\"commitCharacters\":[]}],\"completionsPrefix\":\"eth_wa\",\"line\":14,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) params: [string]\",\"start\":476,\"length\":6,\"target\":\"params\",\"line\":16,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[592,612],[0,119]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":93,\"end\":106}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { createPaymasterClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createPaymasterClient({\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/11155111/rpc')\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n//               ^|\\n\\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[573],\"positionHighlights\":[]},\"queries\":[],\"completions\":[{\"type\":\"completion\",\"start\":454,\"length\":0,\"completions\":[{\"name\":\"eth_wagmi\",\"kindModifiers\":\"\",\"kind\":\"string\",\"sortText\":\"11\",\"replacementSpan\":{\"start\":567,\"length\":5},\"commitCharacters\":[]}],\"completionsPrefix\":\"eth_wa\",\"line\":14,\"character\":17}],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":9,\"length\":9,\"target\":\"rpcSchema\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":39,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":2,\"character\":5},{\"type\":\"hover\",\"text\":\"(property) Method: \\\"eth_wagmi\\\"\",\"start\":79,\"length\":6,\"target\":\"Method\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) Parameters: [string]\",\"start\":119,\"length\":10,\"target\":\"Parameters\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) ReturnType: string\",\"start\":159,\"length\":10,\"target\":\"ReturnType\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":222,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPaymasterClient<HttpTransport<undefined, false>, CustomRpcSchema>(parameters: {\\n    cacheTime?: number | undefined | undefined;\\n    key?: string | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    pollingInterval?: number | undefined | undefined;\\n    rpcSchema?: CustomRpcSchema | undefined;\\n    transport: HttpTransport<...>;\\n}): {\\n    ...;\\n}\\nimport createPaymasterClient\",\"docs\":\"Creates a Paymaster Client.\\n\\n- Docs: https://viem.sh/account-abstraction/clients/paymaster\",\"tags\":[[\"param\",\"config - {@link PaymasterClientConfig}\"],[\"returns\",\"A Paymaster Client. {@link PaymasterClient}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\"]],\"start\":231,\"length\":21,\"target\":\"createPaymasterClient\",\"line\":8,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) rpcSchema?: CustomRpcSchema | undefined\",\"docs\":\"Typed JSON-RPC schema for the client.\",\"start\":257,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) rpcSchema<CustomRpcSchema>(): CustomRpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":268,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":13},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":278,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":9,\"character\":23},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":317,\"length\":9,\"target\":\"transport\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":328,\"length\":4,\"target\":\"http\",\"line\":10,\"character\":13},{\"type\":\"hover\",\"text\":\"const result: string | (OneOf<{\\n    paymasterAndData: Hex;\\n} | {\\n    paymaster: Address;\\n    paymasterData: Hex;\\n    paymasterVerificationGasLimit: Hex;\\n    paymasterPostOpGasLimit: Hex;\\n}> & {\\n    ...;\\n}) | OneOf<...>\",\"start\":388,\"length\":6,\"target\":\"result\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":403,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) request: <undefined, {\\n    method: \\\"pm_getPaymasterStubData\\\";\\n    params: [userOperation: OneOf<PartialBy<Pick<{\\n        callData: Hex;\\n        callGasLimit: `0x${string}`;\\n        initCode?: `0x${string}` | undefined;\\n        maxFeePerGas: `0x${string}`;\\n        maxPriorityFeePerGas: `0x${string}`;\\n        ... 5 more ...;\\n        verificationGasLimit: `0x${string}`;\\n    }, \\\"callData\\\" | ... 7 more ... | \\\"verificationGasLimit\\\">, \\\"callGasLimit\\\" | ... 4 more ... | \\\"verificationGasLimit\\\"> | PartialBy<...>>, entrypoint: `0x${string}`, chainId: `0x${string}`, context: unknown] | undefined;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}, string | ... 1 more ... | OneOf<...>>(args: {\\n    method: \\\"pm_getPaymasterStubData\\\";\\n    params: [userOperation: OneOf<PartialBy<Pick<{\\n        callData: Hex;\\n        callGasLimit: `0x${string}`;\\n        initCode?: `0x${string}` | undefined;\\n        maxFeePerGas: `0x${string}`;\\n        maxPriorityFeePerGas: `0x${string}`;\\n        ... 5 more ...;\\n        verificationGasLimit: `0x${string}`;\\n    }, \\\"callData\\\" | ... 7 more ... | \\\"verificationGasLimit\\\">, \\\"callGasLimit\\\" | ... 4 more ... | \\\"verificationGasLimit\\\"> | PartialBy<...>>, entrypoint: `0x${string}`, chainId: `0x${string}`, context: unknown] | undefined;\\n} | ... 1 more ... | {\\n    ...;\\n}, options?: EIP1193RequestOptions | undefined) => Promise<...>\",\"docs\":\"Request function wrapped with friendly error handling\",\"start\":410,\"length\":7,\"target\":\"request\",\"line\":13,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) method: \\\"eth_wa // [!code focus] \\\"\",\"start\":439,\"length\":6,\"target\":\"method\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) params: [string]\",\"start\":476,\"length\":6,\"target\":\"params\",\"line\":16,\"character\":2}],\"tags\":[]}}"
