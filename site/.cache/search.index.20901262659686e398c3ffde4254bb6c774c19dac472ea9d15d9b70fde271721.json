"{\"value\":{\"mdx\":\"---\\noutline: deep\\ndescription: Builds the transaction that proves a withdrawal was initiated on an L2. \\n---\\n\\n# buildProveWithdrawal\\n\\nBuilds the transaction that proves a withdrawal was initiated on an L2. Used in the Withdrawal flow.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { account, publicClientL2, walletClientL1 } from './config'\\n\\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: '0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039',\\n})\\n\\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await walletClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n\\nconst args = await publicClientL2.buildProveWithdrawal({ // [!code hl]\\n  account, // [!code hl]\\n  output, // [!code hl]\\n  withdrawal, // [!code hl]\\n}) // [!code hl]\\n \\nconst hash = await walletClientL1.proveWithdrawal(args)\\n```\\n\\n```ts [config.ts]\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, base } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\nexport const walletClientL1 = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: base,\\n  transport: http()\\n}).extend(publicActionsL2())\\n\\n// JSON-RPC Account\\nexport const [account] = await walletClientL1.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n```\\n\\n:::\\n\\n\\n### Account Hoisting\\n\\nIf you do not wish to pass an `account` to every `buildProveWithdrawal`, you can also hoist the Account on the Wallet Client (see `config.ts`).\\n\\n[Learn more](/docs/clients/wallet#account).\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { publicClientL2, walletClientL1 } from './config'\\n\\nconst args = await publicClientL2.buildProveWithdrawal({\\n  output,\\n  withdrawal,\\n})\\n \\nconst hash = await walletClientL1.proveWithdrawal(args)\\n```\\n\\n```ts [config.ts (JSON-RPC Account)]\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, base } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\n// Retrieve Account from an EIP-1193 Provider. // [!code hl]\\nconst [account] = await window.ethereum.request({ // [!code hl]\\n  method: 'eth_requestAccounts' // [!code hl]\\n}) // [!code hl]\\n\\nexport const walletClientL1 = createWalletClient({\\n  account, // [!code hl]\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: base,\\n  transport: http()\\n}).extend(publicActionsL2())\\n```\\n\\n```ts [config.ts (Local Account)]\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet, base } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/op-stack'\\n\\nexport const walletClientL1 = createWalletClient({\\n  account: privateKeyToAccount('0x...'), // [!code hl]\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: base,\\n  transport: http()\\n}).extend(publicActionsL2())\\n```\\n\\n:::\\n\\n## Returns\\n\\n`BuildProveWithdrawalReturnType`\\n\\nThe parameters required to execute a [prove withdrawal transaction](/op-stack/actions/proveWithdrawal).\\n\\n## Parameters\\n\\n### account (optional)\\n\\n- **Type:** `Account | Address`\\n\\nThe Account to send the transaction from.\\n\\nAccepts a [JSON-RPC Account](/docs/clients/wallet#json-rpc-accounts) or [Local Account (Private Key, etc)](/docs/clients/wallet#local-accounts-private-key-mnemonic-etc).\\n\\n```ts\\nconst args = await client.buildProveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', // [!code focus]\\n  output,\\n  withdrawal,\\n})\\n```\\n\\n### output\\n\\n- **Type:** `GetL2OutputReturnType`\\n\\nThe L2 output. Typically provided by [`getL2Output` Action](/op-stack/actions/getL2Output).\\n\\n```ts\\nconst args = await client.buildProveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  output: { /* ... */ }, // [!code focus]\\n  withdrawal, \\n})\\n```\\n\\n### withdrawal\\n\\n- **Type:** `Withdrawal`\\n\\nThe withdrawal message. Typically provided by [`getWithdrawals` Action](/op-stack/utilities/getWithdrawals).\\n\\n\\n```ts\\nconst args = await client.buildProveWithdrawal({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  output,\\n  withdrawal: { /* ... */ }, // [!code focus]\\n})\\n```\",\"document\":[{\"href\":\"/op-stack/actions/buildProveWithdrawal#buildprovewithdrawal\",\"html\":\"</header>\\n<p>Builds the transaction that proves a withdrawal was initiated on an L2. Used in the Withdrawal flow.</p>\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#buildprovewithdrawal\",\"isPage\":true,\"text\":\"\\nBuilds the transaction that proves a withdrawal was initiated on an L2. Used in the Withdrawal flow.\\n\",\"title\":\"buildProveWithdrawal\",\"titles\":[]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, publicClientL2, walletClientL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> receipt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicClientL2, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">withdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getWithdrawals</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(receipt)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> output</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getL2Output</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2BlockNumber: receipt.blockNumber,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: publicClientL2.chain,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL2.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(args)</span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, createWalletClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, base } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: base,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// JSON-RPC Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Local Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#usage\",\"isPage\":false,\"text\":\"\\nimport { account, publicClientL2, walletClientL1 } from &#x27;./config&#x27;\\n \\nconst receipt = await getTransactionReceipt(publicClientL2, {\\n  hash: &#x27;0xbbdd0957a82a057a76b5f093de251635ac4ddc6e2d0c4aa7fbf82d73e4e11039&#x27;,\\n})\\n \\nconst [withdrawal] = getWithdrawals(receipt)\\nconst output = await walletClientL1.getL2Output({\\n  l2BlockNumber: receipt.blockNumber,\\n  targetChain: publicClientL2.chain,\\n})\\n \\nconst args = await publicClientL2.buildProveWithdrawal({ \\n  account, \\n  output, \\n  withdrawal, \\n}) \\n \\nconst hash = await walletClientL1.proveWithdrawal(args)import { createPublicClient, createWalletClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, base } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\nexport const walletClientL1 = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: base,\\n  transport: http()\\n}).extend(publicActionsL2())\\n \\n// JSON-RPC Account\\nexport const [account] = await walletClientL1.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n\",\"title\":\"Usage\",\"titles\":[\"buildProveWithdrawal\"]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#account-hoisting\",\"html\":\"\\n<p>If you do not wish to pass an <code>account</code> to every <code>buildProveWithdrawal</code>, you can also hoist the Account on the Wallet Client (see <code>config.ts</code>).</p>\\n<p><a href=\\\"/docs/clients/wallet#account\\\">Learn more</a>.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClientL2, walletClientL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL2.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">proveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(args)</span></span></code></pre></div><div data-title=\\\"config.ts (JSON-RPC Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (JSON-RPC Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, createWalletClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, base } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Retrieve Account from an EIP-1193 Provider. </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.ethereum.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_requestAccounts&#x27;</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: base,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div><div data-title=\\\"config.ts (Local Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (Local Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, createWalletClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, base } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: base,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div></div>\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#account-hoisting\",\"isPage\":false,\"text\":\"\\nIf you do not wish to pass an account to every buildProveWithdrawal, you can also hoist the Account on the Wallet Client (see config.ts).\\nLearn more.\\nimport { publicClientL2, walletClientL1 } from &#x27;./config&#x27;\\n \\nconst args = await publicClientL2.buildProveWithdrawal({\\n  output,\\n  withdrawal,\\n})\\n \\nconst hash = await walletClientL1.proveWithdrawal(args)import { createPublicClient, createWalletClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, base } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\n// Retrieve Account from an EIP-1193 Provider. \\nconst [account] = await window.ethereum.request({ \\n  method: &#x27;eth_requestAccounts&#x27;\\n}) \\n \\nexport const walletClientL1 = createWalletClient({\\n  account, \\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: base,\\n  transport: http()\\n}).extend(publicActionsL2())import { createPublicClient, createWalletClient, custom, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet, base } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\nexport const walletClientL1 = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;), \\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: base,\\n  transport: http()\\n}).extend(publicActionsL2())\\n\",\"title\":\"Account Hoisting\",\"titles\":[\"buildProveWithdrawal\",\"Usage\"]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#returns\",\"html\":\"\\n<p><code>BuildProveWithdrawalReturnType</code></p>\\n<p>The parameters required to execute a <a href=\\\"/op-stack/actions/proveWithdrawal\\\">prove withdrawal transaction</a>.</p>\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#returns\",\"isPage\":false,\"text\":\"\\nBuildProveWithdrawalReturnType\\nThe parameters required to execute a prove withdrawal transaction.\\n\",\"title\":\"Returns\",\"titles\":[\"buildProveWithdrawal\"]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#parameters\",\"html\":\"\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"buildProveWithdrawal\"]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#account-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address</code></li>\\n</ul>\\n<p>The Account to send the transaction from.</p>\\n<p>Accepts a <a href=\\\"/docs/clients/wallet#json-rpc-accounts\\\">JSON-RPC Account</a> or <a href=\\\"/docs/clients/wallet#local-accounts-private-key-mnemonic-etc\\\">Local Account (Private Key, etc)</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#account-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address\\n\\nThe Account to send the transaction from.\\nAccepts a JSON-RPC Account or Local Account (Private Key, etc).\\nconst args = await client.buildProveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;, \\n  output,\\n  withdrawal,\\n})\\n\",\"title\":\"account (optional)\",\"titles\":[\"buildProveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#output\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>GetL2OutputReturnType</code></li>\\n</ul>\\n<p>The L2 output. Typically provided by <a href=\\\"/op-stack/actions/getL2Output\\\"><code>getL2Output</code> Action</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#output\",\"isPage\":false,\"text\":\"\\n\\nType: GetL2OutputReturnType\\n\\nThe L2 output. Typically provided by getL2Output Action.\\nconst args = await client.buildProveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  output: { /* ... */ }, \\n  withdrawal, \\n})\\n\",\"title\":\"output\",\"titles\":[\"buildProveWithdrawal\",\"Parameters\"]},{\"href\":\"/op-stack/actions/buildProveWithdrawal#withdrawal\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Withdrawal</code></li>\\n</ul>\\n<p>The withdrawal message. Typically provided by <a href=\\\"/op-stack/utilities/getWithdrawals\\\"><code>getWithdrawals</code> Action</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">buildProveWithdrawal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  output,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawal: { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/op-stack/actions/buildProveWithdrawal.md#withdrawal\",\"isPage\":false,\"text\":\"\\n\\nType: Withdrawal\\n\\nThe withdrawal message. Typically provided by getWithdrawals Action.\\nconst args = await client.buildProveWithdrawal({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  output,\\n  withdrawal: { /* ... */ }, \\n})\",\"title\":\"withdrawal\",\"titles\":[\"buildProveWithdrawal\",\"Parameters\"]}]}}"
