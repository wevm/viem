"{\"value\":{\"code\":\"import { blobsToCommitments, toBlobs } from 'viem'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: '0x1234' })\\nconst commitments = blobsToCommitments({ blobs, kzg }) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function blobsToCommitments<const blobs extends readonly ByteArray[] | readonly Hex[], to extends To = (blobs extends readonly `0x${string}`[] ? \\\"hex\\\" : never) | (blobs extends readonly ByteArray[] ? \\\"bytes\\\" : never)>(parameters: BlobsToCommitmentsParameters<blobs, to>): BlobsToCommitmentsReturnType<to>\\nimport blobsToCommitments\",\"docs\":\"Compute commitments from a list of blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { blobsToCommitments, toBlobs } from 'viem'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: '0x1234' })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\n```\"]],\"start\":9,\"length\":18,\"target\":\"blobsToCommitments\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function toBlobs<const data extends Hex | ByteArray, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | (data extends ByteArray ? \\\"bytes\\\" : never)>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to>\\nimport toBlobs\",\"docs\":\"Transforms arbitrary data to blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobs, stringToHex } from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n```\"]],\"start\":29,\"length\":7,\"target\":\"toBlobs\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const kzg: Kzg\\nimport kzg\",\"start\":60,\"length\":3,\"target\":\"kzg\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const blobs: readonly `0x${string}`[]\",\"start\":86,\"length\":5,\"target\":\"blobs\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toBlobs<\\\"0x1234\\\", \\\"hex\\\">(parameters: ToBlobsParameters<\\\"0x1234\\\", \\\"hex\\\">): readonly `0x${string}`[]\\nimport toBlobs\",\"docs\":\"Transforms arbitrary data to blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobs, stringToHex } from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n```\"]],\"start\":94,\"length\":7,\"target\":\"toBlobs\",\"line\":3,\"character\":14},{\"type\":\"hover\",\"text\":\"(property) data: ByteArray | `0x${string}`\",\"docs\":\"Data to transform to a blob.\",\"start\":104,\"length\":4,\"target\":\"data\",\"line\":3,\"character\":24},{\"type\":\"hover\",\"text\":\"const commitments: readonly `0x${string}`[]\",\"start\":128,\"length\":11,\"target\":\"commitments\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) blobsToCommitments<readonly `0x${string}`[], \\\"hex\\\">(parameters: BlobsToCommitmentsParameters<readonly `0x${string}`[], \\\"hex\\\">): readonly `0x${string}`[]\\nimport blobsToCommitments\",\"docs\":\"Compute commitments from a list of blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { blobsToCommitments, toBlobs } from 'viem'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: '0x1234' })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\n```\"]],\"start\":142,\"length\":18,\"target\":\"blobsToCommitments\",\"line\":4,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) blobs: readonly ByteArray[] | readonly `0x${string}`[] | readonly `0x${string}`[]\",\"docs\":\"Blobs to transform into commitments.\",\"start\":163,\"length\":5,\"target\":\"blobs\",\"line\":4,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) kzg: Pick<Kzg, \\\"blobToKzgCommitment\\\">\",\"docs\":\"KZG implementation.\",\"start\":170,\"length\":3,\"target\":\"kzg\",\"line\":4,\"character\":48}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,248]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":22,\"end\":35}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"kzg.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/kzg.ts\",\"content\":\"// @filename: kzg.ts\\n\\n// @noErrors\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nexport const kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":209,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { blobsToCommitments, toBlobs } from 'viem'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: '0x1234' })\\nconst commitments = blobsToCommitments({ blobs, kzg }) // [!code focus]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function blobsToCommitments<const blobs extends readonly ByteArray[] | readonly Hex[], to extends To = (blobs extends readonly `0x${string}`[] ? \\\"hex\\\" : never) | (blobs extends readonly ByteArray[] ? \\\"bytes\\\" : never)>(parameters: BlobsToCommitmentsParameters<blobs, to>): BlobsToCommitmentsReturnType<to>\\nimport blobsToCommitments\",\"docs\":\"Compute commitments from a list of blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { blobsToCommitments, toBlobs } from 'viem'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: '0x1234' })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\n```\"]],\"start\":9,\"length\":18,\"target\":\"blobsToCommitments\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function toBlobs<const data extends Hex | ByteArray, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | (data extends ByteArray ? \\\"bytes\\\" : never)>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to>\\nimport toBlobs\",\"docs\":\"Transforms arbitrary data to blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobs, stringToHex } from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n```\"]],\"start\":29,\"length\":7,\"target\":\"toBlobs\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const kzg: Kzg\\nimport kzg\",\"start\":60,\"length\":3,\"target\":\"kzg\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const blobs: readonly `0x${string}`[]\",\"start\":86,\"length\":5,\"target\":\"blobs\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toBlobs<\\\"0x1234\\\", \\\"hex\\\">(parameters: ToBlobsParameters<\\\"0x1234\\\", \\\"hex\\\">): readonly `0x${string}`[]\\nimport toBlobs\",\"docs\":\"Transforms arbitrary data to blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobs, stringToHex } from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\n```\"]],\"start\":94,\"length\":7,\"target\":\"toBlobs\",\"line\":3,\"character\":14},{\"type\":\"hover\",\"text\":\"(property) data: ByteArray | `0x${string}`\",\"docs\":\"Data to transform to a blob.\",\"start\":104,\"length\":4,\"target\":\"data\",\"line\":3,\"character\":24},{\"type\":\"hover\",\"text\":\"const commitments: readonly `0x${string}`[]\",\"start\":128,\"length\":11,\"target\":\"commitments\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) blobsToCommitments<readonly `0x${string}`[], \\\"hex\\\">(parameters: BlobsToCommitmentsParameters<readonly `0x${string}`[], \\\"hex\\\">): readonly `0x${string}`[]\\nimport blobsToCommitments\",\"docs\":\"Compute commitments from a list of blobs.\",\"tags\":[[\"example\",\"```ts\\nimport { blobsToCommitments, toBlobs } from 'viem'\\nimport { kzg } from './kzg'\\n\\nconst blobs = toBlobs({ data: '0x1234' })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\n```\"]],\"start\":142,\"length\":18,\"target\":\"blobsToCommitments\",\"line\":4,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) blobs: readonly ByteArray[] | readonly `0x${string}`[] | readonly `0x${string}`[]\",\"docs\":\"Blobs to transform into commitments.\",\"start\":163,\"length\":5,\"target\":\"blobs\",\"line\":4,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) kzg: Pick<Kzg, \\\"blobToKzgCommitment\\\">\",\"docs\":\"KZG implementation.\",\"start\":170,\"length\":3,\"target\":\"kzg\",\"line\":4,\"character\":48}],\"tags\":[]}}"
