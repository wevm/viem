"{\"value\":{\"mdx\":\"# ZKsync [Integrating with ZKsync in Viem]\\n\\nViem provides first-class support for chains implemented on [ZKsync](https://zksync.io/).\\n\\n## Chains\\n\\nThe following Viem chains are implemented on ZKsync:\\n\\n```ts\\nimport {\\n  zksync, // [!code hl]\\n  zksyncSepoliaTestnet, // [!code hl]\\n} from 'viem/chains'\\n```\\n\\n### Configuration\\n\\nViem exports ZKsync's chain [formatters](/docs/chains/formatters) & [serializers](/docs/chains/serializers) via `chainConfig`. This is useful if you need to define another chain which is implemented on ZKsync.\\n\\n```ts\\nimport { defineChain } from 'viem'\\nimport { chainConfig } from 'viem/zksync'\\n\\nexport const zkSyncExample = defineChain({\\n  ...chainConfig,\\n  name: 'ZKsync Example',\\n  // ...\\n})\\n```\\n\\n## Utilities\\n\\n### `serializeTransaction`\\n\\nSerializes a transaction object. Supports EIP-712, EIP-1559, EIP-2930, and Legacy transactions.\\n\\nZKsync-flavored version of [Viem's `serializeTransaction`](/docs/utilities/serializeTransaction).\\n\\n#### Parameters\\n\\n- `transaction` (`TransactionSerializable`): The transaction object to serialize.\\n- `signature` (`Signature`): Optional signature to include.\\n\\n```ts\\nimport { serializeTransaction } from 'viem/zksync'\\n\\nconst serialized = serializeTransaction({\\n  chainId: 1,\\n  gas: 21001n,\\n  maxFeePerGas: parseGwei('20'),\\n  maxPriorityFeePerGas: parseGwei('2'),\\n  nonce: 69,\\n  paymaster: '0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021',\\n  paymasterInput:\\n    '0x8c5a344500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000',\\n  to: '0x1234512345123451234512345123451234512345',\\n  type: 'eip712',\\n  value: parseEther('0.01'),\\n})\\n```\\n\",\"document\":[{\"href\":\"/docs/chains/zksync#zksync\",\"html\":\"<div role=\\\"doc-subtitle\\\">Integrating with ZKsync in Viem</div></header>\\n<p>Viem provides first-class support for chains implemented on <a href=\\\"https://zksync.io/\\\">ZKsync</a>.</p>\\n\",\"id\":\"pages/docs/chains/zksync.md#zksync\",\"isPage\":true,\"text\":\"Integrating with ZKsync in Viem\\nViem provides first-class support for chains implemented on ZKsync.\\n\",\"title\":\"ZKsync\",\"titles\":[]},{\"href\":\"/docs/chains/zksync#chains\",\"html\":\"\\n<p>The following Viem chains are implemented on ZKsync:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zksync, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zksyncSepoliaTestnet, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/chains/zksync.md#chains\",\"isPage\":false,\"text\":\"\\nThe following Viem chains are implemented on ZKsync:\\nimport {\\n  zksync, \\n  zksyncSepoliaTestnet, \\n} from &#x27;viem/chains&#x27;\\n\",\"title\":\"Chains\",\"titles\":[\"ZKsync\"]},{\"href\":\"/docs/chains/zksync#configuration\",\"html\":\"\\n<p>Viem exports ZKsync&#x27;s chain <a href=\\\"/docs/chains/formatters\\\">formatters</a> &amp; <a href=\\\"/docs/chains/serializers\\\">serializers</a> via <code>chainConfig</code>. This is useful if you need to define another chain which is implemented on ZKsync.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { defineChain } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { chainConfig } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> zkSyncExample</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> defineChain</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">chainConfig,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ZKsync Example&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/chains/zksync.md#configuration\",\"isPage\":false,\"text\":\"\\nViem exports ZKsync&#x27;s chain formatters &amp; serializers via chainConfig. This is useful if you need to define another chain which is implemented on ZKsync.\\nimport { defineChain } from &#x27;viem&#x27;\\nimport { chainConfig } from &#x27;viem/zksync&#x27;\\n \\nexport const zkSyncExample = defineChain({\\n  ...chainConfig,\\n  name: &#x27;ZKsync Example&#x27;,\\n  // ...\\n})\\n\",\"title\":\"Configuration\",\"titles\":[\"ZKsync\",\"Chains\"]},{\"href\":\"/docs/chains/zksync#utilities\",\"html\":\"\\n\",\"id\":\"pages/docs/chains/zksync.md#utilities\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Utilities\",\"titles\":[\"ZKsync\"]},{\"href\":\"/docs/chains/zksync#serializetransaction\",\"html\":\"\\n<p>Serializes a transaction object. Supports EIP-712, EIP-1559, EIP-2930, and Legacy transactions.</p>\\n<p>ZKsync-flavored version of <a href=\\\"/docs/utilities/serializeTransaction\\\">Viem&#x27;s <code>serializeTransaction</code></a>.</p>\\n\",\"id\":\"pages/docs/chains/zksync.md#serializetransaction\",\"isPage\":false,\"text\":\"\\nSerializes a transaction object. Supports EIP-712, EIP-1559, EIP-2930, and Legacy transactions.\\nZKsync-flavored version of Viem&#x27;s serializeTransaction.\\n\",\"title\":\"serializeTransaction\",\"titles\":[\"ZKsync\",\"Utilities\"]},{\"href\":\"/docs/chains/zksync#parameters\",\"html\":\"\\n<ul>\\n<li><code>transaction</code> (<code>TransactionSerializable</code>): The transaction object to serialize.</li>\\n<li><code>signature</code> (<code>Signature</code>): Optional signature to include.</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { serializeTransaction } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> serialized</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> serializeTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chainId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">21001</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxPriorityFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymasterInput:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;0x8c5a344500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1234512345123451234512345123451234512345&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eip712&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0.01&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/chains/zksync.md#parameters\",\"isPage\":false,\"text\":\"\\n\\ntransaction (TransactionSerializable): The transaction object to serialize.\\nsignature (Signature): Optional signature to include.\\n\\nimport { serializeTransaction } from &#x27;viem/zksync&#x27;\\n \\nconst serialized = serializeTransaction({\\n  chainId: 1,\\n  gas: 21001n,\\n  maxFeePerGas: parseGwei(&#x27;20&#x27;),\\n  maxPriorityFeePerGas: parseGwei(&#x27;2&#x27;),\\n  nonce: 69,\\n  paymaster: &#x27;0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021&#x27;,\\n  paymasterInput:\\n    &#x27;0x8c5a344500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000&#x27;,\\n  to: &#x27;0x1234512345123451234512345123451234512345&#x27;,\\n  type: &#x27;eip712&#x27;,\\n  value: parseEther(&#x27;0.01&#x27;),\\n})\",\"title\":\"Parameters\",\"titles\":[\"ZKsync\",\"Utilities\",\"serializeTransaction\"]}]}}"
