"{\"value\":{\"mdx\":\"# Solady Smart Account\\n\\nThe `toSoladySmartAccount` simple Smart Account Implementation that references [Solady's `ERC4337.sol`](https://github.com/Vectorized/solady/blob/main/src/accounts/ERC4337.sol) Smart Account contract.\\n\\n:::warning\\nThis implementation is unaudited. It is intended to be used for testing purposes or as a reference to implement a [Custom Account](/account-abstraction/accounts/smart/toSmartAccount).\\n:::\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { toSoladySmartAccount } from 'viem/account-abstraction' // [!code focus]\\nimport { client, owner } from './config.js'\\n\\nconst account = await toSoladySmartAccount({ // [!code focus]\\n  client, // [!code focus]\\n  owner, // [!code focus]\\n}) // [!code focus]\\n```\\n\\n```ts twoslash [config.ts] filename=\\\"config.ts\\\"\\nimport { http, createPublicClient } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n:::\\n\\n## Returns\\n\\n`SmartAccount<SoladySmartAccountImplementation>`\\n\\n## Parameters\\n\\n### entryPoint (optional)\\n\\n- **Type:** `{ abi: Abi, address: Address, version: EntryPointVersion }`\\n\\nCompatible EntryPoint for the Smart Account to reference. The EntryPoint is used\\nto:\\n\\n- Determine the target EntryPoint address for the User Operation\\n- Compute User Operation hashes\\n- Retrieve the Smart Account nonce\\n- Distinguish which type of `UserOperation` structure to use\\n\\n```ts\\nconst account = await toSoladySmartAccount({\\n  client,\\n  entryPoint: { // [!code focus]\\n    abi: [/* ... */], // [!code focus]\\n    address: '0x0000000071727De22E5E9d8BAf0edAc6f37da032', // [!code focus]\\n    version: '0.7', // [!code focus]\\n  }, // [!code focus]\\n  owner,\\n})\\n```\\n\\n### factoryAddress\\n\\n- **Type:** `Address`\\n\\nFactory address of the Smart Account.\\n\\n```ts\\nconst account = await toSoladySmartAccount({\\n  client,\\n  factoryAddress: '0xda4b37208c41c4f6d1b101cac61e182fe1da0754', // [!code focus]\\n  owner,\\n})\\n```\\n\\n### owner\\n\\n- **Type:** `Address | Account`\\n\\nOwner of the Smart Account.\\n\\n```ts\\nconst account = await toSoladySmartAccount({\\n  client,\\n  owner: privateKeyToAccount('0x...'), // [!code focus]\\n})\\n```\\n\\n### salt (optional)\\n\\n- **Type:** `Hex`\\n\\nSalt to use for Smart Account deployment.\\n\\n```ts\\nconst account = await toSoladySmartAccount({\\n  client,\\n  owner,\\n  salt: '0x5', // [!code focus]\\n})\\n```\\n\",\"document\":[{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#solady-smart-account\",\"html\":\"</header>\\n<p>The <code>toSoladySmartAccount</code> simple Smart Account Implementation that references <a href=\\\"https://github.com/Vectorized/solady/blob/main/src/accounts/ERC4337.sol\\\">Solady&#x27;s <code>ERC4337.sol</code></a> Smart Account contract.</p>\\n<aside data-callout=\\\"warning\\\"><p>This implementation is unaudited. It is intended to be used for testing purposes or as a reference to implement a <a href=\\\"/account-abstraction/accounts/smart/toSmartAccount\\\">Custom Account</a>.</p></aside>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#solady-smart-account\",\"isPage\":true,\"text\":\"\\nThe toSoladySmartAccount simple Smart Account Implementation that references Solady&#x27;s ERC4337.sol Smart Account contract.\\nThis implementation is unaudited. It is intended to be used for testing purposes or as a reference to implement a Custom Account.\\n\",\"title\":\"Solady Smart Account\",\"titles\":[]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toSoladySmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { client, owner } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config.js&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSoladySmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owner, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#usage\",\"isPage\":false,\"text\":\"\\n// @filename: config.ts\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// @filename: example.js\\n \\n// ---cut---\\nimport { toSoladySmartAccount } from &#x27;viem/account-abstraction&#x27;\\nimport { client, owner } from &#x27;./config.js&#x27;\\n \\nconst account = await toSoladySmartAccount({ \\n  client, \\n  owner, \\n}) import { http, createPublicClient } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"Solady Smart Account\"]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#returns\",\"html\":\"\\n<p><code>SmartAccount&lt;SoladySmartAccountImplementation&gt;</code></p>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#returns\",\"isPage\":false,\"text\":\"\\nSmartAccount&lt;SoladySmartAccountImplementation&gt;\\n\",\"title\":\"Returns\",\"titles\":[\"Solady Smart Account\"]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#parameters\",\"html\":\"\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"Solady Smart Account\"]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#entrypoint-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>{ abi: Abi, address: Address, version: EntryPointVersion }</code></li>\\n</ul>\\n<p>Compatible EntryPoint for the Smart Account to reference. The EntryPoint is used\\nto:</p>\\n<ul>\\n<li>Determine the target EntryPoint address for the User Operation</li>\\n<li>Compute User Operation hashes</li>\\n<li>Retrieve the Smart Account nonce</li>\\n<li>Distinguish which type of <code>UserOperation</code> structure to use</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSoladySmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  entryPoint: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    abi: [</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x0000000071727De22E5E9d8BAf0edAc6f37da032&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    version: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0.7&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#entrypoint-optional\",\"isPage\":false,\"text\":\"\\n\\nType: { abi: Abi, address: Address, version: EntryPointVersion }\\n\\nCompatible EntryPoint for the Smart Account to reference. The EntryPoint is used\\nto:\\n\\nDetermine the target EntryPoint address for the User Operation\\nCompute User Operation hashes\\nRetrieve the Smart Account nonce\\nDistinguish which type of UserOperation structure to use\\n\\nconst account = await toSoladySmartAccount({\\n  client,\\n  entryPoint: { \\n    abi: [/* ... */], \\n    address: &#x27;0x0000000071727De22E5E9d8BAf0edAc6f37da032&#x27;, \\n    version: &#x27;0.7&#x27;, \\n  }, \\n  owner,\\n})\\n\",\"title\":\"entryPoint (optional)\",\"titles\":[\"Solady Smart Account\",\"Parameters\"]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#factoryaddress\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n</ul>\\n<p>Factory address of the Smart Account.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSoladySmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  factoryAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xda4b37208c41c4f6d1b101cac61e182fe1da0754&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#factoryaddress\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\n\\nFactory address of the Smart Account.\\nconst account = await toSoladySmartAccount({\\n  client,\\n  factoryAddress: &#x27;0xda4b37208c41c4f6d1b101cac61e182fe1da0754&#x27;, \\n  owner,\\n})\\n\",\"title\":\"factoryAddress\",\"titles\":[\"Solady Smart Account\",\"Parameters\"]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#owner\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address | Account</code></li>\\n</ul>\\n<p>Owner of the Smart Account.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSoladySmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owner: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#owner\",\"isPage\":false,\"text\":\"\\n\\nType: Address | Account\\n\\nOwner of the Smart Account.\\nconst account = await toSoladySmartAccount({\\n  client,\\n  owner: privateKeyToAccount(&#x27;0x...&#x27;), \\n})\\n\",\"title\":\"owner\",\"titles\":[\"Solady Smart Account\",\"Parameters\"]},{\"href\":\"/account-abstraction/accounts/smart/toSoladySmartAccount#salt-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Hex</code></li>\\n</ul>\\n<p>Salt to use for Smart Account deployment.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSoladySmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owner,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  salt: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x5&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/account-abstraction/accounts/smart/toSoladySmartAccount.md#salt-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Hex\\n\\nSalt to use for Smart Account deployment.\\nconst account = await toSoladySmartAccount({\\n  client,\\n  owner,\\n  salt: &#x27;0x5&#x27;, \\n})\",\"title\":\"salt (optional)\",\"titles\":[\"Solady Smart Account\",\"Parameters\"]}]}}"
