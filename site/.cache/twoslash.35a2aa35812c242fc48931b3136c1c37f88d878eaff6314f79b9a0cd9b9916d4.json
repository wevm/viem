"{\"value\":{\"code\":\"const account = mnemonicToAccount(\\n  'legal winner thank year wave sausage worth useful legal winner thank yellow',\\n  {\\n    path: \\\"m/44'/60'/5'/0/2\\\" // [!code focus]\\n  }\\n)\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 7 more ...;\\n    getHdKey: () => HDKey;\\n}\",\"start\":6,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) mnemonicToAccount(mnemonic: string, opts?: MnemonicToAccountOptions): HDAccount\\nimport mnemonicToAccount\",\"tags\":[[\"description\",\"Creates an Account from a mnemonic phrase.\"],[\"returns\",\"A HD Account.\"]],\"start\":16,\"length\":17,\"target\":\"mnemonicToAccount\",\"line\":0,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) path: `m/44'/60'/${string}`\",\"docs\":\"The HD path.\",\"start\":124,\"length\":4,\"target\":\"path\",\"line\":3,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,63]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { mnemonicToAccount } from 'viem/accounts'\\n// ---cut---\\nconst account = mnemonicToAccount(\\n  'legal winner thank year wave sausage worth useful legal winner thank yellow',\\n  {\\n    path: \\\"m/44'/60'/5'/0/2\\\" // [!code focus]\\n  }\\n)\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 7 more ...;\\n    getHdKey: () => HDKey;\\n}\",\"start\":6,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) mnemonicToAccount(mnemonic: string, opts?: MnemonicToAccountOptions): HDAccount\\nimport mnemonicToAccount\",\"tags\":[[\"description\",\"Creates an Account from a mnemonic phrase.\"],[\"returns\",\"A HD Account.\"]],\"start\":16,\"length\":17,\"target\":\"mnemonicToAccount\",\"line\":0,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) path: `m/44'/60'/${string}`\",\"docs\":\"The HD path.\",\"start\":124,\"length\":4,\"target\":\"path\",\"line\":3,\"character\":4}],\"tags\":[]}}"
