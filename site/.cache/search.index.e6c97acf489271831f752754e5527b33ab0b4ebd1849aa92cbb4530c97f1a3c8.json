"{\"value\":{\"mdx\":\"---\\ndescription: Encodes structured return data into ABI encoded data.\\n---\\n\\n# encodeFunctionResult\\n\\nEncodes structured return data into ABI encoded data. It is the opposite of [`decodeFunctionResult`](/docs/contract/decodeFunctionResult).\\n\\n## Install\\n\\n```ts\\nimport { encodeFunctionResult } from 'viem';\\n```\\n\\n## Usage\\n\\nGiven an ABI (`abi`) and a function (`functionName`), pass through the values (`values`) to encode:\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { encodeFunctionResult } from 'viem';\\nimport { wagmiAbi } from './abi.ts'\\n\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: 'ownerOf',\\n  value: ['0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'],\\n});\\n// '0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac'\\n```\\n\\n```ts [abi.ts]\\nexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [{ name: 'tokenId', type: 'uint256' }],\\n    name: 'ownerOf',\\n    outputs: [{ name: '', type: 'address' }],\\n    stateMutability: 'view',\\n    type: 'function',\\n  },\\n  ...\\n] as const;\\n```\\n\\n:::\\n\\n### A more complex example\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { decodeFunctionResult } from 'viem'\\n\\nconst data = decodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: 'getInfo',\\n  value: [\\n    {\\n      foo: {\\n        sender: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n        x: 69420n,\\n        y: true\\n      },\\n      sender: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n      z: 69\\n    }\\n  ]\\n})\\n// 0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac0000000000000000000000000000000000000000000000000000000000010f2c0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac0000000000000000000000000000000000000000000000000000000000000045\\n```\\n\\n```ts [abi.ts]\\nexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [],\\n    name: 'getInfo',\\n    outputs: [\\n      {\\n        components: [\\n          {\\n            components: [\\n              {\\n                name: 'sender',\\n                type: 'address',\\n              },\\n              {\\n                name: 'x',\\n                type: 'uint256',\\n              },\\n              {\\n                name: 'y',\\n                type: 'bool',\\n              },\\n            ],\\n            name: 'foo',\\n            type: 'tuple',\\n          },\\n          {\\n            name: 'sender',\\n            type: 'address',\\n          },\\n          {\\n            name: 'z',\\n            type: 'uint32',\\n          },\\n        ],\\n        name: 'res',\\n        type: 'tuple',\\n      },\\n    ],\\n    stateMutability: 'pure',\\n    type: 'function',\\n  },\\n  ...\\n] as const;\\n```\\n\\n:::\\n\\n### Without `functionName`\\n\\nIf your `abi` contains only one ABI item, you can omit the `functionName` (it becomes optional):\\n\\n```ts\\nimport { encodeFunctionResult } from 'viem';\\n\\nconst abiItem = {\\n  inputs: [{ name: 'owner', type: 'address' }],\\n  name: 'balanceOf',\\n  outputs: [{ name: '', type: 'uint256' }],\\n  stateMutability: 'view',\\n  type: 'function',\\n}\\n\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: 'ownerOf', // [!code --]\\n  value: ['0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'],\\n});\\n// '0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac'\\n```\\n\\n## Return Value\\n\\nThe decoded data. Type is inferred from the ABI.\\n\\n## Parameters\\n\\n### abi\\n\\n- **Type:** [`Abi`](/docs/glossary/types#abi)\\n\\nThe contract's ABI.\\n\\n```ts\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi, // [!code focus]\\n  functionName: 'ownerOf',\\n  value: ['0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'],\\n});\\n```\\n\\n### functionName\\n\\n- **Type:** `string`\\n\\nThe function to encode from the ABI.\\n\\n```ts\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: 'ownerOf', // [!code focus]\\n  value: ['0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'],\\n});\\n```\\n\\n### values\\n\\n- **Type**: [`Hex`](/docs/glossary/types#hex)\\n\\nReturn values to encode.\\n\\n```ts\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: 'ownerOf',\\n  value: ['0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'], // [!code focus]\\n});\\n```\\n\",\"document\":[{\"href\":\"/docs/contract/encodeFunctionResult#encodefunctionresult\",\"html\":\"</header>\\n<p>Encodes structured return data into ABI encoded data. It is the opposite of <a href=\\\"/docs/contract/decodeFunctionResult\\\"><code>decodeFunctionResult</code></a>.</p>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#encodefunctionresult\",\"isPage\":true,\"text\":\"\\nEncodes structured return data into ABI encoded data. It is the opposite of decodeFunctionResult.\\n\",\"title\":\"encodeFunctionResult\",\"titles\":[]},{\"href\":\"/docs/contract/encodeFunctionResult#install\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeFunctionResult } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#install\",\"isPage\":false,\"text\":\"\\nimport { encodeFunctionResult } from &#x27;viem&#x27;;\\n\",\"title\":\"Install\",\"titles\":[\"encodeFunctionResult\"]},{\"href\":\"/docs/contract/encodeFunctionResult#usage\",\"html\":\"\\n<p>Given an ABI (<code>abi</code>) and a function (<code>functionName</code>), pass through the values (<code>values</code>) to encode:</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeFunctionResult } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi.ts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeFunctionResult</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;tokenId&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;view&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;function&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#usage\",\"isPage\":false,\"text\":\"\\nGiven an ABI (abi) and a function (functionName), pass through the values (values) to encode:\\nimport { encodeFunctionResult } from &#x27;viem&#x27;;\\nimport { wagmiAbi } from &#x27;./abi.ts&#x27;\\n \\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: &#x27;ownerOf&#x27;,\\n  value: [&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;],\\n});\\n// &#x27;0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;export const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [{ name: &#x27;tokenId&#x27;, type: &#x27;uint256&#x27; }],\\n    name: &#x27;ownerOf&#x27;,\\n    outputs: [{ name: &#x27;&#x27;, type: &#x27;address&#x27; }],\\n    stateMutability: &#x27;view&#x27;,\\n    type: &#x27;function&#x27;,\\n  },\\n  ...\\n] as const;\\n\",\"title\":\"Usage\",\"titles\":[\"encodeFunctionResult\"]},{\"href\":\"/docs/contract/encodeFunctionResult#a-more-complex-example\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { decodeFunctionResult } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> decodeFunctionResult</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;getInfo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      foo: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        sender: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        x: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        y: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      sender: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      z: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac0000000000000000000000000000000000000000000000000000000000010f2c0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac0000000000000000000000000000000000000000000000000000000000000045</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;getInfo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        components: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            components: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;sender&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;y&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;bool&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;foo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;tuple&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;sender&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint32&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;res&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;tuple&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;pure&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;function&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#a-more-complex-example\",\"isPage\":false,\"text\":\"\\nimport { decodeFunctionResult } from &#x27;viem&#x27;\\n \\nconst data = decodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: &#x27;getInfo&#x27;,\\n  value: [\\n    {\\n      foo: {\\n        sender: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;,\\n        x: 69420n,\\n        y: true\\n      },\\n      sender: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;,\\n      z: 69\\n    }\\n  ]\\n})\\n// 0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac0000000000000000000000000000000000000000000000000000000000010f2c0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac0000000000000000000000000000000000000000000000000000000000000045export const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [],\\n    name: &#x27;getInfo&#x27;,\\n    outputs: [\\n      {\\n        components: [\\n          {\\n            components: [\\n              {\\n                name: &#x27;sender&#x27;,\\n                type: &#x27;address&#x27;,\\n              },\\n              {\\n                name: &#x27;x&#x27;,\\n                type: &#x27;uint256&#x27;,\\n              },\\n              {\\n                name: &#x27;y&#x27;,\\n                type: &#x27;bool&#x27;,\\n              },\\n            ],\\n            name: &#x27;foo&#x27;,\\n            type: &#x27;tuple&#x27;,\\n          },\\n          {\\n            name: &#x27;sender&#x27;,\\n            type: &#x27;address&#x27;,\\n          },\\n          {\\n            name: &#x27;z&#x27;,\\n            type: &#x27;uint32&#x27;,\\n          },\\n        ],\\n        name: &#x27;res&#x27;,\\n        type: &#x27;tuple&#x27;,\\n      },\\n    ],\\n    stateMutability: &#x27;pure&#x27;,\\n    type: &#x27;function&#x27;,\\n  },\\n  ...\\n] as const;\\n\",\"title\":\"A more complex example\",\"titles\":[\"encodeFunctionResult\",\"Usage\"]},{\"href\":\"/docs/contract/encodeFunctionResult#without-functionname\",\"html\":\"\\n<p>If your <code>abi</code> contains only one ABI item, you can omit the <code>functionName</code> (it becomes optional):</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-diff\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeFunctionResult } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> abiItem</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  inputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;owner&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;balanceOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  outputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;view&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;function&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeFunctionResult</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line diff remove\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#without-functionname\",\"isPage\":false,\"text\":\"\\nIf your abi contains only one ABI item, you can omit the functionName (it becomes optional):\\nimport { encodeFunctionResult } from &#x27;viem&#x27;;\\n \\nconst abiItem = {\\n  inputs: [{ name: &#x27;owner&#x27;, type: &#x27;address&#x27; }],\\n  name: &#x27;balanceOf&#x27;,\\n  outputs: [{ name: &#x27;&#x27;, type: &#x27;uint256&#x27; }],\\n  stateMutability: &#x27;view&#x27;,\\n  type: &#x27;function&#x27;,\\n}\\n \\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: &#x27;ownerOf&#x27;, \\n  value: [&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;],\\n});\\n// &#x27;0x000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;\\n\",\"title\":\"Without functionName\",\"titles\":[\"encodeFunctionResult\",\"Usage\"]},{\"href\":\"/docs/contract/encodeFunctionResult#return-value\",\"html\":\"\\n<p>The decoded data. Type is inferred from the ABI.</p>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#return-value\",\"isPage\":false,\"text\":\"\\nThe decoded data. Type is inferred from the ABI.\\n\",\"title\":\"Return Value\",\"titles\":[\"encodeFunctionResult\"]},{\"href\":\"/docs/contract/encodeFunctionResult#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"encodeFunctionResult\"]},{\"href\":\"/docs/contract/encodeFunctionResult#abi\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#abi\\\"><code>Abi</code></a></li>\\n</ul>\\n<p>The contract&#x27;s ABI.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeFunctionResult</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#abi\",\"isPage\":false,\"text\":\"\\n\\nType: Abi\\n\\nThe contract&#x27;s ABI.\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi, \\n  functionName: &#x27;ownerOf&#x27;,\\n  value: [&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;],\\n});\\n\",\"title\":\"abi\",\"titles\":[\"encodeFunctionResult\",\"Parameters\"]},{\"href\":\"/docs/contract/encodeFunctionResult#functionname\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n</ul>\\n<p>The function to encode from the ABI.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeFunctionResult</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#functionname\",\"isPage\":false,\"text\":\"\\n\\nType: string\\n\\nThe function to encode from the ABI.\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: &#x27;ownerOf&#x27;, \\n  value: [&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;],\\n});\\n\",\"title\":\"functionName\",\"titles\":[\"encodeFunctionResult\",\"Parameters\"]},{\"href\":\"/docs/contract/encodeFunctionResult#values\",\"html\":\"\\n<ul>\\n<li><strong>Type</strong>: <a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></li>\\n</ul>\\n<p>Return values to encode.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeFunctionResult</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ownerOf&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">});</span></span></code></pre>\",\"id\":\"pages/docs/contract/encodeFunctionResult.md#values\",\"isPage\":false,\"text\":\"\\n\\nType: Hex\\n\\nReturn values to encode.\\nconst data = encodeFunctionResult({\\n  abi: wagmiAbi,\\n  functionName: &#x27;ownerOf&#x27;,\\n  value: [&#x27;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#x27;], \\n});\",\"title\":\"values\",\"titles\":[\"encodeFunctionResult\",\"Parameters\"]}]}}"
