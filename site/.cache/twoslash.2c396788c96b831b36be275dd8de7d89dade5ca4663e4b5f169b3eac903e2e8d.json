"{\"value\":{\"code\":\"import { parseEther } from 'viem'\\n\\nconst data = await publicClient.call({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1'), // [!code focus]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const data: CallReturnType\",\"start\":41,\"length\":4,\"target\":\"data\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":54,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) call: (parameters: CallParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}>) => Promise<CallReturnType>\",\"docs\":\"Executes a new message call immediately without submitting a transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/public/call\\n- JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\",\"tags\":[[\"param\",\"args - {@link CallParameters}\"],[\"returns\",\"The call data. {@link CallReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst data = await client.call({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n})\"]],\"start\":67,\"length\":4,\"target\":\"call\",\"line\":2,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"docs\":\"Account attached to the call (msg.sender).\",\"start\":76,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) data: \\\"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\\\"\",\"start\":133,\"length\":4,\"target\":\"data\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":187,\"length\":2,\"target\":\"to\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":239,\"length\":5,\"target\":\"value\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":246,\"length\":10,\"target\":\"parseEther\",\"line\":6,\"character\":9}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nimport { parseEther } from 'viem'\\n\\nconst data = await publicClient.call({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1'), // [!code focus]\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const data: CallReturnType\",\"start\":41,\"length\":4,\"target\":\"data\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":54,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) call: (parameters: CallParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}>) => Promise<CallReturnType>\",\"docs\":\"Executes a new message call immediately without submitting a transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/public/call\\n- JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\",\"tags\":[[\"param\",\"args - {@link CallParameters}\"],[\"returns\",\"The call data. {@link CallReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst data = await client.call({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n})\"]],\"start\":67,\"length\":4,\"target\":\"call\",\"line\":2,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"docs\":\"Account attached to the call (msg.sender).\",\"start\":76,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) data: \\\"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\\\"\",\"start\":133,\"length\":4,\"target\":\"data\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":187,\"length\":2,\"target\":\"to\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":239,\"length\":5,\"target\":\"value\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":246,\"length\":10,\"target\":\"parseEther\",\"line\":6,\"character\":9}],\"tags\":[]}}"
