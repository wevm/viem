"{\"value\":{\"code\":\"const proof = await publicClient.getProof({\\n  address: '0x4200000000000000000000000000000000000016', // [!code focus]\\n  storageKeys: [\\n    '0x4a932049252365b3eedbc5190e18949f2ec11f39d3bef2d259764799a1b27d99',\\n  ],\\n  blockNumber: 42069n\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const proof: GetProofReturnType\",\"start\":6,\"length\":5,\"target\":\"proof\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":20,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\",\"docs\":\"Returns the account and storage values of the specified account including the Merkle-proof.\\n\\n- Docs: https://viem.sh/docs/actions/public/getProof\\n- JSON-RPC Methods:\\n  - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link GetProofParameters}\"],[\"returns\",\"Proof data. {@link GetProofReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst block = await client.getProof({\\n address: '0x...',\\n storageKeys: ['0x...'],\\n})\"]],\"start\":33,\"length\":8,\"target\":\"getProof\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"docs\":\"Account address.\",\"start\":46,\"length\":7,\"target\":\"address\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) storageKeys: `0x${string}`[]\",\"docs\":\"Array of storage-keys that should be proofed and included.\",\"start\":120,\"length\":11,\"target\":\"storageKeys\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) blockNumber?: bigint | undefined\",\"docs\":\"The block number.\",\"start\":216,\"length\":11,\"target\":\"blockNumber\",\"line\":5,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst proof = await publicClient.getProof({\\n  address: '0x4200000000000000000000000000000000000016', // [!code focus]\\n  storageKeys: [\\n    '0x4a932049252365b3eedbc5190e18949f2ec11f39d3bef2d259764799a1b27d99',\\n  ],\\n  blockNumber: 42069n\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const proof: GetProofReturnType\",\"start\":6,\"length\":5,\"target\":\"proof\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":20,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\",\"docs\":\"Returns the account and storage values of the specified account including the Merkle-proof.\\n\\n- Docs: https://viem.sh/docs/actions/public/getProof\\n- JSON-RPC Methods:\\n  - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link GetProofParameters}\"],[\"returns\",\"Proof data. {@link GetProofReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst block = await client.getProof({\\n address: '0x...',\\n storageKeys: ['0x...'],\\n})\"]],\"start\":33,\"length\":8,\"target\":\"getProof\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"docs\":\"Account address.\",\"start\":46,\"length\":7,\"target\":\"address\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) storageKeys: `0x${string}`[]\",\"docs\":\"Array of storage-keys that should be proofed and included.\",\"start\":120,\"length\":11,\"target\":\"storageKeys\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) blockNumber?: bigint | undefined\",\"docs\":\"The block number.\",\"start\":216,\"length\":11,\"target\":\"blockNumber\",\"line\":5,\"character\":2}],\"tags\":[]}}"
