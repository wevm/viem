"{\"value\":{\"code\":\"import { parseEther } from 'viem'\\nimport { account, walletClient } from './config'\\n \\nconst { id } = await walletClient.sendCalls({\\n  account,\\n  calls: [{\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    value: parseEther('1')\\n  }],\\n})\\n \\nconst result = await walletClient.waitForCallsStatus({ // [!code focus]\\n  id, // [!code focus]\\n}) // [!code focus]\\n\\n\\n\\n\\n\\n\\n\\n\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":43,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":52,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"const id: string\",\"start\":93,\"length\":2,\"target\":\"id\",\"line\":3,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":106,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCalls: <undefined>(parameters: SendCallsParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>) => Promise<SendCallsReturnType>\",\"docs\":\"Requests the connected wallet to send a batch of calls.\\n\\n- Docs: https://viem.sh/experimental/eip5792/sendCalls\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Transaction identifier. {@link SendCallsReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { eip5792Actions } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n}).extend(eip5792Actions())\\n\\nconst id = await client.sendCalls({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":119,\"length\":9,\"target\":\"sendCalls\",\"line\":3,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account | null\",\"start\":133,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly unknown[]\",\"start\":144,\"length\":5,\"target\":\"calls\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":158,\"length\":2,\"target\":\"to\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":212,\"length\":5,\"target\":\"value\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":219,\"length\":10,\"target\":\"parseEther\",\"line\":7,\"character\":11},{\"type\":\"hover\",\"text\":\"const result: {\\n    id: string;\\n    chainId: number;\\n    atomic: boolean;\\n    capabilities?: WalletCapabilities | undefined;\\n    receipts?: WalletCallReceipt<bigint, \\\"success\\\" | \\\"reverted\\\">[] | undefined;\\n    version: string;\\n    statusCode: number;\\n    status: \\\"pending\\\" | \\\"success\\\" | \\\"failure\\\" | undefined;\\n}\",\"start\":252,\"length\":6,\"target\":\"result\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":267,\"length\":12,\"target\":\"walletClient\",\"line\":11,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) waitForCallsStatus: (parameters: WaitForCallsStatusParameters) => Promise<WaitForCallsStatusReturnType>\",\"docs\":\"Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\\n\\n- Docs: https://viem.sh/experimental/eip5792/waitForCallsStatus\\n- JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link WaitForCallsStatusParameters}\"],[\"returns\",\"Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { waitForCallsStatus } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\"]],\"start\":280,\"length\":18,\"target\":\"waitForCallsStatus\",\"line\":11,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) id: string\",\"docs\":\"The id of the call batch to wait for.\",\"start\":320,\"length\":2,\"target\":\"id\",\"line\":12,\"character\":2},{\"type\":\"tag\",\"name\":\"log\",\"start\":361,\"length\":0,\"text\":\"{\",\"line\":14,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":362,\"length\":0,\"text\":\"  atomic: false,\",\"line\":15,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":363,\"length\":0,\"text\":\"  chainId: 1,\",\"line\":16,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":364,\"length\":0,\"text\":\"  id: '0x1234567890abcdef',\",\"line\":17,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":365,\"length\":0,\"text\":\"  statusCode: 200,\",\"line\":18,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":366,\"length\":0,\"text\":\"  status: 'success',\",\"line\":19,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":367,\"length\":0,\"text\":\"  receipts: [{ ... }],\",\"line\":20,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":368,\"length\":0,\"text\":\"}\",\"line\":22,\"character\":0}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[986,997],[953,985],[922,952],[893,921],[855,892],[831,854],[804,830],[792,803],[0,431]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"{\",\"start\":792,\"end\":803},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  atomic: false,\",\"start\":804,\"end\":830},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  chainId: 1,\",\"start\":831,\"end\":854},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  id: '0x1234567890abcdef',\",\"start\":855,\"end\":892},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  statusCode: 200,\",\"start\":893,\"end\":921},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  status: 'success',\",\"start\":922,\"end\":952},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  receipts: [{ ... }],\",\"start\":953,\"end\":985},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"}\",\"start\":986,\"end\":997}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { eip5792Actions } from 'viem/experimental'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n}).extend(eip5792Actions())\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":392,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseEther } from 'viem'\\nimport { account, walletClient } from './config'\\n \\nconst { id } = await walletClient.sendCalls({\\n  account,\\n  calls: [{\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    value: parseEther('1')\\n  }],\\n})\\n \\nconst result = await walletClient.waitForCallsStatus({ // [!code focus]\\n  id, // [!code focus]\\n}) // [!code focus]\\n// @log: {\\n\\n// @log:   atomic: false,\\n\\n// @log:   chainId: 1,\\n\\n// @log:   id: '0x1234567890abcdef',\\n\\n// @log:   statusCode: 200,\\n\\n// @log:   status: 'success',\\n\\n// @log:   receipts: [{ ... }],\\n\\n// @log: }\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":43,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":52,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"const id: string\",\"start\":93,\"length\":2,\"target\":\"id\",\"line\":3,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":106,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCalls: <undefined>(parameters: SendCallsParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>) => Promise<SendCallsReturnType>\",\"docs\":\"Requests the connected wallet to send a batch of calls.\\n\\n- Docs: https://viem.sh/experimental/eip5792/sendCalls\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Transaction identifier. {@link SendCallsReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { eip5792Actions } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n}).extend(eip5792Actions())\\n\\nconst id = await client.sendCalls({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":119,\"length\":9,\"target\":\"sendCalls\",\"line\":3,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account | null\",\"start\":133,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly unknown[]\",\"start\":144,\"length\":5,\"target\":\"calls\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":158,\"length\":2,\"target\":\"to\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":212,\"length\":5,\"target\":\"value\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":219,\"length\":10,\"target\":\"parseEther\",\"line\":7,\"character\":11},{\"type\":\"hover\",\"text\":\"const result: {\\n    id: string;\\n    chainId: number;\\n    atomic: boolean;\\n    capabilities?: WalletCapabilities | undefined;\\n    receipts?: WalletCallReceipt<bigint, \\\"success\\\" | \\\"reverted\\\">[] | undefined;\\n    version: string;\\n    statusCode: number;\\n    status: \\\"pending\\\" | \\\"success\\\" | \\\"failure\\\" | undefined;\\n}\",\"start\":252,\"length\":6,\"target\":\"result\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":267,\"length\":12,\"target\":\"walletClient\",\"line\":11,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) waitForCallsStatus: (parameters: WaitForCallsStatusParameters) => Promise<WaitForCallsStatusReturnType>\",\"docs\":\"Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\\n\\n- Docs: https://viem.sh/experimental/eip5792/waitForCallsStatus\\n- JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link WaitForCallsStatusParameters}\"],[\"returns\",\"Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { waitForCallsStatus } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\"]],\"start\":280,\"length\":18,\"target\":\"waitForCallsStatus\",\"line\":11,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) id: string\",\"docs\":\"The id of the call batch to wait for.\",\"start\":320,\"length\":2,\"target\":\"id\",\"line\":12,\"character\":2}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":361,\"length\":0,\"text\":\"{\",\"line\":14,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":362,\"length\":0,\"text\":\"  atomic: false,\",\"line\":15,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":363,\"length\":0,\"text\":\"  chainId: 1,\",\"line\":16,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":364,\"length\":0,\"text\":\"  id: '0x1234567890abcdef',\",\"line\":17,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":365,\"length\":0,\"text\":\"  statusCode: 200,\",\"line\":18,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":366,\"length\":0,\"text\":\"  status: 'success',\",\"line\":19,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":367,\"length\":0,\"text\":\"  receipts: [{ ... }],\",\"line\":20,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":368,\"length\":0,\"text\":\"}\",\"line\":22,\"character\":0}]}}"
