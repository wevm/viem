"{\"value\":{\"code\":\"import { walletClient } from './config'\\n \\nconst request = await walletClient.prepareTransactionRequest({ // [!code focus:16]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nconst serializedTransaction = await walletClient.signTransaction(request)\\nconst hash = await walletClient.sendRawTransaction({ serializedTransaction })\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":48,\"length\":7,\"target\":\"request\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":64,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) prepareTransactionRequest: <{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}, undefined, undefined>(args: PrepareTransactionRequestParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, undefined, {\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}>) => Promise<...>\",\"docs\":\"Prepares a transaction request for signing.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\",\"tags\":[[\"param\",\"args - {@link PrepareTransactionRequestParameters}\"],[\"returns\",\"The transaction request. {@link PrepareTransactionRequestReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"]],\"start\":77,\"length\":25,\"target\":\"prepareTransactionRequest\",\"line\":2,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":127,\"length\":2,\"target\":\"to\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: 1000000000000000000n\",\"start\":179,\"length\":5,\"target\":\"value\",\"line\":4,\"character\":2},{\"type\":\"tag\",\"name\":\"log\",\"start\":210,\"length\":0,\"text\":\"{\",\"line\":6,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":211,\"length\":0,\"text\":\"  account: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\",\"line\":7,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":212,\"length\":0,\"text\":\"  to: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',\",\"line\":8,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":213,\"length\":0,\"text\":\"  maxFeePerGas: 150000000000n,\",\"line\":9,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":214,\"length\":0,\"text\":\"  maxPriorityFeePerGas: 1000000000n,\",\"line\":10,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":215,\"length\":0,\"text\":\"  nonce: 69,\",\"line\":11,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":216,\"length\":0,\"text\":\"  type: 'eip1559',\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":217,\"length\":0,\"text\":\"  value: 1000000000000000000n\",\"line\":13,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":218,\"length\":0,\"text\":\"}\",\"line\":14,\"character\":0},{\"type\":\"hover\",\"text\":\"const serializedTransaction: `0x02${string}` | `0x01${string}` | `0x03${string}` | `0x04${string}` | TransactionSerializedLegacy\",\"start\":226,\"length\":21,\"target\":\"serializedTransaction\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":256,\"length\":12,\"target\":\"walletClient\",\"line\":16,\"character\":36},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n} | ... 3 more ... | {\\n    ...;\\n}>(args: never) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":269,\"length\":15,\"target\":\"signTransaction\",\"line\":16,\"character\":49},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":285,\"length\":7,\"target\":\"request\",\"line\":16,\"character\":65},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":300,\"length\":4,\"target\":\"hash\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":313,\"length\":12,\"target\":\"walletClient\",\"line\":17,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendRawTransaction: (args: SendRawTransactionParameters) => Promise<SendRawTransactionReturnType>\",\"docs\":\"Sends a **signed** transaction to the network\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\\n- JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendRawTransactionParameters}\"],[\"returns\",\"The transaction hash. {@link SendRawTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { sendRawTransaction } from 'viem/wallet'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst hash = await client.sendRawTransaction({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\\n})\"]],\"start\":326,\"length\":18,\"target\":\"sendRawTransaction\",\"line\":17,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) serializedTransaction: `0x${string}`\",\"docs\":\"The signed serialized transaction.\",\"start\":347,\"length\":21,\"target\":\"serializedTransaction\",\"line\":17,\"character\":53}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[1290,1301],[1250,1289],[1221,1249],[1198,1220],[1151,1197],[1110,1150],[1048,1109],[981,1047],[969,980],[0,759]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ JSON-RPC Account\",\"start\":546,\"end\":574},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ Local Account\",\"start\":643,\"end\":668},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"{\",\"start\":969,\"end\":980},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  account: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\",\"start\":981,\"end\":1047},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  to: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',\",\"start\":1048,\"end\":1109},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  maxFeePerGas: 150000000000n,\",\"start\":1110,\"end\":1150},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  maxPriorityFeePerGas: 1000000000n,\",\"start\":1151,\"end\":1197},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  nonce: 69,\",\"start\":1198,\"end\":1220},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  type: 'eip1559',\",\"start\":1221,\"end\":1249},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  value: 1000000000000000000n\",\"start\":1250,\"end\":1289},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"}\",\"start\":1290,\"end\":1301}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":238,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!)\\n})\\n\\n// @log: ↓ JSON-RPC Account\\nexport const account = '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\\n\\n// @log: ↓ Local Account\\n\\n// export const account = privateKeyToAccount(...)\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":720,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { walletClient } from './config'\\n \\nconst request = await walletClient.prepareTransactionRequest({ // [!code focus:16]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n// @log: {\\n\\n// @log:   account: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\\n\\n// @log:   to: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',\\n\\n// @log:   maxFeePerGas: 150000000000n,\\n\\n// @log:   maxPriorityFeePerGas: 1000000000n,\\n\\n// @log:   nonce: 69,\\n\\n// @log:   type: 'eip1559',\\n\\n// @log:   value: 1000000000000000000n\\n\\n// @log: }\\n\\n\\nconst serializedTransaction = await walletClient.signTransaction(request)\\nconst hash = await walletClient.sendRawTransaction({ serializedTransaction })\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":48,\"length\":7,\"target\":\"request\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":64,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) prepareTransactionRequest: <{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}, undefined, undefined>(args: PrepareTransactionRequestParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, undefined, {\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}>) => Promise<...>\",\"docs\":\"Prepares a transaction request for signing.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\",\"tags\":[[\"param\",\"args - {@link PrepareTransactionRequestParameters}\"],[\"returns\",\"The transaction request. {@link PrepareTransactionRequestReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"]],\"start\":77,\"length\":25,\"target\":\"prepareTransactionRequest\",\"line\":2,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":127,\"length\":2,\"target\":\"to\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: 1000000000000000000n\",\"start\":179,\"length\":5,\"target\":\"value\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"const serializedTransaction: `0x02${string}` | `0x01${string}` | `0x03${string}` | `0x04${string}` | TransactionSerializedLegacy\",\"start\":226,\"length\":21,\"target\":\"serializedTransaction\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":256,\"length\":12,\"target\":\"walletClient\",\"line\":16,\"character\":36},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n} | ... 3 more ... | {\\n    ...;\\n}>(args: never) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":269,\"length\":15,\"target\":\"signTransaction\",\"line\":16,\"character\":49},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":285,\"length\":7,\"target\":\"request\",\"line\":16,\"character\":65},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":300,\"length\":4,\"target\":\"hash\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":313,\"length\":12,\"target\":\"walletClient\",\"line\":17,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendRawTransaction: (args: SendRawTransactionParameters) => Promise<SendRawTransactionReturnType>\",\"docs\":\"Sends a **signed** transaction to the network\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\\n- JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendRawTransactionParameters}\"],[\"returns\",\"The transaction hash. {@link SendRawTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { sendRawTransaction } from 'viem/wallet'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst hash = await client.sendRawTransaction({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\\n})\"]],\"start\":326,\"length\":18,\"target\":\"sendRawTransaction\",\"line\":17,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) serializedTransaction: `0x${string}`\",\"docs\":\"The signed serialized transaction.\",\"start\":347,\"length\":21,\"target\":\"serializedTransaction\",\"line\":17,\"character\":53}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":210,\"length\":0,\"text\":\"{\",\"line\":6,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":211,\"length\":0,\"text\":\"  account: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\",\"line\":7,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":212,\"length\":0,\"text\":\"  to: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',\",\"line\":8,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":213,\"length\":0,\"text\":\"  maxFeePerGas: 150000000000n,\",\"line\":9,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":214,\"length\":0,\"text\":\"  maxPriorityFeePerGas: 1000000000n,\",\"line\":10,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":215,\"length\":0,\"text\":\"  nonce: 69,\",\"line\":11,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":216,\"length\":0,\"text\":\"  type: 'eip1559',\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":217,\"length\":0,\"text\":\"  value: 1000000000000000000n\",\"line\":13,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":218,\"length\":0,\"text\":\"}\",\"line\":14,\"character\":0}]}}"
