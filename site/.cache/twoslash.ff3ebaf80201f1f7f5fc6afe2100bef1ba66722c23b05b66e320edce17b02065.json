"{\"value\":{\"code\":\"const signature = await walletClient.signTransaction({\\n  account,\\n  maxFeePerGas: parseGwei('20'),  // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1')\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const signature: `0x02${string}`\",\"start\":6,\"length\":9,\"target\":\"signature\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":24,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <Chain | undefined, {\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}>(args: SignTransactionParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, Chain | undefined, {\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}>) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":37,\"length\":15,\"target\":\"signTransaction\",\"line\":0,\"character\":37},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":57,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas: any\",\"start\":68,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":82,\"length\":9,\"target\":\"parseGwei\",\"line\":2,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":119,\"length\":2,\"target\":\"to\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":171,\"length\":5,\"target\":\"value\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":178,\"length\":10,\"target\":\"parseEther\",\"line\":4,\"character\":9}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,259]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":246,\"end\":259}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\n\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst signature = await walletClient.signTransaction({\\n  account,\\n  maxFeePerGas: parseGwei('20'),  // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1')\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const signature: `0x02${string}`\",\"start\":6,\"length\":9,\"target\":\"signature\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":24,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <Chain | undefined, {\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}>(args: SignTransactionParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, Chain | undefined, {\\n    readonly account: any;\\n    readonly maxFeePerGas: any;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}>) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":37,\"length\":15,\"target\":\"signTransaction\",\"line\":0,\"character\":37},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":57,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas: any\",\"start\":68,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":82,\"length\":9,\"target\":\"parseGwei\",\"line\":2,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":119,\"length\":2,\"target\":\"to\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":171,\"length\":5,\"target\":\"value\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":178,\"length\":10,\"target\":\"parseEther\",\"line\":4,\"character\":9}],\"tags\":[]}}"
