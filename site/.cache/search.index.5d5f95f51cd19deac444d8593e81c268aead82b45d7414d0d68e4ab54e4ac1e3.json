"{\"value\":{\"mdx\":\"---\\ndescription: Watches and returns incoming block numbers.\\n---\\n\\n# watchBlockNumber\\n\\nWatches and returns incoming block numbers.\\n\\n## Usage\\n\\nPass through your Public Client, along with a listener.\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { publicClient } from './client'\\n\\nconst unwatch = publicClient.watchBlockNumber( // [!code focus:99]\\n  { onBlockNumber: blockNumber => console.log(blockNumber) }\\n)\\n// @log: > 69420n\\n// @log: > 69421n\\n// @log: > 69422n\\n```\\n\\n```ts twoslash [client.ts] filename=\\\"client.ts\\\"\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n## Listener\\n\\n`(blockNumber: bigint) => void`\\n\\nThe block number.\\n\\n## Returns\\n\\n`UnwatchFn`\\n\\nA function that can be invoked to stop watching for new block numbers.\\n\\n## Parameters\\n\\n### emitMissed (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `false`\\n\\nWhether or not to emit missed block numbers to the callback. \\n\\nMissed block numbers may occur in instances where internet connection is lost, or the block time is lesser than the [polling interval](/docs/clients/public#pollinginterval-optional) of the client.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    emitMissed: true, // [!code focus]\\n    onBlockNumber: blockNumber => console.log(blockNumber),\\n  }\\n)\\n```\\n\\n### emitOnBegin (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `false`\\n\\nWhether or not to emit the latest block number to the callback when the subscription opens.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    emitOnBegin: true, // [!code focus]\\n    onBlockNumber: blockNumber => console.log(blockNumber),\\n  }\\n)\\n```\\n\\n### poll (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `false` for WebSocket Transports, `true` for non-WebSocket Transports\\n\\nWhether or not to use a polling mechanism to check for new block numbers instead of a WebSocket subscription.\\n\\nThis option is only configurable for Clients with a [WebSocket Transport](/docs/clients/transports/websocket).\\n\\n```ts twoslash\\nimport { createPublicClient, webSocket } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: webSocket()\\n})\\n\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    onBlockNumber: blockNumber => console.log(blockNumber),\\n    poll: true, // [!code focus]\\n  }\\n)\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n\\nPolling frequency (in ms). Defaults to Client's `pollingInterval` config.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    onBlockNumber: blockNumber => console.log(blockNumber),\\n    pollingInterval: 12_000, // [!code focus]\\n  }\\n)\\n```\\n\\n## Example\\n\\nCheck out the usage of `watchBlockNumber` in the live [Watch Block Numbers Example](https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks) below.\\n\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=0&ctl=1\\\"></iframe>\\n\\n## JSON-RPC Methods\\n\\n- When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\\n- When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\\\"newHeads\\\"` event. \\n\",\"document\":[{\"href\":\"/docs/actions/public/watchBlockNumber#watchblocknumber\",\"html\":\"</header>\\n<p>Watches and returns incoming block numbers.</p>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#watchblocknumber\",\"isPage\":true,\"text\":\"\\nWatches and returns incoming block numbers.\\n\",\"title\":\"watchBlockNumber\",\"titles\":[]},{\"href\":\"/docs/actions/public/watchBlockNumber#usage\",\"html\":\"\\n<p>Pass through your Public Client, along with a listener.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: client.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">( </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">onBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(blockNumber) }</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: &gt; 69420n</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: &gt; 69421n</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: &gt; 69422n</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#usage\",\"isPage\":false,\"text\":\"\\nPass through your Public Client, along with a listener.\\n// @filename: client.ts\\nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// @filename: example.js\\n \\n// ---cut---\\nimport { publicClient } from &#x27;./client&#x27;\\n \\nconst unwatch = publicClient.watchBlockNumber( \\n  { onBlockNumber: blockNumber =&gt; console.log(blockNumber) }\\n)\\n// @log: &gt; 69420n\\n \\n// @log: &gt; 69421n\\n \\n// @log: &gt; 69422nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"watchBlockNumber\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#listener\",\"html\":\"\\n<p><code>(blockNumber: bigint) =&gt; void</code></p>\\n<p>The block number.</p>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#listener\",\"isPage\":false,\"text\":\"\\n(blockNumber: bigint) =&gt; void\\nThe block number.\\n\",\"title\":\"Listener\",\"titles\":[\"watchBlockNumber\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#returns\",\"html\":\"\\n<p><code>UnwatchFn</code></p>\\n<p>A function that can be invoked to stop watching for new block numbers.</p>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#returns\",\"isPage\":false,\"text\":\"\\nUnwatchFn\\nA function that can be invoked to stop watching for new block numbers.\\n\",\"title\":\"Returns\",\"titles\":[\"watchBlockNumber\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"watchBlockNumber\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#emitmissed-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>false</code></li>\\n</ul>\\n<p>Whether or not to emit missed block numbers to the callback.</p>\\n<p>Missed block numbers may occur in instances where internet connection is lost, or the block time is lesser than the <a href=\\\"/docs/clients/public#pollinginterval-optional\\\">polling interval</a> of the client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    emitMissed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(blockNumber),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#emitmissed-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: false\\n\\nWhether or not to emit missed block numbers to the callback.\\nMissed block numbers may occur in instances where internet connection is lost, or the block time is lesser than the polling interval of the client.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    emitMissed: true, \\n    onBlockNumber: blockNumber =&gt; console.log(blockNumber),\\n  }\\n)\\n\",\"title\":\"emitMissed (optional)\",\"titles\":[\"watchBlockNumber\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#emitonbegin-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>false</code></li>\\n</ul>\\n<p>Whether or not to emit the latest block number to the callback when the subscription opens.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    emitOnBegin: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(blockNumber),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#emitonbegin-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: false\\n\\nWhether or not to emit the latest block number to the callback when the subscription opens.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    emitOnBegin: true, \\n    onBlockNumber: blockNumber =&gt; console.log(blockNumber),\\n  }\\n)\\n\",\"title\":\"emitOnBegin (optional)\",\"titles\":[\"watchBlockNumber\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#poll-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>false</code> for WebSocket Transports, <code>true</code> for non-WebSocket Transports</li>\\n</ul>\\n<p>Whether or not to use a polling mechanism to check for new block numbers instead of a WebSocket subscription.</p>\\n<p>This option is only configurable for Clients with a <a href=\\\"/docs/clients/transports/websocket\\\">WebSocket Transport</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, webSocket } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">webSocket</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(blockNumber),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    poll: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#poll-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: false for WebSocket Transports, true for non-WebSocket Transports\\n\\nWhether or not to use a polling mechanism to check for new block numbers instead of a WebSocket subscription.\\nThis option is only configurable for Clients with a WebSocket Transport.\\nimport { createPublicClient, webSocket } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: webSocket()\\n})\\n \\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    onBlockNumber: blockNumber =&gt; console.log(blockNumber),\\n    poll: true, \\n  }\\n)\\n\",\"title\":\"poll (optional)\",\"titles\":[\"watchBlockNumber\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Polling frequency (in ms). Defaults to Client&#x27;s <code>pollingInterval</code> config.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(blockNumber),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">12_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nPolling frequency (in ms). Defaults to Client&#x27;s pollingInterval config.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst unwatch = publicClient.watchBlockNumber(\\n  { \\n    onBlockNumber: blockNumber =&gt; console.log(blockNumber),\\n    pollingInterval: 12_000, \\n  }\\n)\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"watchBlockNumber\",\"Parameters\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#example\",\"html\":\"\\n<p>Check out the usage of <code>watchBlockNumber</code> in the live <a href=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\\\">Watch Block Numbers Example</a> below.</p>\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks?embed=1&amp;file=index.ts&amp;hideNavigation=1&amp;hideDevTools=true&amp;terminalHeight=0&amp;ctl=1\\\"></iframe>\\n\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#example\",\"isPage\":false,\"text\":\"\\nCheck out the usage of watchBlockNumber in the live Watch Block Numbers Example below.\\n\\n\",\"title\":\"Example\",\"titles\":[\"watchBlockNumber\"]},{\"href\":\"/docs/actions/public/watchBlockNumber#json-rpc-methods\",\"html\":\"\\n<ul>\\n<li>When <code>poll: true</code>, calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber\\\"><code>eth_blockNumber</code></a> on a polling interval.</li>\\n<li>When <code>poll: false</code> &amp; WebSocket Transport, uses a WebSocket subscription via <a href=\\\"https://docs.alchemy.com/reference/eth-subscribe-polygon\\\"><code>eth_subscribe</code></a> and the <code>&quot;newHeads&quot;</code> event.</li>\\n</ul>\",\"id\":\"pages/docs/actions/public/watchBlockNumber.md#json-rpc-methods\",\"isPage\":false,\"text\":\"\\n\\nWhen poll: true, calls eth_blockNumber on a polling interval.\\nWhen poll: false &amp; WebSocket Transport, uses a WebSocket subscription via eth_subscribe and the &quot;newHeads&quot; event.\\n\",\"title\":\"JSON-RPC Methods\",\"titles\":[\"watchBlockNumber\"]}]}}"
