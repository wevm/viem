"{\"value\":{\"code\":\"import { walletClient } from './client'\\n \\nconst authorization = await walletClient.signAuthorization({\\n  contractAddress: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  chainId: 10, // [!code focus]\\n  nonce: 420, // [!code focus]\\n})\\n\\n\\n\\n\\n\\n\\n\\n\\nconst hash = await walletClient.sendTransaction({\\n  authorizationList: [authorization],\\n  data: '0xdeadbeef',\\n  to: walletClient.account.address,\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":48,\"length\":13,\"target\":\"authorization\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":70,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/experimental/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/experimental/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":83,\"length\":17,\"target\":\"signAuthorization\",\"line\":2,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":105,\"length\":15,\"target\":\"contractAddress\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) chainId?: number | undefined\",\"docs\":\"Chain ID to authorize.\",\"start\":170,\"length\":7,\"target\":\"chainId\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) nonce?: number | undefined\",\"docs\":\"Nonce of the Authority to authorize.\",\"start\":202,\"length\":5,\"target\":\"nonce\",\"line\":5,\"character\":2},{\"type\":\"tag\",\"name\":\"log\",\"start\":234,\"length\":0,\"text\":\"{\",\"line\":7,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":235,\"length\":0,\"text\":\"  chainId: 10,\",\"line\":8,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":236,\"length\":0,\"text\":\"  contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\",\"line\":9,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":237,\"length\":0,\"text\":\"  nonce: 420,\",\"line\":10,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":238,\"length\":0,\"text\":\"  r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\",\"line\":11,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":239,\"length\":0,\"text\":\"  s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":240,\"length\":0,\"text\":\"  yParity: 0,\",\"line\":13,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":241,\"length\":0,\"text\":\"}\",\"line\":14,\"character\":0},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":248,\"length\":4,\"target\":\"hash\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":261,\"length\":12,\"target\":\"walletClient\",\"line\":15,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}, undefined>(args: SendTransactionParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":274,\"length\":15,\"target\":\"sendTransaction\",\"line\":15,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: readonly [SignAuthorizationReturnType]\",\"start\":294,\"length\":17,\"target\":\"authorizationList\",\"line\":16,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":314,\"length\":13,\"target\":\"authorization\",\"line\":16,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) data: \\\"0xdeadbeef\\\"\",\"start\":332,\"length\":4,\"target\":\"data\",\"line\":17,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":354,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":358,\"length\":12,\"target\":\"walletClient\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    ...;\\n}\",\"docs\":\"The Account of the Client.\",\"start\":371,\"length\":7,\"target\":\"account\",\"line\":18,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":379,\"length\":7,\"target\":\"address\",\"line\":18,\"character\":27}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[1345,1356],[1321,1344],[1236,1320],[1151,1235],[1127,1150],[1052,1126],[1027,1051],[1015,1026],[0,781]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"{\",\"start\":1015,\"end\":1026},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  chainId: 10,\",\"start\":1027,\"end\":1051},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\",\"start\":1052,\"end\":1126},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  nonce: 420,\",\"start\":1127,\"end\":1150},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\",\"start\":1151,\"end\":1235},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\",\"start\":1236,\"end\":1320},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  yParity: 0,\",\"start\":1321,\"end\":1344},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"}\",\"start\":1345,\"end\":1356}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":371,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":742,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { walletClient } from './client'\\n \\nconst authorization = await walletClient.signAuthorization({\\n  contractAddress: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  chainId: 10, // [!code focus]\\n  nonce: 420, // [!code focus]\\n})\\n// @log: {\\n\\n// @log:   chainId: 10,\\n\\n// @log:   contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\\n\\n// @log:   nonce: 420,\\n\\n// @log:   r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\\n\\n// @log:   s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\\n\\n// @log:   yParity: 0,\\n\\n// @log: }\\n\\nconst hash = await walletClient.sendTransaction({\\n  authorizationList: [authorization],\\n  data: '0xdeadbeef',\\n  to: walletClient.account.address,\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":48,\"length\":13,\"target\":\"authorization\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":70,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/experimental/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/experimental/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":83,\"length\":17,\"target\":\"signAuthorization\",\"line\":2,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":105,\"length\":15,\"target\":\"contractAddress\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) chainId?: number | undefined\",\"docs\":\"Chain ID to authorize.\",\"start\":170,\"length\":7,\"target\":\"chainId\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) nonce?: number | undefined\",\"docs\":\"Nonce of the Authority to authorize.\",\"start\":202,\"length\":5,\"target\":\"nonce\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":248,\"length\":4,\"target\":\"hash\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":261,\"length\":12,\"target\":\"walletClient\",\"line\":15,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}, undefined>(args: SendTransactionParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":274,\"length\":15,\"target\":\"sendTransaction\",\"line\":15,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: readonly [SignAuthorizationReturnType]\",\"start\":294,\"length\":17,\"target\":\"authorizationList\",\"line\":16,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":314,\"length\":13,\"target\":\"authorization\",\"line\":16,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) data: \\\"0xdeadbeef\\\"\",\"start\":332,\"length\":4,\"target\":\"data\",\"line\":17,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":354,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":358,\"length\":12,\"target\":\"walletClient\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    ...;\\n}\",\"docs\":\"The Account of the Client.\",\"start\":371,\"length\":7,\"target\":\"account\",\"line\":18,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":379,\"length\":7,\"target\":\"address\",\"line\":18,\"character\":27}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":234,\"length\":0,\"text\":\"{\",\"line\":7,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":235,\"length\":0,\"text\":\"  chainId: 10,\",\"line\":8,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":236,\"length\":0,\"text\":\"  contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\",\"line\":9,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":237,\"length\":0,\"text\":\"  nonce: 420,\",\"line\":10,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":238,\"length\":0,\"text\":\"  r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\",\"line\":11,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":239,\"length\":0,\"text\":\"  s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":240,\"length\":0,\"text\":\"  yParity: 0,\",\"line\":13,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":241,\"length\":0,\"text\":\"}\",\"line\":14,\"character\":0}]}}"
