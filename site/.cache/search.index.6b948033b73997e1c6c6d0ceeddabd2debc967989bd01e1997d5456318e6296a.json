"{\"value\":{\"mdx\":\"# Celo [Integrating with Celo in Viem]\\n\\nViem provides first-class support for chains implemented on [Celo](https://celo.org/).\\n\\n## Chains\\n\\nThe following Viem chains are implemented on Celo:\\n\\n```ts\\nimport {\\n  celo, // [!code hl]\\n  celoAlfajores, // [!code hl]\\n} from 'viem/chains'\\n```\\n\\n### Configuration\\n\\nViem exports Celo's chain [formatters](/docs/chains/formatters) & [serializers](/docs/chains/serializers) via `chainConfig`. This is useful if you need to define another chain which is implemented on Celo.\\n\\n```ts\\nimport { defineChain } from 'viem'\\nimport { chainConfig } from 'viem/celo'\\n\\nexport const celoExample = defineChain({\\n  ...chainConfig,\\n  name: 'Celo Example',\\n  // ...\\n})\\n```\\n\\n## Utilities\\n\\n### `parseTransaction`\\n\\nParses a serialized RLP-encoded transaction. Supports signed & unsigned CIP-64, EIP-1559, EIP-2930 and Legacy Transactions.\\n\\nCelo-flavored version of [Viem's `parseTransaction`](/docs/utilities/parseTransaction).\\n\\n#### Parameters\\n\\n- `serializedTransaction` (`Hex`): The serialized transaction.\\n\\n```ts\\nimport { parseTransaction } from 'viem/celo'\\n\\nconst transaction = parseTransaction('0x7cf84682a4ec80847735940084773594008094765de816845861e75a25fca122bb6898b8b1282a808094f39fd6e51aad88f6f4ce6ab8827279cfffb92266880de0b6b3a764000080c0')\\n```\\n\\n### `serializeTransaction`\\n\\nSerializes a transaction object. Supports CIP-64, EIP-1559, EIP-2930, and Legacy transactions.\\n\\nCelo-flavored version of [Viem's `serializeTransaction`](/docs/utilities/serializeTransaction).\\n\\n#### Parameters\\n\\n- `transaction` (`TransactionSerializable`): The transaction object to serialize.\\n- `signature` (`Signature`): Optional signature to include.\\n\\n```ts\\nimport { serializeTransaction } from 'viem/celo'\\n\\nconst serialized = serializeTransaction({\\n  chainId: 42220,\\n  gas: 21001n,\\n  feeCurrency: \\\"0x2F25deB3848C207fc8E0c34035B3Ba7fC157602B\\\" // whitelisted adapter for USDC\\n  maxFeePerGas: parseGwei('20'),\\n  maxPriorityFeePerGas: parseGwei('2'),\\n  nonce: 69,\\n  to: '0x1234512345123451234512345123451234512345',\\n  value: parseEther('0.01'),\\n})\\n```\\n\",\"document\":[{\"href\":\"/docs/chains/celo#celo\",\"html\":\"<div role=\\\"doc-subtitle\\\">Integrating with Celo in Viem</div></header>\\n<p>Viem provides first-class support for chains implemented on <a href=\\\"https://celo.org/\\\">Celo</a>.</p>\\n\",\"id\":\"pages/docs/chains/celo.md#celo\",\"isPage\":true,\"text\":\"Integrating with Celo in Viem\\nViem provides first-class support for chains implemented on Celo.\\n\",\"title\":\"Celo\",\"titles\":[]},{\"href\":\"/docs/chains/celo#chains\",\"html\":\"\\n<p>The following Viem chains are implemented on Celo:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  celo, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  celoAlfajores, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/chains/celo.md#chains\",\"isPage\":false,\"text\":\"\\nThe following Viem chains are implemented on Celo:\\nimport {\\n  celo, \\n  celoAlfajores, \\n} from &#x27;viem/chains&#x27;\\n\",\"title\":\"Chains\",\"titles\":[\"Celo\"]},{\"href\":\"/docs/chains/celo#configuration\",\"html\":\"\\n<p>Viem exports Celo&#x27;s chain <a href=\\\"/docs/chains/formatters\\\">formatters</a> &amp; <a href=\\\"/docs/chains/serializers\\\">serializers</a> via <code>chainConfig</code>. This is useful if you need to define another chain which is implemented on Celo.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { defineChain } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { chainConfig } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/celo&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> celoExample</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> defineChain</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">chainConfig,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Celo Example&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/chains/celo.md#configuration\",\"isPage\":false,\"text\":\"\\nViem exports Celo&#x27;s chain formatters &amp; serializers via chainConfig. This is useful if you need to define another chain which is implemented on Celo.\\nimport { defineChain } from &#x27;viem&#x27;\\nimport { chainConfig } from &#x27;viem/celo&#x27;\\n \\nexport const celoExample = defineChain({\\n  ...chainConfig,\\n  name: &#x27;Celo Example&#x27;,\\n  // ...\\n})\\n\",\"title\":\"Configuration\",\"titles\":[\"Celo\",\"Chains\"]},{\"href\":\"/docs/chains/celo#utilities\",\"html\":\"\\n\",\"id\":\"pages/docs/chains/celo.md#utilities\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Utilities\",\"titles\":[\"Celo\"]},{\"href\":\"/docs/chains/celo#parsetransaction\",\"html\":\"\\n<p>Parses a serialized RLP-encoded transaction. Supports signed &amp; unsigned CIP-64, EIP-1559, EIP-2930 and Legacy Transactions.</p>\\n<p>Celo-flavored version of <a href=\\\"/docs/utilities/parseTransaction\\\">Viem&#x27;s <code>parseTransaction</code></a>.</p>\\n\",\"id\":\"pages/docs/chains/celo.md#parsetransaction\",\"isPage\":false,\"text\":\"\\nParses a serialized RLP-encoded transaction. Supports signed &amp; unsigned CIP-64, EIP-1559, EIP-2930 and Legacy Transactions.\\nCelo-flavored version of Viem&#x27;s parseTransaction.\\n\",\"title\":\"parseTransaction\",\"titles\":[\"Celo\",\"Utilities\"]},{\"href\":\"/docs/chains/celo#parameters\",\"html\":\"\\n<ul>\\n<li><code>serializedTransaction</code> (<code>Hex</code>): The serialized transaction.</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { parseTransaction } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/celo&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> parseTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x7cf84682a4ec80847735940084773594008094765de816845861e75a25fca122bb6898b8b1282a808094f39fd6e51aad88f6f4ce6ab8827279cfffb92266880de0b6b3a764000080c0&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/chains/celo.md#parameters\",\"isPage\":false,\"text\":\"\\n\\nserializedTransaction (Hex): The serialized transaction.\\n\\nimport { parseTransaction } from &#x27;viem/celo&#x27;\\n \\nconst transaction = parseTransaction(&#x27;0x7cf84682a4ec80847735940084773594008094765de816845861e75a25fca122bb6898b8b1282a808094f39fd6e51aad88f6f4ce6ab8827279cfffb92266880de0b6b3a764000080c0&#x27;)\\n\",\"title\":\"Parameters\",\"titles\":[\"Celo\",\"Utilities\",\"parseTransaction\"]},{\"href\":\"/docs/chains/celo#serializetransaction\",\"html\":\"\\n<p>Serializes a transaction object. Supports CIP-64, EIP-1559, EIP-2930, and Legacy transactions.</p>\\n<p>Celo-flavored version of <a href=\\\"/docs/utilities/serializeTransaction\\\">Viem&#x27;s <code>serializeTransaction</code></a>.</p>\\n\",\"id\":\"pages/docs/chains/celo.md#serializetransaction\",\"isPage\":false,\"text\":\"\\nSerializes a transaction object. Supports CIP-64, EIP-1559, EIP-2930, and Legacy transactions.\\nCelo-flavored version of Viem&#x27;s serializeTransaction.\\n\",\"title\":\"serializeTransaction\",\"titles\":[\"Celo\",\"Utilities\"]},{\"href\":\"/docs/chains/celo#parameters-1\",\"html\":\"\\n<ul>\\n<li><code>transaction</code> (<code>TransactionSerializable</code>): The transaction object to serialize.</li>\\n<li><code>signature</code> (<code>Signature</code>): Optional signature to include.</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { serializeTransaction } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/celo&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> serialized</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> serializeTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chainId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">42220</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">21001</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  feeCurrency: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;0x2F25deB3848C207fc8E0c34035B3Ba7fC157602B&quot;</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> // whitelisted adapter for USDC</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxPriorityFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1234512345123451234512345123451234512345&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0.01&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/chains/celo.md#parameters-1\",\"isPage\":false,\"text\":\"\\n\\ntransaction (TransactionSerializable): The transaction object to serialize.\\nsignature (Signature): Optional signature to include.\\n\\nimport { serializeTransaction } from &#x27;viem/celo&#x27;\\n \\nconst serialized = serializeTransaction({\\n  chainId: 42220,\\n  gas: 21001n,\\n  feeCurrency: &quot;0x2F25deB3848C207fc8E0c34035B3Ba7fC157602B&quot; // whitelisted adapter for USDC\\n  maxFeePerGas: parseGwei(&#x27;20&#x27;),\\n  maxPriorityFeePerGas: parseGwei(&#x27;2&#x27;),\\n  nonce: 69,\\n  to: &#x27;0x1234512345123451234512345123451234512345&#x27;,\\n  value: parseEther(&#x27;0.01&#x27;),\\n})\",\"title\":\"Parameters\",\"titles\":[\"Celo\",\"Utilities\",\"serializeTransaction\"]}]}}"
