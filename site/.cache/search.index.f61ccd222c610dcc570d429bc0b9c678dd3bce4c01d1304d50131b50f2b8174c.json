"{\"value\":{\"mdx\":\"---\\ndescription: Sets up and returns a KZG interface.\\n---\\n\\n# setupKzg\\n\\nSets up and defines a [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) compatible [KZG interface](https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#How-%E2%80%9Ccomplicated%E2%80%9D-and-%E2%80%9Cnew%E2%80%9D-is-KZG). The KZG interface is used in the blob transaction signing process to generate KZG commitments & proofs.\\n\\n`setupKzg` accepts a KZG interface that implements three functions:\\n\\n- `loadTrustedSetup`: A function to initialize the KZG trusted setup.\\n- `blobToKzgCommitment`: A function that takes a blob and returns it's KZG commitment.\\n- `computeBlobKzgProof`: A function that takes a blob and it's commitment, and returns the KZG proof.\\n\\nA couple of KZG implementations we recommend are:\\n- [c-kzg](https://github.com/ethereum/c-kzg-4844): Node.js bindings to c-kzg.\\n- [kzg-wasm](https://github.com/ethereumjs/kzg-wasm): WebAssembly bindings to c-kzg.\\n\\n## Import\\n\\n```ts twoslash\\nimport { setupKzg } from 'viem'\\n```\\n\\n## Usage\\n\\n```ts twoslash\\n// @noErrors\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n```\\n\\n### Trusted Setups\\n\\nAs seen above, when you set up your KZG interface, you will need to provide a trusted setup file. You can either import a trusted setup via the [`viem/node` entrypoint](#viemnode-entrypoint) (if you're using an engine that supports Node.js' `node:fs` module), or you can directly import the trusted setup `.json` via the [`viem/trusted-setups` entrypoint](#viemtrusted-setups-entrypoint).\\n\\nViem exports the following trusted setups:\\n\\n- `mainnet.json`: For Ethereum Mainnet & it's Testnets (Sepolia, Goerli, etc).\\n- `minimal.json`: For low-resource local dev testnets, and spec-testing.\\n\\nThe trusted setup files are retrieved from the Ethereum [consensus-specs repository](https://github.com/ethereum/consensus-specs/tree/dev/presets).\\n\\n#### `viem/node` Entrypoint\\n\\nViem exports **paths to the trusted setup** via the `viem/node` entrypoint, designed to be used with `setupKzg`. \\n\\n```ts\\nimport {\\n  mainnetTrustedSetupPath,\\n  minimalTrustedSetupPath,\\n} from 'viem/node'\\n```\\n\\n#### `viem/trusted-setups` Entrypoint\\n\\nAlternatively, you can directly import the **contents of the trusted setup** file from the `viem/trusted-setups` entrypoint.\\n\\n```ts\\nimport mainnetTrustedSetup from 'viem/trusted-setups/mainnet.json'\\nimport minimalTrustedSetup from 'viem/trusted-setups/minimal.json'\\n```\\n\\n## Returns\\n\\n`Kzg`\\n\\nThe KZG interface.\\n\\n## Parameters\\n\\n### kzg\\n\\n- **Type:** `Kzg & { loadTrustedSetup(path: string): void }`\\n\\nThe [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) compatible [KZG interface](https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#How-%E2%80%9Ccomplicated%E2%80%9D-and-%E2%80%9Cnew%E2%80%9D-is-KZG).\\n\\n```ts twoslash\\n// @noErrors\\nimport * as cKzg from 'c-kzg' // [!code focus]\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(\\n  cKzg, // [!code focus]\\n  mainnetTrustedSetupPath\\n)\\n```\\n\\n### path\\n\\n- **Type:** `string`\\n\\nThe path to the trusted setup file. \\n\\n```ts twoslash\\n// @noErrors\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node' // [!code focus]\\n\\nconst kzg = setupKzg(\\n  cKzg, \\n  mainnetTrustedSetupPath // [!code focus]\\n)\\n```\\n\\n\",\"document\":[{\"href\":\"/docs/utilities/setupKzg#setupkzg\",\"html\":\"</header>\\n<p>Sets up and defines a <a href=\\\"https://eips.ethereum.org/EIPS/eip-4844\\\">EIP-4844</a> compatible <a href=\\\"https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#How-%E2%80%9Ccomplicated%E2%80%9D-and-%E2%80%9Cnew%E2%80%9D-is-KZG\\\">KZG interface</a>. The KZG interface is used in the blob transaction signing process to generate KZG commitments &amp; proofs.</p>\\n<p><code>setupKzg</code> accepts a KZG interface that implements three functions:</p>\\n<ul>\\n<li><code>loadTrustedSetup</code>: A function to initialize the KZG trusted setup.</li>\\n<li><code>blobToKzgCommitment</code>: A function that takes a blob and returns it&#x27;s KZG commitment.</li>\\n<li><code>computeBlobKzgProof</code>: A function that takes a blob and it&#x27;s commitment, and returns the KZG proof.</li>\\n</ul>\\n<p>A couple of KZG implementations we recommend are:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/ethereum/c-kzg-4844\\\">c-kzg</a>: Node.js bindings to c-kzg.</li>\\n<li><a href=\\\"https://github.com/ethereumjs/kzg-wasm\\\">kzg-wasm</a>: WebAssembly bindings to c-kzg.</li>\\n</ul>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#setupkzg\",\"isPage\":true,\"text\":\"\\nSets up and defines a EIP-4844 compatible KZG interface. The KZG interface is used in the blob transaction signing process to generate KZG commitments &amp; proofs.\\nsetupKzg accepts a KZG interface that implements three functions:\\n\\nloadTrustedSetup: A function to initialize the KZG trusted setup.\\nblobToKzgCommitment: A function that takes a blob and returns it&#x27;s KZG commitment.\\ncomputeBlobKzgProof: A function that takes a blob and it&#x27;s commitment, and returns the KZG proof.\\n\\nA couple of KZG implementations we recommend are:\\n\\nc-kzg: Node.js bindings to c-kzg.\\nkzg-wasm: WebAssembly bindings to c-kzg.\\n\\n\",\"title\":\"setupKzg\",\"titles\":[]},{\"href\":\"/docs/utilities/setupKzg#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#import\",\"isPage\":false,\"text\":\"\\nimport { setupKzg } from &#x27;viem&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"setupKzg\"]},{\"href\":\"/docs/utilities/setupKzg#usage\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(cKzg, mainnetTrustedSetupPath)</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#usage\",\"isPage\":false,\"text\":\"\\n// @noErrors\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { setupKzg } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n\",\"title\":\"Usage\",\"titles\":[\"setupKzg\"]},{\"href\":\"/docs/utilities/setupKzg#trusted-setups\",\"html\":\"\\n<p>As seen above, when you set up your KZG interface, you will need to provide a trusted setup file. You can either import a trusted setup via the <a href=\\\"#viemnode-entrypoint\\\"><code>viem/node</code> entrypoint</a> (if you&#x27;re using an engine that supports Node.js&#x27; <code>node:fs</code> module), or you can directly import the trusted setup <code>.json</code> via the <a href=\\\"#viemtrusted-setups-entrypoint\\\"><code>viem/trusted-setups</code> entrypoint</a>.</p>\\n<p>Viem exports the following trusted setups:</p>\\n<ul>\\n<li><code>mainnet.json</code>: For Ethereum Mainnet &amp; it&#x27;s Testnets (Sepolia, Goerli, etc).</li>\\n<li><code>minimal.json</code>: For low-resource local dev testnets, and spec-testing.</li>\\n</ul>\\n<p>The trusted setup files are retrieved from the Ethereum <a href=\\\"https://github.com/ethereum/consensus-specs/tree/dev/presets\\\">consensus-specs repository</a>.</p>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#trusted-setups\",\"isPage\":false,\"text\":\"\\nAs seen above, when you set up your KZG interface, you will need to provide a trusted setup file. You can either import a trusted setup via the viem/node entrypoint (if you&#x27;re using an engine that supports Node.js&#x27; node:fs module), or you can directly import the trusted setup .json via the viem/trusted-setups entrypoint.\\nViem exports the following trusted setups:\\n\\nmainnet.json: For Ethereum Mainnet &amp; it&#x27;s Testnets (Sepolia, Goerli, etc).\\nminimal.json: For low-resource local dev testnets, and spec-testing.\\n\\nThe trusted setup files are retrieved from the Ethereum consensus-specs repository.\\n\",\"title\":\"Trusted Setups\",\"titles\":[\"setupKzg\",\"Usage\"]},{\"href\":\"/docs/utilities/setupKzg#viemnode-entrypoint\",\"html\":\"\\n<p>Viem exports <strong>paths to the trusted setup</strong> via the <code>viem/node</code> entrypoint, designed to be used with <code>setupKzg</code>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mainnetTrustedSetupPath,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  minimalTrustedSetupPath,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#viemnode-entrypoint\",\"isPage\":false,\"text\":\"\\nViem exports paths to the trusted setup via the viem/node entrypoint, designed to be used with setupKzg.\\nimport {\\n  mainnetTrustedSetupPath,\\n  minimalTrustedSetupPath,\\n} from &#x27;viem/node&#x27;\\n\",\"title\":\"viem/node Entrypoint\",\"titles\":[\"setupKzg\",\"Usage\",\"Trusted Setups\"]},{\"href\":\"/docs/utilities/setupKzg#viemtrusted-setups-entrypoint\",\"html\":\"\\n<p>Alternatively, you can directly import the <strong>contents of the trusted setup</strong> file from the <code>viem/trusted-setups</code> entrypoint.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> mainnetTrustedSetup </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/trusted-setups/mainnet.json&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> minimalTrustedSetup </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/trusted-setups/minimal.json&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#viemtrusted-setups-entrypoint\",\"isPage\":false,\"text\":\"\\nAlternatively, you can directly import the contents of the trusted setup file from the viem/trusted-setups entrypoint.\\nimport mainnetTrustedSetup from &#x27;viem/trusted-setups/mainnet.json&#x27;\\nimport minimalTrustedSetup from &#x27;viem/trusted-setups/minimal.json&#x27;\\n\",\"title\":\"viem/trusted-setups Entrypoint\",\"titles\":[\"setupKzg\",\"Usage\",\"Trusted Setups\"]},{\"href\":\"/docs/utilities/setupKzg#returns\",\"html\":\"\\n<p><code>Kzg</code></p>\\n<p>The KZG interface.</p>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#returns\",\"isPage\":false,\"text\":\"\\nKzg\\nThe KZG interface.\\n\",\"title\":\"Returns\",\"titles\":[\"setupKzg\"]},{\"href\":\"/docs/utilities/setupKzg#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"setupKzg\"]},{\"href\":\"/docs/utilities/setupKzg#kzg\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Kzg &amp; { loadTrustedSetup(path: string): void }</code></li>\\n</ul>\\n<p>The <a href=\\\"https://eips.ethereum.org/EIPS/eip-4844\\\">EIP-4844</a> compatible <a href=\\\"https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#How-%E2%80%9Ccomplicated%E2%80%9D-and-%E2%80%9Cnew%E2%80%9D-is-KZG\\\">KZG interface</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  cKzg, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mainnetTrustedSetupPath</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/setupKzg.md#kzg\",\"isPage\":false,\"text\":\"\\n\\nType: Kzg &amp; { loadTrustedSetup(path: string): void }\\n\\nThe EIP-4844 compatible KZG interface.\\n// @noErrors\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { setupKzg } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nconst kzg = setupKzg(\\n  cKzg, \\n  mainnetTrustedSetupPath\\n)\\n\",\"title\":\"kzg\",\"titles\":[\"setupKzg\",\"Parameters\"]},{\"href\":\"/docs/utilities/setupKzg#path\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n</ul>\\n<p>The path to the trusted setup file.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { setupKzg } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  cKzg, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mainnetTrustedSetupPath </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\",\"id\":\"pages/docs/utilities/setupKzg.md#path\",\"isPage\":false,\"text\":\"\\n\\nType: string\\n\\nThe path to the trusted setup file.\\n// @noErrors\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { setupKzg } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nconst kzg = setupKzg(\\n  cKzg, \\n  mainnetTrustedSetupPath \\n)\",\"title\":\"path\",\"titles\":[\"setupKzg\",\"Parameters\"]}]}}"
