"{\"value\":{\"mdx\":\"---\\ndescription: Retrieves a Transaction Receipt for a given Transaction hash.\\n---\\n\\n# waitForTransactionReceipt\\n\\nWaits for the [Transaction](/docs/glossary/terms#transaction) to be included on a [Block](/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](/docs/glossary/terms#transaction-receipt).\\n\\nThe `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { publicClient } from './client'\\n\\nconst transaction = await publicClient.waitForTransactionReceipt( // [!code focus:99]\\n  { hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d' }\\n)\\n// @log: {\\n// @log:  blockHash: '0xaf1dadb8a98f1282e8f7b42cc3da8847bfa2cf4e227b8220403ae642e1173088',\\n// @log:  blockNumber: 15132008n,\\n// @log:  from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n// @log:  ...\\n// @log:  status: 'success',\\n// @log: }\\n```\\n\\n```ts twoslash [client.ts] filename=\\\"client.ts\\\"\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n## Returns\\n\\n[`TransactionReceipt`](/docs/glossary/types#transactionreceipt)\\n\\nThe transaction receipt.\\n\\n## Parameters\\n\\n### confirmations (optional)\\n\\n- **Type:** `number`\\n- **Default:** `1`\\n\\nThe number of confirmations (blocks that have passed) to wait before resolving.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    confirmations: 5, // [!code focus:1]\\n    hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d' \\n  }\\n)\\n```\\n\\n### onReplaced (optional)\\n\\n- **Type:** `({ reason: 'replaced' | 'repriced' | 'cancelled', replacedTransaction: Transaction, transaction: Transaction, transactionReceipt: TransactionReceipt }) => void`\\n\\nOptional callback to emit if the transaction has been replaced.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\\n    onReplaced: replacement => console.log(replacement) // [!code focus:1]\\n  }\\n)\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n\\nPolling frequency (in ms). Defaults to the Client's `pollingInterval` config.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\\n    pollingInterval: 12_000, // [!code focus:1]\\n  }\\n)\\n```\\n\\n### retryCount (optional)\\n\\n- **Type:** `number`\\n- **Default:** `6`\\n\\nNumber of times to retry if the transaction or block is not found.\\n\\n```ts\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\\n    retryCount: 3, // [!code focus:1]\\n  }\\n)\\n```\\n\\n### retryDelay (optional)\\n\\n- **Type:** `number | (({ count: number; error: Error }) => number)`\\n- **Default:** `({ count }) => ~~(1 << count) * 200` (exponential backoff)\\n\\nTime to wait (in ms) between retries.\\n\\n```ts\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\\n    retryDelay: 10_000, // [!code focus:1]\\n  }\\n)\\n```\\n\\n### timeout (optional)\\n\\n- **Type:** `number`\\n- **Default:** `180_000`\\n\\nOptional timeout (in milliseconds) to wait before stopping polling.\\n\\n```ts twoslash\\n// [!include ~/snippets/publicClient.ts]\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\\n    timeout: 60_000, // [!code focus:1]\\n  }\\n)\\n```\\n\\n### Notes\\n\\n- Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\\n- There are 3 types of Transaction Replacement reasons:\\n  - `repriced`: The gas price has been modified (ie. different `maxFeePerGas`)\\n  - `cancelled`: The Transaction has been cancelled (ie. `value === 0n`)\\n  - `replaced`: The Transaction has been replaced (ie. different `value` or `data`)\\n\\n## Live Example\\n\\nCheck out the usage of `waitForTransactionReceipt` in the live [Sending Transactions Example](https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions) below.\\n\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=0&ctl=1\\\"></iframe>\\n\\n\\n## JSON-RPC Methods\\n\\n- Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\\n- If a Transaction has been replaced:\\n  - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\\n  - Checks if one of the Transactions is a replacement\\n  - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\",\"document\":[{\"href\":\"/docs/actions/public/waitForTransactionReceipt#waitfortransactionreceipt\",\"html\":\"</header>\\n<p>Waits for the <a href=\\\"/docs/glossary/terms#transaction\\\">Transaction</a> to be included on a <a href=\\\"/docs/glossary/terms#block\\\">Block</a> (one confirmation), and then returns the <a href=\\\"/docs/glossary/terms#transaction-receipt\\\">Transaction Receipt</a>.</p>\\n<p>The <code>waitForTransactionReceipt</code> action additionally supports Replacement detection (e.g. sped up Transactions).</p>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#waitfortransactionreceipt\",\"isPage\":true,\"text\":\"\\nWaits for the Transaction to be included on a Block (one confirmation), and then returns the Transaction Receipt.\\nThe waitForTransactionReceipt action additionally supports Replacement detection (e.g. sped up Transactions).\\n\",\"title\":\"waitForTransactionReceipt\",\"titles\":[]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: client.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">( </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: {</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:  blockHash: &#x27;0xaf1dadb8a98f1282e8f7b42cc3da8847bfa2cf4e227b8220403ae642e1173088&#x27;,</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:  blockNumber: 15132008n,</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:  from: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:  ...</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:  status: &#x27;success&#x27;,</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: }</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#usage\",\"isPage\":false,\"text\":\"\\n// @filename: client.ts\\nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// @filename: example.js\\n \\n// ---cut---\\nimport { publicClient } from &#x27;./client&#x27;\\n \\nconst transaction = await publicClient.waitForTransactionReceipt( \\n  { hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27; }\\n)\\n// @log: {\\n \\n// @log:  blockHash: &#x27;0xaf1dadb8a98f1282e8f7b42cc3da8847bfa2cf4e227b8220403ae642e1173088&#x27;,\\n \\n// @log:  blockNumber: 15132008n,\\n \\n// @log:  from: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n \\n// @log:  ...\\n \\n// @log:  status: &#x27;success&#x27;,\\n \\n// @log: }import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"waitForTransactionReceipt\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#transactionreceipt\\\"><code>TransactionReceipt</code></a></p>\\n<p>The transaction receipt.</p>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#returns\",\"isPage\":false,\"text\":\"\\nTransactionReceipt\\nThe transaction receipt.\\n\",\"title\":\"Returns\",\"titles\":[\"waitForTransactionReceipt\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"waitForTransactionReceipt\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#confirmations-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>1</code></li>\\n</ul>\\n<p>The number of confirmations (blocks that have passed) to wait before resolving.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    confirmations: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">5</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#confirmations-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 1\\n\\nThe number of confirmations (blocks that have passed) to wait before resolving.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    confirmations: 5, \\n    hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27; \\n  }\\n)\\n\",\"title\":\"confirmations (optional)\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#onreplaced-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>({ reason: &#x27;replaced&#x27; | &#x27;repriced&#x27; | &#x27;cancelled&#x27;, replacedTransaction: Transaction, transaction: Transaction, transactionReceipt: TransactionReceipt }) =&gt; void</code></li>\\n</ul>\\n<p>Optional callback to emit if the transaction has been replaced.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    onReplaced</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">replacement</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(replacement) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#onreplaced-optional\",\"isPage\":false,\"text\":\"\\n\\nType: ({ reason: &#x27;replaced&#x27; | &#x27;repriced&#x27; | &#x27;cancelled&#x27;, replacedTransaction: Transaction, transaction: Transaction, transactionReceipt: TransactionReceipt }) =&gt; void\\n\\nOptional callback to emit if the transaction has been replaced.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;,\\n    onReplaced: replacement =&gt; console.log(replacement) \\n  }\\n)\\n\",\"title\":\"onReplaced (optional)\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Polling frequency (in ms). Defaults to the Client&#x27;s <code>pollingInterval</code> config.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">12_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nPolling frequency (in ms). Defaults to the Client&#x27;s pollingInterval config.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;,\\n    pollingInterval: 12_000, \\n  }\\n)\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#retrycount-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>6</code></li>\\n</ul>\\n<p>Number of times to retry if the transaction or block is not found.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    retryCount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#retrycount-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 6\\n\\nNumber of times to retry if the transaction or block is not found.\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;,\\n    retryCount: 3, \\n  }\\n)\\n\",\"title\":\"retryCount (optional)\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#retrydelay-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number | (({ count: number; error: Error }) =&gt; number)</code></li>\\n<li><strong>Default:</strong> <code>({ count }) =&gt; ~~(1 &lt;&lt; count) * 200</code> (exponential backoff)</li>\\n</ul>\\n<p>Time to wait (in ms) between retries.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    retryDelay: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#retrydelay-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number | (({ count: number; error: Error }) =&gt; number)\\nDefault: ({ count }) =&gt; ~~(1 &lt;&lt; count) * 200 (exponential backoff)\\n\\nTime to wait (in ms) between retries.\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;,\\n    retryDelay: 10_000, \\n  }\\n)\\n\",\"title\":\"retryDelay (optional)\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#timeout-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>180_000</code></li>\\n</ul>\\n<p>Optional timeout (in milliseconds) to wait before stopping polling.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> transaction</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    timeout: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">60_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#timeout-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 180_000\\n\\nOptional timeout (in milliseconds) to wait before stopping polling.\\nimport { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst transaction = await publicClient.waitForTransactionReceipt(\\n  { \\n    hash: &#x27;0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d&#x27;,\\n    timeout: 60_000, \\n  }\\n)\\n\",\"title\":\"timeout (optional)\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#notes\",\"html\":\"\\n<ul>\\n<li>Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.</li>\\n<li>There are 3 types of Transaction Replacement reasons:\\n<ul>\\n<li><code>repriced</code>: The gas price has been modified (ie. different <code>maxFeePerGas</code>)</li>\\n<li><code>cancelled</code>: The Transaction has been cancelled (ie. <code>value === 0n</code>)</li>\\n<li><code>replaced</code>: The Transaction has been replaced (ie. different <code>value</code> or <code>data</code>)</li>\\n</ul>\\n</li>\\n</ul>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#notes\",\"isPage\":false,\"text\":\"\\n\\nTransactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\\nThere are 3 types of Transaction Replacement reasons:\\n\\nrepriced: The gas price has been modified (ie. different maxFeePerGas)\\ncancelled: The Transaction has been cancelled (ie. value === 0n)\\nreplaced: The Transaction has been replaced (ie. different value or data)\\n\\n\\n\\n\",\"title\":\"Notes\",\"titles\":[\"waitForTransactionReceipt\",\"Parameters\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#live-example\",\"html\":\"\\n<p>Check out the usage of <code>waitForTransactionReceipt</code> in the live <a href=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\\">Sending Transactions Example</a> below.</p>\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions?embed=1&amp;file=index.ts&amp;hideNavigation=1&amp;hideDevTools=true&amp;terminalHeight=0&amp;ctl=1\\\"></iframe>\\n\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#live-example\",\"isPage\":false,\"text\":\"\\nCheck out the usage of waitForTransactionReceipt in the live Sending Transactions Example below.\\n\\n\",\"title\":\"Live Example\",\"titles\":[\"waitForTransactionReceipt\"]},{\"href\":\"/docs/actions/public/waitForTransactionReceipt#json-rpc-methods\",\"html\":\"\\n<ul>\\n<li>Polls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt\\\"><code>eth_getTransactionReceipt</code></a> on each block until it has been processed.</li>\\n<li>If a Transaction has been replaced:\\n<ul>\\n<li>Calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber\\\"><code>eth_getBlockByNumber</code></a> and extracts the transactions</li>\\n<li>Checks if one of the Transactions is a replacement</li>\\n<li>If so, calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt\\\"><code>eth_getTransactionReceipt</code></a>.</li>\\n</ul>\\n</li>\\n</ul>\",\"id\":\"pages/docs/actions/public/waitForTransactionReceipt.md#json-rpc-methods\",\"isPage\":false,\"text\":\"\\n\\nPolls eth_getTransactionReceipt on each block until it has been processed.\\nIf a Transaction has been replaced:\\n\\nCalls eth_getBlockByNumber and extracts the transactions\\nChecks if one of the Transactions is a replacement\\nIf so, calls eth_getTransactionReceipt.\\n\\n\\n\",\"title\":\"JSON-RPC Methods\",\"titles\":[\"waitForTransactionReceipt\"]}]}}"
