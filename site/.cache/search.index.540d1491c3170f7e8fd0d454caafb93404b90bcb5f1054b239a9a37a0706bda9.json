"{\"value\":{\"mdx\":\"# Build your own Client\\n\\nYou can build your own viem Client by using the `createClient` function and optionally extending (`.extend`) it – this is how viem's internal Clients ([Public](/docs/clients/public), [Wallet](/docs/clients/wallet), and [Test](/docs/clients/test)) are built.\\n\\nBuilding your own Client is useful if you have specific requirements for how the Client should behave, and if you want to extend that Client with custom functionality (ie. create a [geth Debug](https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-debug) Client).\\n\\nThe `createClient` function sets up a base viem Client with a given [Transport](/docs/clients/intro) configured with a [Chain](/docs/chains/introduction). After that, you can extend the Client with custom properties (that could be Actions or other configuration).\\n\\n## Import\\n\\n```ts twoslash\\nimport { createClient } from 'viem'\\n```\\n\\n## Usage\\n\\nInitialize a Client with your desired [Chain](/docs/chains/introduction) (e.g. `mainnet`) and [Transport](/docs/clients/intro) (e.g. `http`).\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createClient({ \\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\nNext, you can either [extend your Client with Actions or configuration](#extending-with-actions-or-configuration), or you can use it as-is for the purpose of [maximizing tree-shaking in your app](#tree-shaking).\\n\\n### Extending with Actions or configuration\\n\\nYou can extend your Client with custom Actions or configuration by using the `.extend` function.\\n\\nBelow is a naive implementation of implementing a [geth Debug](https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-debug) Client with a `traceCall` Action that uses the `debug_traceCall` RPC method.\\n\\n```ts twoslash {12-21,23-29}\\n// @noErrors\\nimport { \\n  createClient, \\n  http,\\n  formatTransactionRequest,\\n  type CallParameters\\n} from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst debugClient = createClient({ \\n  chain: mainnet,\\n  transport: http(),\\n}).extend(client => ({\\n  // ...\\n  async traceCall(args: CallParameters) {\\n    return client.request({\\n      method: 'debug_traceCall',\\n      params: [formatTransactionRequest(args), 'latest', {}]\\n    })\\n  },\\n  // ...\\n}))\\n\\nconst response = await debugClient.traceCall({\\n  account: '0xdeadbeef29292929192939494959594933929292',\\n  to: '0xde929f939d939d393f939393f93939f393929023',\\n  gas: 69420n,\\n  data: '0xf00d4b5d00000000000000000000000001291230982139282304923482304912923823920000000000000000000000001293123098123928310239129839291010293810'\\n})\\n// { failed: false, gas: 69420, returnValue: '...', structLogs: [] }\\n```\\n\\nFor a more succinct implementation of using `.extend`, check out viem's [Public Client implementation](https://github.com/wagmi-dev/viem/blob/29c053f5069a5b44e3791972c221368a2c71a254/src/clients/createPublicClient.ts#L48-L68) extended with [Public Actions](https://github.com/wagmi-dev/viem/blob/29c053f5069a5b44e3791972c221368a2c71a254/src/clients/decorators/public.ts#L1377-L1425).\\n\\n### Tree-shaking\\n\\nYou can use the Client as-is, with no decorated Actions, to maximize tree-shaking in your app. This is useful if you are pedantic about bundle size and want to only include the Actions you use.\\n\\nIn the example below, instead of calling `getBlock` from the Public Client, we are importing the Action directly from `viem` and then injecting our Client as the first parameter to the Action.\\n\\n```ts twoslash {3,10-11}\\n// @noErrors\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { getBlock, sendTransaction } from 'viem/actions'\\n\\nconst client = createClient({ \\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nconst blockNumber = await getBlock(client, { blockTag: 'latest' })\\nconst hash = await sendTransaction(client, { ... })\\n```\\n\\n## Parameters\\n\\n### transport\\n\\n- **Type:** [Transport](/docs/glossary/types#transport)\\n\\nThe [Transport](/docs/clients/intro) of the Public Client.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(), // [!code focus]\\n})\\n```\\n\\n### account (optional)\\n\\n- **Type:** `Account | Address`\\n\\nThe Account to use for the Client. This will be used for Actions that require an `account` as an argument.\\n\\nAccepts a [JSON-RPC Account](/docs/accounts/jsonRpc) or [Local Account (Private Key, etc)](/docs/accounts/local/privateKeyToAccount).\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x...'), // [!code focus]\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n### chain (optional)\\n\\n- **Type:** [Chain](/docs/glossary/types#chain)\\n\\nThe [Chain](/docs/chains/introduction) of the Public Client.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet, // [!code focus]\\n  transport: http(),\\n})\\n```\\n\\n### batch (optional)\\n\\nFlags for batch settings.\\n\\n### batch.multicall (optional)\\n\\n- **Type:** `boolean | MulticallBatchOptions`\\n- **Default:** `false`\\n\\nToggle to enable `eth_call` multicall aggregation.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  batch: {\\n    multicall: true, // [!code focus]\\n  },\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n### batch.multicall.batchSize (optional)\\n\\n- **Type:** `number`\\n- **Default:** `1_024`\\n\\nThe maximum size (in bytes) for each multicall (`aggregate3`) calldata chunk.\\n\\n> Note: Some RPC Providers limit the amount of calldata that can be sent in a single request. It is best to check with your RPC Provider to see if there are any calldata size limits to `eth_call` requests.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  batch: {\\n    multicall: {\\n      batchSize: 512, // [!code focus]\\n    },\\n  },\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n### batch.multicall.wait (optional)\\n\\n- **Type:** `number`\\n- **Default:** `0` ([zero delay](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop#zero_delays))\\n\\nThe maximum number of milliseconds to wait before sending a batch.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  batch: {\\n    multicall: {\\n      wait: 16, // [!code focus]\\n    },\\n  },\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n### key (optional)\\n\\n- **Type:** `string`\\n- **Default:** `\\\"public\\\"`\\n\\nA key for the Client.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  key: 'public', // [!code focus]\\n  transport: http(),\\n})\\n```\\n\\n### name (optional)\\n\\n- **Type:** `string`\\n- **Default:** `\\\"Public Client\\\"`\\n\\nA name for the Client.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  name: 'Public Client', // [!code focus]\\n  transport: http(),\\n})\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n- **Default:** `4_000`\\n\\nFrequency (in ms) for polling enabled Actions.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  pollingInterval: 10_000, // [!code focus]\\n  transport: http(),\\n})\\n```\\n\\n### rpcSchema (optional)\\n\\n- **Type:** `RpcSchema`\\n- **Default:** `WalletRpcSchema`\\n\\nTyped JSON-RPC schema for the client.\\n\\n```ts twoslash\\nimport { createClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: http()\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n//               ^|\\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\\n```\",\"document\":[{\"href\":\"/docs/clients/custom#build-your-own-client\",\"html\":\"</header>\\n<p>You can build your own viem Client by using the <code>createClient</code> function and optionally extending (<code>.extend</code>) it – this is how viem&#x27;s internal Clients (<a href=\\\"/docs/clients/public\\\">Public</a>, <a href=\\\"/docs/clients/wallet\\\">Wallet</a>, and <a href=\\\"/docs/clients/test\\\">Test</a>) are built.</p>\\n<p>Building your own Client is useful if you have specific requirements for how the Client should behave, and if you want to extend that Client with custom functionality (ie. create a <a href=\\\"https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-debug\\\">geth Debug</a> Client).</p>\\n<p>The <code>createClient</code> function sets up a base viem Client with a given <a href=\\\"/docs/clients/intro\\\">Transport</a> configured with a <a href=\\\"/docs/chains/introduction\\\">Chain</a>. After that, you can extend the Client with custom properties (that could be Actions or other configuration).</p>\\n\",\"id\":\"pages/docs/clients/custom.md#build-your-own-client\",\"isPage\":true,\"text\":\"\\nYou can build your own viem Client by using the createClient function and optionally extending (.extend) it – this is how viem&#x27;s internal Clients (Public, Wallet, and Test) are built.\\nBuilding your own Client is useful if you have specific requirements for how the Client should behave, and if you want to extend that Client with custom functionality (ie. create a geth Debug Client).\\nThe createClient function sets up a base viem Client with a given Transport configured with a Chain. After that, you can extend the Client with custom properties (that could be Actions or other configuration).\\n\",\"title\":\"Build your own Client\",\"titles\":[]},{\"href\":\"/docs/clients/custom#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#import\",\"isPage\":false,\"text\":\"\\nimport { createClient } from &#x27;viem&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"Build your own Client\"]},{\"href\":\"/docs/clients/custom#usage\",\"html\":\"\\n<p>Initialize a Client with your desired <a href=\\\"/docs/chains/introduction\\\">Chain</a> (e.g. <code>mainnet</code>) and <a href=\\\"/docs/clients/intro\\\">Transport</a> (e.g. <code>http</code>).</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p>Next, you can either <a href=\\\"#extending-with-actions-or-configuration\\\">extend your Client with Actions or configuration</a>, or you can use it as-is for the purpose of <a href=\\\"#tree-shaking\\\">maximizing tree-shaking in your app</a>.</p>\\n\",\"id\":\"pages/docs/clients/custom.md#usage\",\"isPage\":false,\"text\":\"\\nInitialize a Client with your desired Chain (e.g. mainnet) and Transport (e.g. http).\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst client = createClient({ \\n  chain: mainnet,\\n  transport: http()\\n})\\nNext, you can either extend your Client with Actions or configuration, or you can use it as-is for the purpose of maximizing tree-shaking in your app.\\n\",\"title\":\"Usage\",\"titles\":[\"Build your own Client\"]},{\"href\":\"/docs/clients/custom#extending-with-actions-or-configuration\",\"html\":\"\\n<p>You can extend your Client with custom Actions or configuration by using the <code>.extend</code> function.</p>\\n<p>Below is a naive implementation of implementing a <a href=\\\"https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-debug\\\">geth Debug</a> Client with a <code>traceCall</code> Action that uses the <code>debug_traceCall</code> RPC method.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  createClient, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  http,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  formatTransactionRequest,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> CallParameters</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> debugClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> traceCall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">args</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> CallParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;debug_traceCall&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      params: [</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">formatTransactionRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(args), </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;latest&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {}]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}))</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> response</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> debugClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">traceCall</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xdeadbeef29292929192939494959594933929292&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xde929f939d939d393f939393f93939f393929023&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  data: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf00d4b5d00000000000000000000000001291230982139282304923482304912923823920000000000000000000000001293123098123928310239129839291010293810&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// { failed: false, gas: 69420, returnValue: &#x27;...&#x27;, structLogs: [] }</span></span></code></pre>\\n<p>For a more succinct implementation of using <code>.extend</code>, check out viem&#x27;s <a href=\\\"https://github.com/wagmi-dev/viem/blob/29c053f5069a5b44e3791972c221368a2c71a254/src/clients/createPublicClient.ts#L48-L68\\\">Public Client implementation</a> extended with <a href=\\\"https://github.com/wagmi-dev/viem/blob/29c053f5069a5b44e3791972c221368a2c71a254/src/clients/decorators/public.ts#L1377-L1425\\\">Public Actions</a>.</p>\\n\",\"id\":\"pages/docs/clients/custom.md#extending-with-actions-or-configuration\",\"isPage\":false,\"text\":\"\\nYou can extend your Client with custom Actions or configuration by using the .extend function.\\nBelow is a naive implementation of implementing a geth Debug Client with a traceCall Action that uses the debug_traceCall RPC method.\\n// @noErrors\\nimport { \\n  createClient, \\n  http,\\n  formatTransactionRequest,\\n  type CallParameters\\n} from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst debugClient = createClient({ \\n  chain: mainnet,\\n  transport: http(),\\n}).extend(client =&gt; ({\\n  // ...\\n  async traceCall(args: CallParameters) {\\n    return client.request({\\n      method: &#x27;debug_traceCall&#x27;,\\n      params: [formatTransactionRequest(args), &#x27;latest&#x27;, {}]\\n    })\\n  },\\n  // ...\\n}))\\n \\nconst response = await debugClient.traceCall({\\n  account: &#x27;0xdeadbeef29292929192939494959594933929292&#x27;,\\n  to: &#x27;0xde929f939d939d393f939393f93939f393929023&#x27;,\\n  gas: 69420n,\\n  data: &#x27;0xf00d4b5d00000000000000000000000001291230982139282304923482304912923823920000000000000000000000001293123098123928310239129839291010293810&#x27;\\n})\\n// { failed: false, gas: 69420, returnValue: &#x27;...&#x27;, structLogs: [] }\\nFor a more succinct implementation of using .extend, check out viem&#x27;s Public Client implementation extended with Public Actions.\\n\",\"title\":\"Extending with Actions or configuration\",\"titles\":[\"Build your own Client\",\"Usage\"]},{\"href\":\"/docs/clients/custom#tree-shaking\",\"html\":\"\\n<p>You can use the Client as-is, with no decorated Actions, to maximize tree-shaking in your app. This is useful if you are pedantic about bundle size and want to only include the Actions you use.</p>\\n<p>In the example below, instead of calling <code>getBlock</code> from the Public Client, we are importing the Action directly from <code>viem</code> and then injecting our Client as the first parameter to the Action.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { getBlock, sendTransaction } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/actions&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getBlock</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(client, { blockTag: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;latest&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(client, { </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> })</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#tree-shaking\",\"isPage\":false,\"text\":\"\\nYou can use the Client as-is, with no decorated Actions, to maximize tree-shaking in your app. This is useful if you are pedantic about bundle size and want to only include the Actions you use.\\nIn the example below, instead of calling getBlock from the Public Client, we are importing the Action directly from viem and then injecting our Client as the first parameter to the Action.\\n// @noErrors\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\nimport { getBlock, sendTransaction } from &#x27;viem/actions&#x27;\\n \\nconst client = createClient({ \\n  chain: mainnet,\\n  transport: http()\\n})\\n \\nconst blockNumber = await getBlock(client, { blockTag: &#x27;latest&#x27; })\\nconst hash = await sendTransaction(client, { ... })\\n\",\"title\":\"Tree-shaking\",\"titles\":[\"Build your own Client\",\"Usage\"]},{\"href\":\"/docs/clients/custom#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/clients/custom.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"Build your own Client\"]},{\"href\":\"/docs/clients/custom#transport\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#transport\\\">Transport</a></li>\\n</ul>\\n<p>The <a href=\\\"/docs/clients/intro\\\">Transport</a> of the Public Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#transport\",\"isPage\":false,\"text\":\"\\n\\nType: Transport\\n\\nThe Transport of the Public Client.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(), \\n})\\n\",\"title\":\"transport\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#account-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address</code></li>\\n</ul>\\n<p>The Account to use for the Client. This will be used for Actions that require an <code>account</code> as an argument.</p>\\n<p>Accepts a <a href=\\\"/docs/accounts/jsonRpc\\\">JSON-RPC Account</a> or <a href=\\\"/docs/accounts/local/privateKeyToAccount\\\">Local Account (Private Key, etc)</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#account-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address\\n\\nThe Account to use for the Client. This will be used for Actions that require an account as an argument.\\nAccepts a JSON-RPC Account or Local Account (Private Key, etc).\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nconst client = createClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;), \\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"title\":\"account (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\">Chain</a></li>\\n</ul>\\n<p>The <a href=\\\"/docs/chains/introduction\\\">Chain</a> of the Public Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\n\\nThe Chain of the Public Client.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet, \\n  transport: http(),\\n})\\n\",\"title\":\"chain (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#batch-optional\",\"html\":\"\\n<p>Flags for batch settings.</p>\\n\",\"id\":\"pages/docs/clients/custom.md#batch-optional\",\"isPage\":false,\"text\":\"\\nFlags for batch settings.\\n\",\"title\":\"batch (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#batchmulticall-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean | MulticallBatchOptions</code></li>\\n<li><strong>Default:</strong> <code>false</code></li>\\n</ul>\\n<p>Toggle to enable <code>eth_call</code> multicall aggregation.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  batch: {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    multicall: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#batchmulticall-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean | MulticallBatchOptions\\nDefault: false\\n\\nToggle to enable eth_call multicall aggregation.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  batch: {\\n    multicall: true, \\n  },\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"title\":\"batch.multicall (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#batchmulticallbatchsize-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>1_024</code></li>\\n</ul>\\n<p>The maximum size (in bytes) for each multicall (<code>aggregate3</code>) calldata chunk.</p>\\n<blockquote>\\n<p>Note: Some RPC Providers limit the amount of calldata that can be sent in a single request. It is best to check with your RPC Provider to see if there are any calldata size limits to <code>eth_call</code> requests.</p>\\n</blockquote>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  batch: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    multicall: {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      batchSize: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">512</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#batchmulticallbatchsize-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 1_024\\n\\nThe maximum size (in bytes) for each multicall (aggregate3) calldata chunk.\\n\\nNote: Some RPC Providers limit the amount of calldata that can be sent in a single request. It is best to check with your RPC Provider to see if there are any calldata size limits to eth_call requests.\\n\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  batch: {\\n    multicall: {\\n      batchSize: 512, \\n    },\\n  },\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"title\":\"batch.multicall.batchSize (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#batchmulticallwait-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>0</code> (<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop#zero_delays\\\">zero delay</a>)</li>\\n</ul>\\n<p>The maximum number of milliseconds to wait before sending a batch.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  batch: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    multicall: {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      wait: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">16</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#batchmulticallwait-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 0 (zero delay)\\n\\nThe maximum number of milliseconds to wait before sending a batch.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  batch: {\\n    multicall: {\\n      wait: 16, \\n    },\\n  },\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"title\":\"batch.multicall.wait (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#key-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n<li><strong>Default:</strong> <code>&quot;public&quot;</code></li>\\n</ul>\\n<p>A key for the Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  key: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;public&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#key-optional\",\"isPage\":false,\"text\":\"\\n\\nType: string\\nDefault: &quot;public&quot;\\n\\nA key for the Client.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  key: &#x27;public&#x27;, \\n  transport: http(),\\n})\\n\",\"title\":\"key (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#name-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n<li><strong>Default:</strong> <code>&quot;Public Client&quot;</code></li>\\n</ul>\\n<p>A name for the Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Public Client&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#name-optional\",\"isPage\":false,\"text\":\"\\n\\nType: string\\nDefault: &quot;Public Client&quot;\\n\\nA name for the Client.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  name: &#x27;Public Client&#x27;, \\n  transport: http(),\\n})\\n\",\"title\":\"name (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>4_000</code></li>\\n</ul>\\n<p>Frequency (in ms) for polling enabled Actions.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/custom.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 4_000\\n\\nFrequency (in ms) for polling enabled Actions.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createClient({\\n  chain: mainnet,\\n  pollingInterval: 10_000, \\n  transport: http(),\\n})\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]},{\"href\":\"/docs/clients/custom#rpcschema-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>RpcSchema</code></li>\\n<li><strong>Default:</strong> <code>WalletRpcSchema</code></li>\\n</ul>\\n<p>Typed JSON-RPC schema for the client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { rpcSchema } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">type</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> CustomRpcSchema</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [{ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  Method</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  Parameters</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">string</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  ReturnType</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> string</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}] </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  rpcSchema: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">rpcSchema</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&lt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">CustomRpcSchema</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> result</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_wa // [!code focus]</span><span style=\\\"color:#B31D28;font-style:italic;--shiki-dark:#FF938A;--shiki-dark-font-style:italic\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">//               ^|</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  params: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\",\"id\":\"pages/docs/clients/custom.md#rpcschema-optional\",\"isPage\":false,\"text\":\"\\n\\nType: RpcSchema\\nDefault: WalletRpcSchema\\n\\nTyped JSON-RPC schema for the client.\\nimport { createClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from &#x27;viem&#x27;\\n \\ntype CustomRpcSchema = [{ \\n  Method: &#x27;eth_wagmi&#x27;, \\n  Parameters: [string] \\n  ReturnType: string\\n}] \\n \\nconst client = createClient({\\n  chain: mainnet,\\n  rpcSchema: rpcSchema&lt;CustomRpcSchema&gt;(), \\n  transport: http()\\n})\\n \\nconst result = await client.request({ \\n  method: &#x27;eth_wa // [!code focus] \\n//               ^|\\n  params: [&#x27;hello&#x27;], \\n}) \",\"title\":\"rpcSchema (optional)\",\"titles\":[\"Build your own Client\",\"Parameters\"]}]}}"
