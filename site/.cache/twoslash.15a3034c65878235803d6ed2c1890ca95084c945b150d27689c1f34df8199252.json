"{\"value\":{\"code\":\"import { \\n  createWebAuthnCredential, \\n  toWebAuthnAccount,\\n  toCoinbaseSmartAccount \\n} from 'viem/account-abstraction'\\nimport { client } from './client'\\n\\n// 1. Register a credential (ie. passkey).\\nconst credential = await createWebAuthnCredential({\\n  name: 'Example',\\n})\\n\\n// 2. Create a WebAuthn owner account from the credential.\\nconst owner = toWebAuthnAccount({\\n  credential,\\n})\\n\\n// 3. Hook up the owner to a WebAuthn-compatible Smart Account.\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [owner],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createWebAuthnCredential(parameters: CreateWebAuthnCredentialParameters): Promise<CreateWebAuthnCredentialReturnType>\\nimport createWebAuthnCredential\",\"start\":12,\"length\":24,\"target\":\"createWebAuthnCredential\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) function toWebAuthnAccount(parameters: ToWebAuthnAccountParameters): WebAuthnAccount\\nimport toWebAuthnAccount\",\"tags\":[[\"description\",\"Creates an Account from a WebAuthn Credential.\"],[\"returns\",\"A WebAuthn Account.\"]],\"start\":41,\"length\":17,\"target\":\"toWebAuthnAccount\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":62,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":129,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":9},{\"type\":\"hover\",\"text\":\"const credential: P256Credential\",\"start\":204,\"length\":10,\"target\":\"credential\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWebAuthnCredential(parameters: CreateWebAuthnCredentialParameters): Promise<CreateWebAuthnCredentialReturnType>\\nimport createWebAuthnCredential\",\"start\":223,\"length\":24,\"target\":\"createWebAuthnCredential\",\"line\":8,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"docs\":\"Name for the credential (user.name).\",\"start\":252,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: WebAuthnAccount\",\"start\":338,\"length\":5,\"target\":\"owner\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toWebAuthnAccount(parameters: ToWebAuthnAccountParameters): WebAuthnAccount\\nimport toWebAuthnAccount\",\"tags\":[[\"description\",\"Creates an Account from a WebAuthn Credential.\"],[\"returns\",\"A WebAuthn Account.\"]],\"start\":346,\"length\":17,\"target\":\"toWebAuthnAccount\",\"line\":13,\"character\":14},{\"type\":\"hover\",\"text\":\"(property) credential: {\\n    id: P256Credential[\\\"id\\\"];\\n    publicKey: P256Credential[\\\"publicKey\\\"];\\n}\",\"docs\":\"The WebAuthn P256 credential to use.\",\"start\":368,\"length\":10,\"target\":\"credential\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"const account: Promise<{\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}>\",\"start\":454,\"length\":7,\"target\":\"account\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":464,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":18,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) client: Client\",\"start\":491,\"length\":6,\"target\":\"client\",\"line\":19,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: readonly (`0x${string}` | OneOf<WebAuthnAccount | {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>)[]\",\"start\":501,\"length\":6,\"target\":\"owners\",\"line\":20,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: WebAuthnAccount\",\"start\":510,\"length\":5,\"target\":\"owner\",\"line\":20,\"character\":11}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,235]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":196,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { \\n  createWebAuthnCredential, \\n  toWebAuthnAccount,\\n  toCoinbaseSmartAccount \\n} from 'viem/account-abstraction'\\nimport { client } from './client'\\n\\n// 1. Register a credential (ie. passkey).\\nconst credential = await createWebAuthnCredential({\\n  name: 'Example',\\n})\\n\\n// 2. Create a WebAuthn owner account from the credential.\\nconst owner = toWebAuthnAccount({\\n  credential,\\n})\\n\\n// 3. Hook up the owner to a WebAuthn-compatible Smart Account.\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [owner],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createWebAuthnCredential(parameters: CreateWebAuthnCredentialParameters): Promise<CreateWebAuthnCredentialReturnType>\\nimport createWebAuthnCredential\",\"start\":12,\"length\":24,\"target\":\"createWebAuthnCredential\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) function toWebAuthnAccount(parameters: ToWebAuthnAccountParameters): WebAuthnAccount\\nimport toWebAuthnAccount\",\"tags\":[[\"description\",\"Creates an Account from a WebAuthn Credential.\"],[\"returns\",\"A WebAuthn Account.\"]],\"start\":41,\"length\":17,\"target\":\"toWebAuthnAccount\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":62,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":129,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":9},{\"type\":\"hover\",\"text\":\"const credential: P256Credential\",\"start\":204,\"length\":10,\"target\":\"credential\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWebAuthnCredential(parameters: CreateWebAuthnCredentialParameters): Promise<CreateWebAuthnCredentialReturnType>\\nimport createWebAuthnCredential\",\"start\":223,\"length\":24,\"target\":\"createWebAuthnCredential\",\"line\":8,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"docs\":\"Name for the credential (user.name).\",\"start\":252,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: WebAuthnAccount\",\"start\":338,\"length\":5,\"target\":\"owner\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toWebAuthnAccount(parameters: ToWebAuthnAccountParameters): WebAuthnAccount\\nimport toWebAuthnAccount\",\"tags\":[[\"description\",\"Creates an Account from a WebAuthn Credential.\"],[\"returns\",\"A WebAuthn Account.\"]],\"start\":346,\"length\":17,\"target\":\"toWebAuthnAccount\",\"line\":13,\"character\":14},{\"type\":\"hover\",\"text\":\"(property) credential: {\\n    id: P256Credential[\\\"id\\\"];\\n    publicKey: P256Credential[\\\"publicKey\\\"];\\n}\",\"docs\":\"The WebAuthn P256 credential to use.\",\"start\":368,\"length\":10,\"target\":\"credential\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"const account: Promise<{\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}>\",\"start\":454,\"length\":7,\"target\":\"account\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":464,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":18,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) client: Client\",\"start\":491,\"length\":6,\"target\":\"client\",\"line\":19,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: readonly (`0x${string}` | OneOf<WebAuthnAccount | {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>)[]\",\"start\":501,\"length\":6,\"target\":\"owners\",\"line\":20,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: WebAuthnAccount\",\"start\":510,\"length\":5,\"target\":\"owner\",\"line\":20,\"character\":11}],\"tags\":[]}}"
