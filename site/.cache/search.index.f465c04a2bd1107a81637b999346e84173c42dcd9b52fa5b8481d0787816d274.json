"{\"value\":{\"mdx\":\"# Bundler Client [A function to create a Bundler Client.]\\n\\nA Bundler Client is an interface to interact with **ERC-4337 Bundlers** and provides the ability to send and retrieve **User Operations** through **Bundler Actions**.\\n\\n## Import\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\n```\\n\\n## Usage\\n\\n```ts twoslash\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction' // [!code focus]\\nimport { mainnet } from 'viem/chains' // [!code focus]\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nconst bundlerClient = createBundlerClient({ // [!code focus]\\n  client, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc') // [!code focus]\\n}) // [!code focus]\\n```\\n\\n:::info\\nThe Bundler URL above is a public endpoint. Please do not use it in production as you will likely be rate-limited. Consider using [Pimlico's Bundler](https://www.pimlico.io), [Biconomy's Bundler](https://www.biconomy.io), or another Bundler service.\\n:::\\n\\n## Parameters\\n\\n### account (optional)\\n\\n- **Type:** `SmartAccount`\\n\\nThe [Smart Account](/account-abstraction/accounts/smart) to use for the Bundler Client. This will be used for Actions that require an `account` as an argument.\\n\\n```ts twoslash\\nimport { createPublicClient, http } from 'viem' \\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains' \\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// ---cut---\\nimport { toCoinbaseSmartAccount } from 'viem/account-abstraction' // [!code focus]\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst owner = privateKeyToAccount('0x...')\\n\\nconst account = await toCoinbaseSmartAccount({ // [!code focus]\\n  client, // [!code focus]\\n  owners: [owner] // [!code focus]\\n}) // [!code focus]\\n\\nconst bundlerClient = createBundlerClient({\\n  account, // [!code focus]\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n```\\n\\n### chain (optional)\\n\\n- **Type:** [Chain](/docs/glossary/types#chain)\\n\\nThe [Chain](/docs/chains/introduction) of the Bundler Client.\\n\\n```ts twoslash\\nimport { createPublicClient, http } from 'viem' \\nimport { createBundlerClient } from 'viem/account-abstraction'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// ---cut---\\nimport { mainnet } from 'viem/chains' \\n\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n```\\n\\n### client (optional)\\n\\n- **Type:** `Client`\\n\\nThe [Client](/docs/clients/public) (pointing to execution RPC) of the Bundler Client.\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\n// ---cut---\\nimport { createPublicClient, http } from 'viem' \\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({ // [!code focus]\\n  chain: mainnet, // [!code focus]\\n  transport: http() // [!code focus]\\n}) // [!code focus]\\n\\nconst bundlerClient = createBundlerClient({\\n  client, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n```\\n\\n### key (optional)\\n\\n- **Type:** `string`\\n- **Default:** `\\\"bundler\\\"`\\n\\nA key for the Client.\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\n// ---cut---\\nconst client = createBundlerClient({\\n  key: 'foo', // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n```\\n\\n### name (optional)\\n\\n- **Type:** `string`\\n- **Default:** `\\\"Bundler Client\\\"`\\n\\nA name for the Client.\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\n// ---cut---\\nconst client = createBundlerClient({\\n  name: 'Foo Bundler Client', // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n```\\n\\n### paymaster (optional)\\n\\n- **Type:** `true | PaymasterClient | { getPaymasterData: typeof getPaymasterData, getPaymasterStubData: typeof getPaymasterStubData }`\\n\\nSets Paymaster configuration for the Bundler Client to be utilized on User Operations.\\n\\n- If `paymaster: PaymasterClient`, it will use the provided [Paymaster Client](/account-abstraction/clients/paymaster) for User Operation sponsorship.\\n- If `paymaster: true`, it will be assumed that the Bundler Client also supports Paymaster RPC methods (e.g. `pm_getPaymasterData`), and use them for User Operation sponsorship.\\n- If [custom functions](#paymastergetpaymasterdata-optional) are provided to `paymaster`, it will use them for User Operation sponsorship.\\n\\n#### Using a Paymaster Client\\n\\n```ts twoslash\\n// @noErrors\\nimport { createPaymasterClient, createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { client } from './config'\\n// ---cut---\\nconst paymasterClient = createPaymasterClient({ // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/11155111/rpc') // [!code focus]\\n}) // [!code focus]\\n\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: paymasterClient, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n```\\n\\n#### Using the Bundler Client as Paymaster\\n\\n```ts twoslash\\n// @noErrors\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: true, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n```\\n\\n#### Using Custom Paymaster Functions\\n\\nSee the [properties below](#paymastergetpaymasterdata-optional) for more information on how to use custom Paymaster functions.\\n\\n### paymaster.getPaymasterData (optional)\\n\\n- **Type:** `(userOperation: UserOperation) => Promise<GetPaymasterDataReturnType>`\\n\\nRetrieves paymaster-related User Operation properties to be used for sending the User Operation.\\n\\n[Read more](https://github.com/ethereum/ERCs/blob/master/ERCS/erc-7677.md#pm_getpaymasterdata)\\n\\n```ts twoslash\\n// @noErrors\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: { // [!code focus]\\n    async getPaymasterData(userOperation) { // [!code focus]\\n      // Retrieve paymaster properties for the User Operation. // [!code focus]\\n      return { // [!code focus]\\n        paymaster: '0x...', // [!code focus]\\n        paymasterData: '0x...', // [!code focus]\\n        paymasterVerificationGasLimit: 69420n, // [!code focus]\\n        paymasterPostOpGasLimit: 69420n, // [!code focus]\\n      } // [!code focus]\\n    } // [!code focus]\\n  } // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n```\\n\\n### paymaster.getPaymasterStubData (optional)\\n\\n- **Type:** `(userOperation: UserOperation) => Promise<GetPaymasterStubDataReturnType>`\\n\\nRetrieves paymaster-related User Operation properties to be used for gas estimation.\\n\\n[Read more](https://github.com/ethereum/ERCs/blob/master/ERCS/erc-7677.md#pm_getpaymasterstubdata)\\n\\n```ts twoslash\\n// @noErrors\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: { \\n    async getPaymasterStubData(userOperation) { // [!code focus]\\n      // Retrieve paymaster properties for the User Operation. // [!code focus]\\n      return { // [!code focus]\\n        paymaster: '0x...', // [!code focus]\\n        paymasterData: '0x...', // [!code focus]\\n        paymasterVerificationGasLimit: 69420n, // [!code focus]\\n        paymasterPostOpGasLimit: 69420n, // [!code focus]\\n      } // [!code focus]\\n    } // [!code focus]\\n    async getPaymasterData(userOperation) { /* ... */ }\\n  } \\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n```\\n\\n### paymasterContext (optional)\\n\\n- **Type:** `unknown`\\n\\nPaymaster specific fields.\\n\\n```ts twoslash\\n// @noErrors\\nimport { createPaymasterClient, createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { client } from './config'\\n// ---cut---\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: paymasterClient,\\n  paymasterContext: { // [!code focus]\\n    policyId: 'abc123' // [!code focus]\\n  }, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n- **Default:** `4_000`\\n\\nFrequency (in ms) for polling enabled Actions.\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\n// ---cut---\\nconst client = createBundlerClient({\\n  pollingInterval: 10_000, // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n```\\n\\n### rpcSchema (optional)\\n\\n- **Type:** `RpcSchema`\\n- **Default:** `BundlerRpcSchema`\\n\\nTyped JSON-RPC schema for the client.\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createBundlerClient({\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n//               ^|\\n\\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\\n```\\n\\n### transport\\n\\n- **Type:** `Transport`\\n\\nThe Transport of the Bundler Client.\\n\\n```ts twoslash\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'), // [!code focus]\\n})\\n```\\n\\n### userOperation (optional)\\n\\nConfiguration for User Operations.\\n\\n#### userOperation.estimateFeesPerGas\\n\\n- **Type:** `({ account: Account, bundlerClient: Client, userOperation: UserOperationRequest }) => Promise<{ maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }>`\\n\\nPrepares fee properties for the User Operation request.\\n\\n```ts twoslash\\n// @noErrors\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n  userOperation: { // [!code focus]\\n    async estimateFeesPerGas({ account, bundlerClient, userOperation }) { // [!code focus]\\n      // Estimate fees per gas for the User Operation. // [!code focus]\\n      return { // [!code focus]\\n        maxFeePerGas: /* ... */, // [!code focus]\\n        maxPriorityFeePerGas: /* ... */, // [!code focus]\\n      } // [!code focus]\\n    } // [!code focus]\\n  } // [!code focus]\\n})\\n```\\n\",\"document\":[{\"href\":\"/account-abstraction/clients/bundler#bundler-client\",\"html\":\"<div role=\\\"doc-subtitle\\\">A function to create a Bundler Client.</div></header>\\n<p>A Bundler Client is an interface to interact with <strong>ERC-4337 Bundlers</strong> and provides the ability to send and retrieve <strong>User Operations</strong> through <strong>Bundler Actions</strong>.</p>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#bundler-client\",\"isPage\":true,\"text\":\"A function to create a Bundler Client.\\nA Bundler Client is an interface to interact with ERC-4337 Bundlers and provides the ability to send and retrieve User Operations through Bundler Actions.\\n\",\"title\":\"Bundler Client\",\"titles\":[]},{\"href\":\"/account-abstraction/clients/bundler#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#import\",\"isPage\":false,\"text\":\"\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"Bundler Client\"]},{\"href\":\"/account-abstraction/clients/bundler#usage\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\\n<aside data-callout=\\\"info\\\"><p>The Bundler URL above is a public endpoint. Please do not use it in production as you will likely be rate-limited. Consider using <a href=\\\"https://www.pimlico.io\\\">Pimlico&#x27;s Bundler</a>, <a href=\\\"https://www.biconomy.io\\\">Biconomy&#x27;s Bundler</a>, or another Bundler service.</p></aside>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#usage\",\"isPage\":false,\"text\":\"\\nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n \\nconst bundlerClient = createBundlerClient({ \\n  client, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;) \\n}) \\nThe Bundler URL above is a public endpoint. Please do not use it in production as you will likely be rate-limited. Consider using Pimlico&#x27;s Bundler, Biconomy&#x27;s Bundler, or another Bundler service.\\n\",\"title\":\"Usage\",\"titles\":[\"Bundler Client\"]},{\"href\":\"/account-abstraction/clients/bundler#parameters\",\"html\":\"\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"Bundler Client\"]},{\"href\":\"/account-abstraction/clients/bundler#account-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>SmartAccount</code></li>\\n</ul>\\n<p>The <a href=\\\"/account-abstraction/accounts/smart\\\">Smart Account</a> to use for the Bundler Client. This will be used for Actions that require an <code>account</code> as an argument.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toCoinbaseSmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toCoinbaseSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owners: [owner] </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#account-optional\",\"isPage\":false,\"text\":\"\\n\\nType: SmartAccount\\n\\nThe Smart Account to use for the Bundler Client. This will be used for Actions that require an account as an argument.\\nimport { createPublicClient, http } from &#x27;viem&#x27; \\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27; \\n \\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// ---cut---\\nimport { toCoinbaseSmartAccount } from &#x27;viem/account-abstraction&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nconst owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nconst account = await toCoinbaseSmartAccount({ \\n  client, \\n  owners: [owner] \\n}) \\n \\nconst bundlerClient = createBundlerClient({\\n  account, \\n  client,\\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n})\\n\",\"title\":\"account (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\">Chain</a></li>\\n</ul>\\n<p>The <a href=\\\"/docs/chains/introduction\\\">Chain</a> of the Bundler Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\n\\nThe Chain of the Bundler Client.\\nimport { createPublicClient, http } from &#x27;viem&#x27; \\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\n \\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// ---cut---\\nimport { mainnet } from &#x27;viem/chains&#x27; \\n \\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n\",\"title\":\"chain (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#client-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Client</code></li>\\n</ul>\\n<p>The <a href=\\\"/docs/clients/public\\\">Client</a> (pointing to execution RPC) of the Bundler Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#client-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Client\\n\\nThe Client (pointing to execution RPC) of the Bundler Client.\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\n// ---cut---\\nimport { createPublicClient, http } from &#x27;viem&#x27; \\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst client = createPublicClient({ \\n  chain: mainnet, \\n  transport: http() \\n}) \\n \\nconst bundlerClient = createBundlerClient({\\n  client, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n\",\"title\":\"client (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#key-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n<li><strong>Default:</strong> <code>&quot;bundler&quot;</code></li>\\n</ul>\\n<p>A key for the Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  key: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;foo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#key-optional\",\"isPage\":false,\"text\":\"\\n\\nType: string\\nDefault: &quot;bundler&quot;\\n\\nA key for the Client.\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\n// ---cut---\\nconst client = createBundlerClient({\\n  key: &#x27;foo&#x27;, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n\",\"title\":\"key (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#name-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n<li><strong>Default:</strong> <code>&quot;Bundler Client&quot;</code></li>\\n</ul>\\n<p>A name for the Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Foo Bundler Client&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#name-optional\",\"isPage\":false,\"text\":\"\\n\\nType: string\\nDefault: &quot;Bundler Client&quot;\\n\\nA name for the Client.\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\n// ---cut---\\nconst client = createBundlerClient({\\n  name: &#x27;Foo Bundler Client&#x27;, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n\",\"title\":\"name (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#paymaster-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>true | PaymasterClient | { getPaymasterData: typeof getPaymasterData, getPaymasterStubData: typeof getPaymasterStubData }</code></li>\\n</ul>\\n<p>Sets Paymaster configuration for the Bundler Client to be utilized on User Operations.</p>\\n<ul>\\n<li>If <code>paymaster: PaymasterClient</code>, it will use the provided <a href=\\\"/account-abstraction/clients/paymaster\\\">Paymaster Client</a> for User Operation sponsorship.</li>\\n<li>If <code>paymaster: true</code>, it will be assumed that the Bundler Client also supports Paymaster RPC methods (e.g. <code>pm_getPaymasterData</code>), and use them for User Operation sponsorship.</li>\\n<li>If <a href=\\\"#paymastergetpaymasterdata-optional\\\">custom functions</a> are provided to <code>paymaster</code>, it will use them for User Operation sponsorship.</li>\\n</ul>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#paymaster-optional\",\"isPage\":false,\"text\":\"\\n\\nType: true | PaymasterClient | { getPaymasterData: typeof getPaymasterData, getPaymasterStubData: typeof getPaymasterStubData }\\n\\nSets Paymaster configuration for the Bundler Client to be utilized on User Operations.\\n\\nIf paymaster: PaymasterClient, it will use the provided Paymaster Client for User Operation sponsorship.\\nIf paymaster: true, it will be assumed that the Bundler Client also supports Paymaster RPC methods (e.g. pm_getPaymasterData), and use them for User Operation sponsorship.\\nIf custom functions are provided to paymaster, it will use them for User Operation sponsorship.\\n\\n\",\"title\":\"paymaster (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#using-a-paymaster-client\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPaymasterClient, createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPaymasterClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/11155111/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: paymasterClient, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#using-a-paymaster-client\",\"isPage\":false,\"text\":\"\\n// @noErrors\\nimport { createPaymasterClient, createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\nimport { client } from &#x27;./config&#x27;\\n// ---cut---\\nconst paymasterClient = createPaymasterClient({ \\n  transport: http(&#x27;https://public.pimlico.io/v2/11155111/rpc&#x27;) \\n}) \\n \\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: paymasterClient, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n})\\n\",\"title\":\"Using a Paymaster Client\",\"titles\":[\"Bundler Client\",\"Parameters\",\"paymaster (optional)\"]},{\"href\":\"/account-abstraction/clients/bundler#using-the-bundler-client-as-paymaster\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#using-the-bundler-client-as-paymaster\",\"isPage\":false,\"text\":\"\\n// @noErrors\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: true, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n})\\n\",\"title\":\"Using the Bundler Client as Paymaster\",\"titles\":[\"Bundler Client\",\"Parameters\",\"paymaster (optional)\"]},{\"href\":\"/account-abstraction/clients/bundler#using-custom-paymaster-functions\",\"html\":\"\\n<p>See the <a href=\\\"#paymastergetpaymasterdata-optional\\\">properties below</a> for more information on how to use custom Paymaster functions.</p>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#using-custom-paymaster-functions\",\"isPage\":false,\"text\":\"\\nSee the properties below for more information on how to use custom Paymaster functions.\\n\",\"title\":\"Using Custom Paymaster Functions\",\"titles\":[\"Bundler Client\",\"Parameters\",\"paymaster (optional)\"]},{\"href\":\"/account-abstraction/clients/bundler#paymastergetpaymasterdata-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(userOperation: UserOperation) =&gt; Promise&lt;GetPaymasterDataReturnType&gt;</code></li>\\n</ul>\\n<p>Retrieves paymaster-related User Operation properties to be used for sending the User Operation.</p>\\n<p><a href=\\\"https://github.com/ethereum/ERCs/blob/master/ERCS/erc-7677.md#pm_getpaymasterdata\\\">Read more</a></p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getPaymasterData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">userOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">      // Retrieve paymaster properties for the User Operation. </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymaster: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymasterData: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymasterVerificationGasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymasterPostOpGasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  } </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#paymastergetpaymasterdata-optional\",\"isPage\":false,\"text\":\"\\n\\nType: (userOperation: UserOperation) =&gt; Promise&lt;GetPaymasterDataReturnType&gt;\\n\\nRetrieves paymaster-related User Operation properties to be used for sending the User Operation.\\nRead more\\n// @noErrors\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: { \\n    async getPaymasterData(userOperation) { \\n      // Retrieve paymaster properties for the User Operation. \\n      return { \\n        paymaster: &#x27;0x...&#x27;, \\n        paymasterData: &#x27;0x...&#x27;, \\n        paymasterVerificationGasLimit: 69420n, \\n        paymasterPostOpGasLimit: 69420n, \\n      } \\n    } \\n  } \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n})\\n\",\"title\":\"paymaster.getPaymasterData (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#paymastergetpaymasterstubdata-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(userOperation: UserOperation) =&gt; Promise&lt;GetPaymasterStubDataReturnType&gt;</code></li>\\n</ul>\\n<p>Retrieves paymaster-related User Operation properties to be used for gas estimation.</p>\\n<p><a href=\\\"https://github.com/ethereum/ERCs/blob/master/ERCS/erc-7677.md#pm_getpaymasterstubdata\\\">Read more</a></p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getPaymasterStubData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">userOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">      // Retrieve paymaster properties for the User Operation. </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymaster: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymasterData: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymasterVerificationGasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        paymasterPostOpGasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getPaymasterData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">userOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  } </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#paymastergetpaymasterstubdata-optional\",\"isPage\":false,\"text\":\"\\n\\nType: (userOperation: UserOperation) =&gt; Promise&lt;GetPaymasterStubDataReturnType&gt;\\n\\nRetrieves paymaster-related User Operation properties to be used for gas estimation.\\nRead more\\n// @noErrors\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: { \\n    async getPaymasterStubData(userOperation) { \\n      // Retrieve paymaster properties for the User Operation. \\n      return { \\n        paymaster: &#x27;0x...&#x27;, \\n        paymasterData: &#x27;0x...&#x27;, \\n        paymasterVerificationGasLimit: 69420n, \\n        paymasterPostOpGasLimit: 69420n, \\n      } \\n    } \\n    async getPaymasterData(userOperation) { /* ... */ }\\n  } \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n})\\n\",\"title\":\"paymaster.getPaymasterStubData (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#paymastercontext-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>unknown</code></li>\\n</ul>\\n<p>Paymaster specific fields.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPaymasterClient, createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPaymasterClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: paymasterClient,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymasterContext: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    policyId: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;abc123&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#paymastercontext-optional\",\"isPage\":false,\"text\":\"\\n\\nType: unknown\\n\\nPaymaster specific fields.\\n// @noErrors\\nimport { createPaymasterClient, createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\nimport { client } from &#x27;./config&#x27;\\n// ---cut---\\nconst paymasterClient = createPaymasterClient({\\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n \\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  paymaster: paymasterClient,\\n  paymasterContext: { \\n    policyId: &#x27;abc123&#x27;\\n  }, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n})\\n\",\"title\":\"paymasterContext (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>4_000</code></li>\\n</ul>\\n<p>Frequency (in ms) for polling enabled Actions.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 4_000\\n\\nFrequency (in ms) for polling enabled Actions.\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\n// ---cut---\\nconst client = createBundlerClient({\\n  pollingInterval: 10_000, \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#rpcschema-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>RpcSchema</code></li>\\n<li><strong>Default:</strong> <code>BundlerRpcSchema</code></li>\\n</ul>\\n<p>Typed JSON-RPC schema for the client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { rpcSchema } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">type</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> CustomRpcSchema</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [{ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  Method</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  Parameters</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">string</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  ReturnType</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> string</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}] </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  rpcSchema: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">rpcSchema</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&lt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">CustomRpcSchema</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> result</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_wa // [!code focus]</span><span style=\\\"color:#B31D28;font-style:italic;--shiki-dark:#FF938A;--shiki-dark-font-style:italic\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">//               ^|</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  params: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#rpcschema-optional\",\"isPage\":false,\"text\":\"\\n\\nType: RpcSchema\\nDefault: BundlerRpcSchema\\n\\nTyped JSON-RPC schema for the client.\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from &#x27;viem&#x27;\\n \\ntype CustomRpcSchema = [{ \\n  Method: &#x27;eth_wagmi&#x27;, \\n  Parameters: [string] \\n  ReturnType: string\\n}] \\n \\nconst client = createBundlerClient({\\n  rpcSchema: rpcSchema&lt;CustomRpcSchema&gt;(), \\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;)\\n})\\n \\nconst result = await client.request({ \\n  method: &#x27;eth_wa // [!code focus] \\n//               ^|\\n \\n  params: [&#x27;hello&#x27;], \\n}) \\n\",\"title\":\"rpcSchema (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#transport\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Transport</code></li>\\n</ul>\\n<p>The Transport of the Bundler Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#transport\",\"isPage\":false,\"text\":\"\\n\\nType: Transport\\n\\nThe Transport of the Bundler Client.\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;), \\n})\\n\",\"title\":\"transport\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#useroperation-optional\",\"html\":\"\\n<p>Configuration for User Operations.</p>\\n\",\"id\":\"pages/account-abstraction/clients/bundler.md#useroperation-optional\",\"isPage\":false,\"text\":\"\\nConfiguration for User Operations.\\n\",\"title\":\"userOperation (optional)\",\"titles\":[\"Bundler Client\",\"Parameters\"]},{\"href\":\"/account-abstraction/clients/bundler#useroperationestimatefeespergas\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>({ account: Account, bundlerClient: Client, userOperation: UserOperationRequest }) =&gt; Promise&lt;{ maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }&gt;</code></li>\\n</ul>\\n<p>Prepares fee properties for the User Operation request.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;https://public.pimlico.io/v2/1/rpc&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  userOperation: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> estimateFeesPerGas</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">bundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">userOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">      // Estimate fees per gas for the User Operation. </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        maxFeePerGas: </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        maxPriorityFeePerGas: </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  } </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/account-abstraction/clients/bundler.md#useroperationestimatefeespergas\",\"isPage\":false,\"text\":\"\\n\\nType: ({ account: Account, bundlerClient: Client, userOperation: UserOperationRequest }) =&gt; Promise&lt;{ maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }&gt;\\n\\nPrepares fee properties for the User Operation request.\\n// @noErrors\\nimport { createBundlerClient } from &#x27;viem/account-abstraction&#x27;\\nimport { http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(&#x27;https://public.pimlico.io/v2/1/rpc&#x27;),\\n  userOperation: { \\n    async estimateFeesPerGas({ account, bundlerClient, userOperation }) { \\n      // Estimate fees per gas for the User Operation. \\n      return { \\n        maxFeePerGas: /* ... */, \\n        maxPriorityFeePerGas: /* ... */, \\n      } \\n    } \\n  } \\n})\",\"title\":\"userOperation.estimateFeesPerGas\",\"titles\":[\"Bundler Client\",\"Parameters\",\"userOperation (optional)\"]}]}}"
