"{\"value\":{\"code\":\"import { privateKeyToAccount, nonceManager } from 'viem/accounts' // [!code focus]\\nimport { client } from './config'\\n\\nconst account = privateKeyToAccount('0x...', { nonceManager }) // [!code focus]\\n\\nconst hashes = await Promise.all([ // [!code focus]\\n  client.sendTransaction({ // [!code focus]\\n    account, // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('0.1'), // [!code focus]\\n  }), // [!code focus]\\n  client.sendTransaction({ // [!code focus]\\n    account, // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('0.2'), // [!code focus]\\n  }), // [!code focus]\\n]) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":9,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const nonceManager: NonceManager\\nimport nonceManager\",\"docs\":\"Default Nonce Manager with a JSON-RPC source.\",\"start\":30,\"length\":12,\"target\":\"nonceManager\",\"line\":0,\"character\":30},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":92,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":124,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":134,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) nonceManager?: NonceManager | undefined\",\"start\":165,\"length\":12,\"target\":\"nonceManager\",\"line\":3,\"character\":47},{\"type\":\"hover\",\"text\":\"const hashes: [`0x${string}`, `0x${string}`]\",\"start\":205,\"length\":6,\"target\":\"hashes\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"var Promise: PromiseConstructor\",\"docs\":\"Represents the completion of an asynchronous operation\",\"start\":220,\"length\":7,\"target\":\"Promise\",\"line\":5,\"character\":21},{\"type\":\"hover\",\"text\":\"(method) PromiseConstructor.all<[Promise<`0x${string}`>, Promise<`0x${string}`>]>(values: [Promise<`0x${string}`>, Promise<`0x${string}`>]): Promise<[`0x${string}`, `0x${string}`]> (+1 overload)\",\"docs\":\"Creates a Promise that is resolved with an array of results when all of the provided Promises\\nresolve, or rejected when any Promise is rejected.\",\"tags\":[[\"param\",\"values An array of Promises.\"],[\"returns\",\"A new Promise.\"]],\"start\":228,\"length\":3,\"target\":\"all\",\"line\":5,\"character\":29},{\"type\":\"tag\",\"name\":\"log\",\"start\":251,\"length\":0,\"text\":\"  ↓ nonce = 0\",\"line\":6,\"character\":0},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":253,\"length\":6,\"target\":\"client\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, undefined>(args: SendTransactionParameters<...>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":260,\"length\":15,\"target\":\"sendTransaction\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) account: ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & `0x${string}`) | ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & {\\n    ...;\\n})\",\"start\":299,\"length\":7,\"target\":\"account\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":329,\"length\":2,\"target\":\"to\",\"line\":8,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":400,\"length\":5,\"target\":\"value\",\"line\":9,\"character\":4},{\"type\":\"hover\",\"text\":\"any\",\"start\":407,\"length\":10,\"target\":\"parseEther\",\"line\":9,\"character\":11},{\"type\":\"tag\",\"name\":\"log\",\"start\":466,\"length\":0,\"text\":\"  ↓ nonce = 1\",\"line\":11,\"character\":0},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":468,\"length\":6,\"target\":\"client\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, undefined>(args: SendTransactionParameters<...>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":475,\"length\":15,\"target\":\"sendTransaction\",\"line\":11,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) account: ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & `0x${string}`) | ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & {\\n    ...;\\n})\",\"start\":514,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":544,\"length\":2,\"target\":\"to\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":615,\"length\":5,\"target\":\"value\",\"line\":14,\"character\":4},{\"type\":\"hover\",\"text\":\"any\",\"start\":622,\"length\":10,\"target\":\"parseEther\",\"line\":14,\"character\":11}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[724,747],[486,509],[0,235]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  ↓ nonce = 0\",\"start\":486,\"end\":509},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  ↓ nonce = 1\",\"start\":724,\"end\":747}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":196,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { privateKeyToAccount, nonceManager } from 'viem/accounts' // [!code focus]\\nimport { client } from './config'\\n\\nconst account = privateKeyToAccount('0x...', { nonceManager }) // [!code focus]\\n\\nconst hashes = await Promise.all([ // [!code focus]\\n// @log:   ↓ nonce = 0\\n  client.sendTransaction({ // [!code focus]\\n    account, // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('0.1'), // [!code focus]\\n  }), // [!code focus]\\n// @log:   ↓ nonce = 1\\n  client.sendTransaction({ // [!code focus]\\n    account, // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('0.2'), // [!code focus]\\n  }), // [!code focus]\\n]) // [!code focus]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":9,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const nonceManager: NonceManager\\nimport nonceManager\",\"docs\":\"Default Nonce Manager with a JSON-RPC source.\",\"start\":30,\"length\":12,\"target\":\"nonceManager\",\"line\":0,\"character\":30},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":92,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":124,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":134,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) nonceManager?: NonceManager | undefined\",\"start\":165,\"length\":12,\"target\":\"nonceManager\",\"line\":3,\"character\":47},{\"type\":\"hover\",\"text\":\"const hashes: [`0x${string}`, `0x${string}`]\",\"start\":205,\"length\":6,\"target\":\"hashes\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"var Promise: PromiseConstructor\",\"docs\":\"Represents the completion of an asynchronous operation\",\"start\":220,\"length\":7,\"target\":\"Promise\",\"line\":5,\"character\":21},{\"type\":\"hover\",\"text\":\"(method) PromiseConstructor.all<[Promise<`0x${string}`>, Promise<`0x${string}`>]>(values: [Promise<`0x${string}`>, Promise<`0x${string}`>]): Promise<[`0x${string}`, `0x${string}`]> (+1 overload)\",\"docs\":\"Creates a Promise that is resolved with an array of results when all of the provided Promises\\nresolve, or rejected when any Promise is rejected.\",\"tags\":[[\"param\",\"values An array of Promises.\"],[\"returns\",\"A new Promise.\"]],\"start\":228,\"length\":3,\"target\":\"all\",\"line\":5,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":253,\"length\":6,\"target\":\"client\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, undefined>(args: SendTransactionParameters<...>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":260,\"length\":15,\"target\":\"sendTransaction\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) account: ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & `0x${string}`) | ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & {\\n    ...;\\n})\",\"start\":299,\"length\":7,\"target\":\"account\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":329,\"length\":2,\"target\":\"to\",\"line\":8,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":400,\"length\":5,\"target\":\"value\",\"line\":9,\"character\":4},{\"type\":\"hover\",\"text\":\"any\",\"start\":407,\"length\":10,\"target\":\"parseEther\",\"line\":9,\"character\":11},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":468,\"length\":6,\"target\":\"client\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, undefined>(args: SendTransactionParameters<...>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":475,\"length\":15,\"target\":\"sendTransaction\",\"line\":11,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) account: ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & `0x${string}`) | ({\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} & {\\n    ...;\\n})\",\"start\":514,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":544,\"length\":2,\"target\":\"to\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":615,\"length\":5,\"target\":\"value\",\"line\":14,\"character\":4},{\"type\":\"hover\",\"text\":\"any\",\"start\":622,\"length\":10,\"target\":\"parseEther\",\"line\":14,\"character\":11}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":251,\"length\":0,\"text\":\"  ↓ nonce = 0\",\"line\":6,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":466,\"length\":0,\"text\":\"  ↓ nonce = 1\",\"line\":11,\"character\":0}]}}"
