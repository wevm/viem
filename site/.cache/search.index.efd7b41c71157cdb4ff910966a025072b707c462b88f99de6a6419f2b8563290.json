"{\"value\":{\"mdx\":\"---\\ndescription: Transfers the specified token from the associated account on the L1 network to the target account on the L2 network.\\n---\\n\\n# deposit\\n\\nTransfers the specified token from the associated account on the L1 network to the target account on the L2 network.\\nThe token can be either ETH or any ERC20 token. For ERC20 tokens, enough approved tokens must be associated with\\nthe specified L1 bridge (default one or the one defined in `bridgeAddress`).\\nIn this case, depending on is the chain ETH-based or not `approveToken` or `approveBaseToken`\\ncan be enabled to perform token approval. If there are already enough approved tokens for the L1 bridge,\\ntoken approval will be skipped.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { account, walletClient, zksyncClient } from './config'\\nimport { legacyEthAddress } from 'viem/zksync'\\n\\n// deposit ETH\\nconst hash = await walletClient.deposit({\\n  account,\\n  client: zksyncClient,\\n  token: legacyEthAddress,\\n  amount: 7_000_000_000n,\\n  to: account.address,\\n  refundRecipient: account.address,\\n})\\n\\n// deposit ERC20\\nconst txHash = await walletClient.deposit({\\n    account,\\n    client: zksyncClient,\\n    token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n    amount: 20n,\\n    to: account.address,\\n    approveToken: true,\\n    refundRecipient: account.address,\\n})\\n```\\n\\n```ts [config.ts]\\nimport { createWalletClient, createPublicClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { zksync, mainnet } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/zksync'\\n\\nexport const zksyncClient = createPublicClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(publicActionsL2())\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\\n// JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n```\\n\\n:::\\n\\n### Account Hoisting\\n\\nIf you do not wish to pass an `account` to every `deposit`, you can also hoist the Account on the Wallet Client (see `config.ts`).\\n\\n[Learn more](/docs/clients/wallet#account).\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { walletClient, zksyncClient } from './config'\\nimport { legacyEthAddress } from 'viem/zksync'\\n\\n// deposit ETH\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: legacyEthAddress,\\n  amount: 7_000_000_000n,\\n  to: walletClient.account.address,\\n  refundRecipient: walletClient.account.address,\\n})\\n\\n// deposit ERC20\\nconst txHash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n```ts [config.ts (JSON-RPC Account)]\\nimport { createWalletClient, custom } from 'viem'\\nimport { zksync } from 'viem/chains'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/zksync'\\n\\nexport const zksyncClient = createPublicClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(publicActionsL2())\\n\\n// Retrieve Account from an EIP-1193  Provider. // [!code focus]\\nconst [account] = await window.ethereum.request({  // [!code focus]\\n  method: 'eth_requestAccounts' // [!code focus]\\n}) // [!code focus]\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum) // [!code focus]\\n}).extend(walletActionsL1())\\n```\\n\\n```ts [config.ts (Local Account)]\\nimport { createWalletClient, custom } from 'viem'\\nimport { zksync } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { publicActionsL2, walletActionsL1 } from 'viem/zksync'\\n\\nexport const zksyncClient = createPublicClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(publicActionsL2())\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'), // [!code focus]\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n```\\n\\n:::\\n\\n## Returns\\n\\n[`Hash`](/docs/glossary/types#hash)\\n\\nThe [Transaction](/docs/glossary/terms#transaction) hash.\\n\\n## Parameters\\n\\n### client\\n\\n- **Type:** `Client`\\n\\nThe L2 client for fetching data from L2 chain.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient, // [!code focus]\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n### token\\n\\n- **Type:** `Address`\\n\\nThe address of the token to deposit.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55', // [!code focus]\\n  amount: 20n,\\n  to: walletClient.account.address,  \\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n### amount\\n\\n- **Type:** `bigint`\\n\\nThe amount of the token to deposit.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n, // [!code focus]\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n### to (optional)\\n\\n- **Type:** `Address`\\n- **Default:** `walletClient.account`\\n\\nThe address that will receive the deposited tokens on L2.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address, // [!code focus]\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n### operatorTip (optional)\\n\\n- **Type:** `bigint`\\n\\nThe tip the operator will receive on top of the base cost of the transaction.\\nCurrently, ZKsync node do not consider this tip.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  operatorTip: 100_000n, // [!code focus]\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n### l2GasLimit (optional)\\n\\n- **Type:** `bigint`\\n\\nMaximum amount of L2 gas that transaction can consume during execution on L2.\\n\\n```ts\\nconst hash = await walletClient.requestExecute({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  l2GasLimit: 900_000n, // [!code focus]\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\\n\\n### gasPerPubdataByte (optional)\\n\\n- **Type:** `bigint`\\n\\nThe L2 gas price for each published L1 calldata byte.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n  gasPerPubdataByte: 250_000_000_000n // [!code focus]\\n})\\n```\\n\\n### refundRecipient (optional)\\n\\n- **Type:** `Address`\\n- **Default:** `walletClient.account`\\n\\nThe address on L2 that will receive the refund for the transaction.\\nIf the transaction fails, it will also be the address to receive `amount`.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address, // [!code focus]\\n})\\n```\\n\\n### bridgeAddress (optional)\\n\\n- **Type:** `Address`\\n- **Default:** ZKsync L1 shared bridge\\n\\nThe address of the bridge contract to be used.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address, \\n  bridgeAddress: '0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF' // [!code focus]\\n})\\n```\\n\\n### customBridgeData (optional)\\n\\n- **Type:** `Hex`\\n\\nAdditional data that can be sent to a bridge.\\n\\n```ts\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: '0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF', \\n  customBridgeData: '0x...' // [!code focus],\\n})\\n```\\n\\n### approveToken (optional)\\n\\n- **Type:** `boolean | TransactionRequest`\\n\\nWhether token approval should be performed under the hood.\\nSet this flag to true (or provide transaction overrides) if the bridge does\\nnot have sufficient allowance. The approval transaction is executed only if\\nthe bridge lacks sufficient allowance; otherwise, it is skipped.\\n\\n::: code-group\\n\\n```ts [boolean.ts]\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true, // [!code focus],\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: '0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF',\\n})\\n```\\n\\n```ts [overrides.ts]\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: { \\n    maxFeePerGas: 200_000_000_000n // [!code focus],  \\n  },\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: '0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF',\\n})\\n```\\n\\n:::\\n\\n### approveBaseToken (optional)\\n\\n- **Type:** `boolean | TransactionRequest`\\n\\nWhether base token approval should be performed under the hood.\\nSet this flag to true (or provide transaction overrides) if the bridge does\\nnot have sufficient allowance. The approval transaction is executed only if\\nthe bridge lacks sufficient allowance; otherwise, it is skipped.\\n\\n::: code-group\\n\\n```ts [boolean.ts]\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveBaseToken: true, // [!code focus],\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: '0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF',\\n})\\n```\\n\\n```ts [overrides.ts]\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveBaseToken: { \\n    maxFeePerGas: 200_000_000_000n // [!code focus],  \\n  },\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: '0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF',\\n})\\n```\\n\\n:::\\n\\n### chain (optional)\\n\\n- **Type:** [`Chain`](/docs/glossary/types#chain)\\n- **Default:** `walletClient.chain`\\n\\nThe target chain. If there is a mismatch between the wallet's current chain & the target chain, an error will be thrown.\\n\\n```ts\\nimport { zksync } from 'viem/chains' // [!code focus]\\n\\nconst hash = await walletClient.deposit({\\n  chain: zksync, // [!code focus]\\n  client: zksyncClient,\\n  token: '0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55',\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n```\",\"document\":[{\"href\":\"/zksync/actions/deposit#deposit\",\"html\":\"</header>\\n<p>Transfers the specified token from the associated account on the L1 network to the target account on the L2 network.\\nThe token can be either ETH or any ERC20 token. For ERC20 tokens, enough approved tokens must be associated with\\nthe specified L1 bridge (default one or the one defined in <code>bridgeAddress</code>).\\nIn this case, depending on is the chain ETH-based or not <code>approveToken</code> or <code>approveBaseToken</code>\\ncan be enabled to perform token approval. If there are already enough approved tokens for the L1 bridge,\\ntoken approval will be skipped.</p>\\n\",\"id\":\"pages/zksync/actions/deposit.md#deposit\",\"isPage\":true,\"text\":\"\\nTransfers the specified token from the associated account on the L1 network to the target account on the L2 network.\\nThe token can be either ETH or any ERC20 token. For ERC20 tokens, enough approved tokens must be associated with\\nthe specified L1 bridge (default one or the one defined in bridgeAddress).\\nIn this case, depending on is the chain ETH-based or not approveToken or approveBaseToken\\ncan be enabled to perform token approval. If there are already enough approved tokens for the L1 bridge,\\ntoken approval will be skipped.\\n\",\"title\":\"deposit\",\"titles\":[]},{\"href\":\"/zksync/actions/deposit#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, walletClient, zksyncClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { legacyEthAddress } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// deposit ETH</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: legacyEthAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">7_000_000_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// deposit ERC20</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> txHash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    to: account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    refundRecipient: account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, createPublicClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { zksync, mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> zksyncClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: zksync,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// JSON-RPC Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Local Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n\",\"id\":\"pages/zksync/actions/deposit.md#usage\",\"isPage\":false,\"text\":\"\\nimport { account, walletClient, zksyncClient } from &#x27;./config&#x27;\\nimport { legacyEthAddress } from &#x27;viem/zksync&#x27;\\n \\n// deposit ETH\\nconst hash = await walletClient.deposit({\\n  account,\\n  client: zksyncClient,\\n  token: legacyEthAddress,\\n  amount: 7_000_000_000n,\\n  to: account.address,\\n  refundRecipient: account.address,\\n})\\n \\n// deposit ERC20\\nconst txHash = await walletClient.deposit({\\n    account,\\n    client: zksyncClient,\\n    token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n    amount: 20n,\\n    to: account.address,\\n    approveToken: true,\\n    refundRecipient: account.address,\\n})import { createWalletClient, createPublicClient, custom } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { zksync, mainnet } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/zksync&#x27;\\n \\nexport const zksyncClient = createPublicClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(publicActionsL2())\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n \\n// JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n\",\"title\":\"Usage\",\"titles\":[\"deposit\"]},{\"href\":\"/zksync/actions/deposit#account-hoisting\",\"html\":\"\\n<p>If you do not wish to pass an <code>account</code> to every <code>deposit</code>, you can also hoist the Account on the Wallet Client (see <code>config.ts</code>).</p>\\n<p><a href=\\\"/docs/clients/wallet#account\\\">Learn more</a>.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { walletClient, zksyncClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { legacyEthAddress } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// deposit ETH</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: legacyEthAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">7_000_000_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// deposit ERC20</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> txHash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-title=\\\"config.ts (JSON-RPC Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (JSON-RPC Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { zksync } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> zksyncClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: zksync,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Retrieve Account from an EIP-1193  Provider. </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.ethereum.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({  </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_requestAccounts&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div><div data-title=\\\"config.ts (Local Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (Local Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { zksync } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL2, walletActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> zksyncClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: zksync,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL2</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">walletActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div></div>\\n\",\"id\":\"pages/zksync/actions/deposit.md#account-hoisting\",\"isPage\":false,\"text\":\"\\nIf you do not wish to pass an account to every deposit, you can also hoist the Account on the Wallet Client (see config.ts).\\nLearn more.\\nimport { walletClient, zksyncClient } from &#x27;./config&#x27;\\nimport { legacyEthAddress } from &#x27;viem/zksync&#x27;\\n \\n// deposit ETH\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: legacyEthAddress,\\n  amount: 7_000_000_000n,\\n  to: walletClient.account.address,\\n  refundRecipient: walletClient.account.address,\\n})\\n \\n// deposit ERC20\\nconst txHash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})import { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { zksync } from &#x27;viem/chains&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/zksync&#x27;\\n \\nexport const zksyncClient = createPublicClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(publicActionsL2())\\n \\n// Retrieve Account from an EIP-1193  Provider. \\nconst [account] = await window.ethereum.request({  \\n  method: &#x27;eth_requestAccounts&#x27;\\n}) \\n \\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum) \\n}).extend(walletActionsL1())import { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { zksync } from &#x27;viem/chains&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { publicActionsL2, walletActionsL1 } from &#x27;viem/zksync&#x27;\\n \\nexport const zksyncClient = createPublicClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(publicActionsL2())\\n \\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;), \\n  transport: custom(window.ethereum)\\n}).extend(walletActionsL1())\\n\",\"title\":\"Account Hoisting\",\"titles\":[\"deposit\",\"Usage\"]},{\"href\":\"/zksync/actions/deposit#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hash\\\"><code>Hash</code></a></p>\\n<p>The <a href=\\\"/docs/glossary/terms#transaction\\\">Transaction</a> hash.</p>\\n\",\"id\":\"pages/zksync/actions/deposit.md#returns\",\"isPage\":false,\"text\":\"\\nHash\\nThe Transaction hash.\\n\",\"title\":\"Returns\",\"titles\":[\"deposit\"]},{\"href\":\"/zksync/actions/deposit#parameters\",\"html\":\"\\n\",\"id\":\"pages/zksync/actions/deposit.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"deposit\"]},{\"href\":\"/zksync/actions/deposit#client\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Client</code></li>\\n</ul>\\n<p>The L2 client for fetching data from L2 chain.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#client\",\"isPage\":false,\"text\":\"\\n\\nType: Client\\n\\nThe L2 client for fetching data from L2 chain.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient, \\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n\",\"title\":\"client\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#token\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n</ul>\\n<p>The address of the token to deposit.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#token\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\n\\nThe address of the token to deposit.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;, \\n  amount: 20n,\\n  to: walletClient.account.address,  \\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n\",\"title\":\"token\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#amount\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The amount of the token to deposit.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#amount\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe amount of the token to deposit.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n, \\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n\",\"title\":\"amount\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#to-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n<li><strong>Default:</strong> <code>walletClient.account</code></li>\\n</ul>\\n<p>The address that will receive the deposited tokens on L2.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#to-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: walletClient.account\\n\\nThe address that will receive the deposited tokens on L2.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address, \\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n\",\"title\":\"to (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#operatortip-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The tip the operator will receive on top of the base cost of the transaction.\\nCurrently, ZKsync node do not consider this tip.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  operatorTip: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#operatortip-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe tip the operator will receive on top of the base cost of the transaction.\\nCurrently, ZKsync node do not consider this tip.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  operatorTip: 100_000n, \\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n\",\"title\":\"operatorTip (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#l2gaslimit-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Maximum amount of L2 gas that transaction can consume during execution on L2.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">requestExecute</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2GasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">900_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#l2gaslimit-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nMaximum amount of L2 gas that transaction can consume during execution on L2.\\nconst hash = await walletClient.requestExecute({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  l2GasLimit: 900_000n, \\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\\n\",\"title\":\"l2GasLimit (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#gasperpubdatabyte-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The L2 gas price for each published L1 calldata byte.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gasPerPubdataByte: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">250_000_000_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#gasperpubdatabyte-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe L2 gas price for each published L1 calldata byte.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n  gasPerPubdataByte: 250_000_000_000n\\n})\\n\",\"title\":\"gasPerPubdataByte (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#refundrecipient-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n<li><strong>Default:</strong> <code>walletClient.account</code></li>\\n</ul>\\n<p>The address on L2 that will receive the refund for the transaction.\\nIf the transaction fails, it will also be the address to receive <code>amount</code>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#refundrecipient-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: walletClient.account\\n\\nThe address on L2 that will receive the refund for the transaction.\\nIf the transaction fails, it will also be the address to receive amount.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address, \\n})\\n\",\"title\":\"refundRecipient (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#bridgeaddress-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n<li><strong>Default:</strong> ZKsync L1 shared bridge</li>\\n</ul>\\n<p>The address of the bridge contract to be used.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bridgeAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#bridgeaddress-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: ZKsync L1 shared bridge\\n\\nThe address of the bridge contract to be used.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address, \\n  bridgeAddress: &#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;\\n})\\n\",\"title\":\"bridgeAddress (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#custombridgedata-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Hex</code></li>\\n</ul>\\n<p>Additional data that can be sent to a bridge.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bridgeAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  customBridgeData: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> //,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/deposit.md#custombridgedata-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Hex\\n\\nAdditional data that can be sent to a bridge.\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: &#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;, \\n  customBridgeData: &#x27;0x...&#x27; //,\\n})\\n\",\"title\":\"customBridgeData (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#approvetoken-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean | TransactionRequest</code></li>\\n</ul>\\n<p>Whether token approval should be performed under the hood.\\nSet this flag to true (or provide transaction overrides) if the bridge does\\nnot have sufficient allowance. The approval transaction is executed only if\\nthe bridge lacks sufficient allowance; otherwise, it is skipped.</p>\\n<p>::: code-group</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"boolean.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">//,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bridgeAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"overrides.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    maxFeePerGas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">200_000_000_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> //,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bridgeAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p>:::</p>\\n\",\"id\":\"pages/zksync/actions/deposit.md#approvetoken-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean | TransactionRequest\\n\\nWhether token approval should be performed under the hood.\\nSet this flag to true (or provide transaction overrides) if the bridge does\\nnot have sufficient allowance. The approval transaction is executed only if\\nthe bridge lacks sufficient allowance; otherwise, it is skipped.\\n::: code-group\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true, //,\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: &#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;,\\n})\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: { \\n    maxFeePerGas: 200_000_000_000n //,\\n  },\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: &#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;,\\n})\\n:::\\n\",\"title\":\"approveToken (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#approvebasetoken-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean | TransactionRequest</code></li>\\n</ul>\\n<p>Whether base token approval should be performed under the hood.\\nSet this flag to true (or provide transaction overrides) if the bridge does\\nnot have sufficient allowance. The approval transaction is executed only if\\nthe bridge lacks sufficient allowance; otherwise, it is skipped.</p>\\n<p>::: code-group</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"boolean.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveBaseToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">//,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bridgeAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"overrides.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveBaseToken: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    maxFeePerGas: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">200_000_000_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> //,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bridgeAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p>:::</p>\\n\",\"id\":\"pages/zksync/actions/deposit.md#approvebasetoken-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean | TransactionRequest\\n\\nWhether base token approval should be performed under the hood.\\nSet this flag to true (or provide transaction overrides) if the bridge does\\nnot have sufficient allowance. The approval transaction is executed only if\\nthe bridge lacks sufficient allowance; otherwise, it is skipped.\\n::: code-group\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveBaseToken: true, //,\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: &#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;,\\n})\\nconst hash = await walletClient.deposit({\\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveBaseToken: { \\n    maxFeePerGas: 200_000_000_000n //,\\n  },\\n  refundRecipient: walletClient.account.address,\\n  bridgeAddress: &#x27;0xFC073319977e314F251EAE6ae6bE76B0B3BAeeCF&#x27;,\\n})\\n:::\\n\",\"title\":\"approveBaseToken (optional)\",\"titles\":[\"deposit\",\"Parameters\"]},{\"href\":\"/zksync/actions/deposit#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\"><code>Chain</code></a></li>\\n<li><strong>Default:</strong> <code>walletClient.chain</code></li>\\n</ul>\\n<p>The target chain. If there is a mismatch between the wallet&#x27;s current chain &amp; the target chain, an error will be thrown.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { zksync } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">deposit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: zksync, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client: zksyncClient,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  token: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  amount: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">20</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  approveToken: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  refundRecipient: walletClient.account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/zksync/actions/deposit.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\nDefault: walletClient.chain\\n\\nThe target chain. If there is a mismatch between the wallet&#x27;s current chain &amp; the target chain, an error will be thrown.\\nimport { zksync } from &#x27;viem/chains&#x27;\\n \\nconst hash = await walletClient.deposit({\\n  chain: zksync, \\n  client: zksyncClient,\\n  token: &#x27;0x70a0F165d6f8054d0d0CF8dFd4DD2005f0AF6B55&#x27;,\\n  amount: 20n,\\n  to: walletClient.account.address,\\n  approveToken: true,\\n  refundRecipient: walletClient.account.address,\\n})\",\"title\":\"chain (optional)\",\"titles\":[\"deposit\",\"Parameters\"]}]}}"
