"{\"value\":{\"code\":\"import { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createWalletClient({\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: custom(window.ethereum!)\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":9,\"length\":9,\"target\":\"rpcSchema\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":39,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":2,\"character\":5},{\"type\":\"hover\",\"text\":\"(property) Method: \\\"eth_wagmi\\\"\",\"start\":79,\"length\":6,\"target\":\"Method\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) Parameters: [string]\",\"start\":119,\"length\":10,\"target\":\"Parameters\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) ReturnType: string\",\"start\":159,\"length\":10,\"target\":\"ReturnType\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":222,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<CustomTransport, undefined, undefined, CustomRpcSchema>(parameters: {\\n    account?: `0x${string}` | Account | undefined;\\n    cacheTime?: number | undefined | undefined;\\n    ... 6 more ...;\\n    transport: CustomTransport;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":231,\"length\":18,\"target\":\"createWalletClient\",\"line\":8,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) rpcSchema?: CustomRpcSchema | undefined\",\"docs\":\"Typed JSON-RPC schema for the client.\",\"start\":254,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) rpcSchema<CustomRpcSchema>(): CustomRpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":265,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":13},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":275,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":9,\"character\":23},{\"type\":\"hover\",\"text\":\"(property) transport: CustomTransport\",\"docs\":\"The RPC transport\",\"start\":314,\"length\":9,\"target\":\"transport\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) custom<{\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}>(provider: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":325,\"length\":6,\"target\":\"custom\",\"line\":10,\"character\":13},{\"type\":\"hover\",\"text\":\"var window: Window & typeof globalThis\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)\",\"start\":332,\"length\":6,\"target\":\"window\",\"line\":10,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) Window.ethereum?: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n} | undefined\",\"start\":339,\"length\":8,\"target\":\"ethereum\",\"line\":10,\"character\":27},{\"type\":\"hover\",\"text\":\"const result: string | boolean | void | `0x${string}`[] | NetworkSync | WalletGetCallsStatusReturnType<`0x${string}`, `0x${string}`> | {\\n    [x: `0x${string}`]: WalletCapabilities;\\n} | WalletPermission[] | {\\n    ...;\\n} | null\",\"start\":360,\"length\":6,\"target\":\"result\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":375,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) request: <undefined, {\\n    method: \\\"eth_accounts\\\";\\n    params?: undefined | undefined;\\n} | {\\n    method: \\\"eth_chainId\\\";\\n    params?: undefined | undefined;\\n} | {\\n    method: \\\"eth_estimateGas\\\";\\n    params: [transaction: RpcTransactionRequest] | [transaction: ...] | [transaction: ...];\\n} | ... 20 more ... | {\\n    ...;\\n}, string | ... 8 more ... | null>(args: {\\n    method: \\\"eth_accounts\\\";\\n    params?: undefined | undefined;\\n} | ... 22 more ... | {\\n    ...;\\n}, options?: EIP1193RequestOptions | undefined) => Promise<...>\",\"docs\":\"Request function wrapped with friendly error handling\",\"start\":382,\"length\":7,\"target\":\"request\",\"line\":13,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) method: \\\"eth_wa // [!code focus] \\\"\",\"start\":411,\"length\":6,\"target\":\"method\",\"line\":14,\"character\":2},{\"type\":\"completion\",\"start\":426,\"length\":0,\"completions\":[{\"name\":\"eth_wagmi\",\"kindModifiers\":\"\",\"kind\":\"string\",\"sortText\":\"11\",\"replacementSpan\":{\"start\":517,\"length\":5},\"commitCharacters\":[]}],\"completionsPrefix\":\"eth_wa\",\"line\":14,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) params: [\\\"hello\\\"]\",\"start\":447,\"length\":6,\"target\":\"params\",\"line\":15,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[542,562],[0,97]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":71,\"end\":84}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createWalletClient({\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: custom(window.ethereum!)\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n//               ^|\\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[523],\"positionHighlights\":[]},\"queries\":[],\"completions\":[{\"type\":\"completion\",\"start\":426,\"length\":0,\"completions\":[{\"name\":\"eth_wagmi\",\"kindModifiers\":\"\",\"kind\":\"string\",\"sortText\":\"11\",\"replacementSpan\":{\"start\":517,\"length\":5},\"commitCharacters\":[]}],\"completionsPrefix\":\"eth_wa\",\"line\":14,\"character\":17}],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":9,\"length\":9,\"target\":\"rpcSchema\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":39,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":2,\"character\":5},{\"type\":\"hover\",\"text\":\"(property) Method: \\\"eth_wagmi\\\"\",\"start\":79,\"length\":6,\"target\":\"Method\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) Parameters: [string]\",\"start\":119,\"length\":10,\"target\":\"Parameters\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) ReturnType: string\",\"start\":159,\"length\":10,\"target\":\"ReturnType\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":222,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<CustomTransport, undefined, undefined, CustomRpcSchema>(parameters: {\\n    account?: `0x${string}` | Account | undefined;\\n    cacheTime?: number | undefined | undefined;\\n    ... 6 more ...;\\n    transport: CustomTransport;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":231,\"length\":18,\"target\":\"createWalletClient\",\"line\":8,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) rpcSchema?: CustomRpcSchema | undefined\",\"docs\":\"Typed JSON-RPC schema for the client.\",\"start\":254,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) rpcSchema<CustomRpcSchema>(): CustomRpcSchema\\nimport rpcSchema\",\"docs\":\"Defines a typed JSON-RPC schema for the client.\\nNote: This is a runtime noop function.\",\"start\":265,\"length\":9,\"target\":\"rpcSchema\",\"line\":9,\"character\":13},{\"type\":\"hover\",\"text\":\"type CustomRpcSchema = [{\\n    Method: \\\"eth_wagmi\\\";\\n    Parameters: [string];\\n    ReturnType: string;\\n}]\",\"start\":275,\"length\":15,\"target\":\"CustomRpcSchema\",\"line\":9,\"character\":23},{\"type\":\"hover\",\"text\":\"(property) transport: CustomTransport\",\"docs\":\"The RPC transport\",\"start\":314,\"length\":9,\"target\":\"transport\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) custom<{\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}>(provider: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":325,\"length\":6,\"target\":\"custom\",\"line\":10,\"character\":13},{\"type\":\"hover\",\"text\":\"var window: Window & typeof globalThis\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)\",\"start\":332,\"length\":6,\"target\":\"window\",\"line\":10,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) Window.ethereum?: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n} | undefined\",\"start\":339,\"length\":8,\"target\":\"ethereum\",\"line\":10,\"character\":27},{\"type\":\"hover\",\"text\":\"const result: string | boolean | void | `0x${string}`[] | NetworkSync | WalletGetCallsStatusReturnType<`0x${string}`, `0x${string}`> | {\\n    [x: `0x${string}`]: WalletCapabilities;\\n} | WalletPermission[] | {\\n    ...;\\n} | null\",\"start\":360,\"length\":6,\"target\":\"result\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":375,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) request: <undefined, {\\n    method: \\\"eth_accounts\\\";\\n    params?: undefined | undefined;\\n} | {\\n    method: \\\"eth_chainId\\\";\\n    params?: undefined | undefined;\\n} | {\\n    method: \\\"eth_estimateGas\\\";\\n    params: [transaction: RpcTransactionRequest] | [transaction: ...] | [transaction: ...];\\n} | ... 20 more ... | {\\n    ...;\\n}, string | ... 8 more ... | null>(args: {\\n    method: \\\"eth_accounts\\\";\\n    params?: undefined | undefined;\\n} | ... 22 more ... | {\\n    ...;\\n}, options?: EIP1193RequestOptions | undefined) => Promise<...>\",\"docs\":\"Request function wrapped with friendly error handling\",\"start\":382,\"length\":7,\"target\":\"request\",\"line\":13,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) method: \\\"eth_wa // [!code focus] \\\"\",\"start\":411,\"length\":6,\"target\":\"method\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) params: [\\\"hello\\\"]\",\"start\":447,\"length\":6,\"target\":\"params\",\"line\":15,\"character\":2}],\"tags\":[]}}"
