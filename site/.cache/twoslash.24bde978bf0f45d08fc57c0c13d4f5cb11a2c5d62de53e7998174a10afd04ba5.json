"{\"value\":{\"code\":\"import * as cKzg from 'c-kzg'\\nimport { toBlobSidecars, setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath) // [!code focus]\\n\\nconst sidecars = toBlobSidecars({ \\n  data: '0x...',\\n  kzg, // [!code focus]\\n}) \",\"nodes\":[{\"type\":\"hover\",\"text\":\"import cKzg\",\"start\":12,\"length\":4,\"target\":\"cKzg\",\"line\":0,\"character\":12},{\"type\":\"hover\",\"text\":\"(alias) function toBlobSidecars<const data extends Hex | ByteArray | undefined = undefined, const blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | ... 2 more ... | (blobs extends readonly ByteArray[] ? \\\"bytes\\\" : never)>(parameters: ToBlobSidecarsParameters<data, blobs, to>): ToBlobSidecarsReturnType<to>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":39,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function setupKzg(parameters: SetupKzgParameters, path: string): SetupKzgReturnType\\nimport setupKzg\",\"docs\":\"Sets up and returns a KZG interface.\",\"tags\":[[\"example\",\"```ts\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n```\"]],\"start\":55,\"length\":8,\"target\":\"setupKzg\",\"line\":1,\"character\":25},{\"type\":\"hover\",\"text\":\"(alias) const mainnetTrustedSetupPath: string\\nimport mainnetTrustedSetupPath\",\"start\":87,\"length\":23,\"target\":\"mainnetTrustedSetupPath\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const kzg: Kzg\",\"start\":137,\"length\":3,\"target\":\"kzg\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) setupKzg(parameters: SetupKzgParameters, path: string): SetupKzgReturnType\\nimport setupKzg\",\"docs\":\"Sets up and returns a KZG interface.\",\"tags\":[[\"example\",\"```ts\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n```\"]],\"start\":143,\"length\":8,\"target\":\"setupKzg\",\"line\":4,\"character\":12},{\"type\":\"hover\",\"text\":\"import cKzg\",\"start\":152,\"length\":4,\"target\":\"cKzg\",\"line\":4,\"character\":21},{\"type\":\"hover\",\"text\":\"(alias) const mainnetTrustedSetupPath: string\\nimport mainnetTrustedSetupPath\",\"start\":158,\"length\":23,\"target\":\"mainnetTrustedSetupPath\",\"line\":4,\"character\":27},{\"type\":\"hover\",\"text\":\"const sidecars: BlobSidecars<`0x${string}`>\",\"start\":207,\"length\":8,\"target\":\"sidecars\",\"line\":6,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toBlobSidecars<\\\"0x...\\\", undefined, \\\"hex\\\">(parameters: ToBlobSidecarsParameters<\\\"0x...\\\", undefined, \\\"hex\\\", never>): BlobSidecars<`0x${string}`>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":218,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":6,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data: `0x${string}` | ByteArray\",\"docs\":\"Data to transform into blobs.\",\"start\":238,\"length\":4,\"target\":\"data\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) kzg: Kzg\",\"docs\":\"KZG implementation.\",\"start\":255,\"length\":3,\"target\":\"kzg\",\"line\":8,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,13]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":0,\"end\":13}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"// @noErrors\\nimport * as cKzg from 'c-kzg'\\nimport { toBlobSidecars, setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath) // [!code focus]\\n\\nconst sidecars = toBlobSidecars({ \\n  data: '0x...',\\n  kzg, // [!code focus]\\n}) \",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"import cKzg\",\"start\":12,\"length\":4,\"target\":\"cKzg\",\"line\":0,\"character\":12},{\"type\":\"hover\",\"text\":\"(alias) function toBlobSidecars<const data extends Hex | ByteArray | undefined = undefined, const blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined, to extends To = (data extends `0x${string}` ? \\\"hex\\\" : never) | ... 2 more ... | (blobs extends readonly ByteArray[] ? \\\"bytes\\\" : never)>(parameters: ToBlobSidecarsParameters<data, blobs, to>): ToBlobSidecarsReturnType<to>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":39,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function setupKzg(parameters: SetupKzgParameters, path: string): SetupKzgReturnType\\nimport setupKzg\",\"docs\":\"Sets up and returns a KZG interface.\",\"tags\":[[\"example\",\"```ts\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n```\"]],\"start\":55,\"length\":8,\"target\":\"setupKzg\",\"line\":1,\"character\":25},{\"type\":\"hover\",\"text\":\"(alias) const mainnetTrustedSetupPath: string\\nimport mainnetTrustedSetupPath\",\"start\":87,\"length\":23,\"target\":\"mainnetTrustedSetupPath\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const kzg: Kzg\",\"start\":137,\"length\":3,\"target\":\"kzg\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) setupKzg(parameters: SetupKzgParameters, path: string): SetupKzgReturnType\\nimport setupKzg\",\"docs\":\"Sets up and returns a KZG interface.\",\"tags\":[[\"example\",\"```ts\\nimport * as cKzg from 'c-kzg'\\nimport { setupKzg } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath)\\n```\"]],\"start\":143,\"length\":8,\"target\":\"setupKzg\",\"line\":4,\"character\":12},{\"type\":\"hover\",\"text\":\"import cKzg\",\"start\":152,\"length\":4,\"target\":\"cKzg\",\"line\":4,\"character\":21},{\"type\":\"hover\",\"text\":\"(alias) const mainnetTrustedSetupPath: string\\nimport mainnetTrustedSetupPath\",\"start\":158,\"length\":23,\"target\":\"mainnetTrustedSetupPath\",\"line\":4,\"character\":27},{\"type\":\"hover\",\"text\":\"const sidecars: BlobSidecars<`0x${string}`>\",\"start\":207,\"length\":8,\"target\":\"sidecars\",\"line\":6,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toBlobSidecars<\\\"0x...\\\", undefined, \\\"hex\\\">(parameters: ToBlobSidecarsParameters<\\\"0x...\\\", undefined, \\\"hex\\\", never>): BlobSidecars<`0x${string}`>\\nimport toBlobSidecars\",\"docs\":\"Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\",\"tags\":[[\"example\",\"```ts\\nimport { toBlobSidecars, stringToHex } from 'viem'\\n\\nconst sidecars = toBlobSidecars({ data: stringToHex('hello world') })\\n```\"],[\"example\",\"```ts\\nimport {\\n  blobsToCommitments,\\n  toBlobs,\\n  blobsToProofs,\\n  toBlobSidecars,\\n  stringToHex\\n} from 'viem'\\n\\nconst blobs = toBlobs({ data: stringToHex('hello world') })\\nconst commitments = blobsToCommitments({ blobs, kzg })\\nconst proofs = blobsToProofs({ blobs, commitments, kzg })\\n\\nconst sidecars = toBlobSidecars({ blobs, commitments, proofs })\\n```\"]],\"start\":218,\"length\":14,\"target\":\"toBlobSidecars\",\"line\":6,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data: `0x${string}` | ByteArray\",\"docs\":\"Data to transform into blobs.\",\"start\":238,\"length\":4,\"target\":\"data\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) kzg: Kzg\",\"docs\":\"KZG implementation.\",\"start\":255,\"length\":3,\"target\":\"kzg\",\"line\":8,\"character\":2}],\"tags\":[]}}"
