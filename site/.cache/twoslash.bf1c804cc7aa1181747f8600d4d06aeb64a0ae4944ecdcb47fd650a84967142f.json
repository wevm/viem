"{\"value\":{\"code\":\"import { publicClient } from './client'\\n\\nconst logs = await publicClient.getLogs(publicClient, {\\n  address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\\n  event: { // [!code focus:8]\\n    name: 'Transfer', \\n    inputs: [\\n      { type: 'address', indexed: true, name: 'from' },\\n      { type: 'address', indexed: true, name: 'to' },\\n      { type: 'uint256', indexed: false, name: 'value' }\\n    ] \\n  },\\n  args: {\\n    from: '0xd8da6bf26964af9d7eed9e03e53415d37aa96045',\\n    to: '0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'\\n  },\\n  fromBlock: 16330000n,\\n  toBlock: 16330050n\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":9,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const logs: GetLogsReturnType<undefined, undefined, undefined, undefined, undefined>\",\"start\":47,\"length\":4,\"target\":\"logs\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":60,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) getLogs: <undefined, undefined, undefined, undefined, undefined>(args?: GetLogsParameters<undefined, undefined, undefined, undefined, undefined> | undefined) => Promise<GetLogsReturnType<...>>\",\"docs\":\"Returns a list of event logs matching the provided parameters.\\n\\n- Docs: https://viem.sh/docs/actions/public/getLogs\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\\n- JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\",\"tags\":[[\"param\",\"args - {@link GetLogsParameters}\"],[\"returns\",\"A list of event logs. {@link GetLogsReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbiItem } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst logs = await client.getLogs()\"]],\"start\":73,\"length\":7,\"target\":\"getLogs\",\"line\":2,\"character\":32},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":81,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) address: string\",\"start\":99,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) event: {\\n    name: string;\\n    inputs: {\\n        type: string;\\n        indexed: boolean;\\n        name: string;\\n    }[];\\n}\",\"start\":156,\"length\":5,\"target\":\"event\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":188,\"length\":4,\"target\":\"name\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) inputs: {\\n    type: string;\\n    indexed: boolean;\\n    name: string;\\n}[]\",\"start\":211,\"length\":6,\"target\":\"inputs\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":229,\"length\":4,\"target\":\"type\",\"line\":7,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":246,\"length\":7,\"target\":\"indexed\",\"line\":7,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":261,\"length\":4,\"target\":\"name\",\"line\":7,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":285,\"length\":4,\"target\":\"type\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":302,\"length\":7,\"target\":\"indexed\",\"line\":8,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":317,\"length\":4,\"target\":\"name\",\"line\":8,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":339,\"length\":4,\"target\":\"type\",\"line\":9,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":356,\"length\":7,\"target\":\"indexed\",\"line\":9,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":372,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) args: {\\n    from: string;\\n    to: string;\\n}\",\"start\":402,\"length\":4,\"target\":\"args\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: string\",\"start\":414,\"length\":4,\"target\":\"from\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":470,\"length\":2,\"target\":\"to\",\"line\":14,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) fromBlock: bigint\",\"start\":526,\"length\":9,\"target\":\"fromBlock\",\"line\":16,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) toBlock: bigint\",\"start\":550,\"length\":7,\"target\":\"toBlock\",\"line\":17,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1044]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":201,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":402,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":603,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":804,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1005,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { publicClient } from './client'\\n\\nconst logs = await publicClient.getLogs(publicClient, {\\n  address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\\n  event: { // [!code focus:8]\\n    name: 'Transfer', \\n    inputs: [\\n      { type: 'address', indexed: true, name: 'from' },\\n      { type: 'address', indexed: true, name: 'to' },\\n      { type: 'uint256', indexed: false, name: 'value' }\\n    ] \\n  },\\n  args: {\\n    from: '0xd8da6bf26964af9d7eed9e03e53415d37aa96045',\\n    to: '0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac'\\n  },\\n  fromBlock: 16330000n,\\n  toBlock: 16330050n\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":9,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const logs: GetLogsReturnType<undefined, undefined, undefined, undefined, undefined>\",\"start\":47,\"length\":4,\"target\":\"logs\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":60,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) getLogs: <undefined, undefined, undefined, undefined, undefined>(args?: GetLogsParameters<undefined, undefined, undefined, undefined, undefined> | undefined) => Promise<GetLogsReturnType<...>>\",\"docs\":\"Returns a list of event logs matching the provided parameters.\\n\\n- Docs: https://viem.sh/docs/actions/public/getLogs\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\\n- JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\",\"tags\":[[\"param\",\"args - {@link GetLogsParameters}\"],[\"returns\",\"A list of event logs. {@link GetLogsReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbiItem } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst logs = await client.getLogs()\"]],\"start\":73,\"length\":7,\"target\":\"getLogs\",\"line\":2,\"character\":32},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":81,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) address: string\",\"start\":99,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) event: {\\n    name: string;\\n    inputs: {\\n        type: string;\\n        indexed: boolean;\\n        name: string;\\n    }[];\\n}\",\"start\":156,\"length\":5,\"target\":\"event\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":188,\"length\":4,\"target\":\"name\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) inputs: {\\n    type: string;\\n    indexed: boolean;\\n    name: string;\\n}[]\",\"start\":211,\"length\":6,\"target\":\"inputs\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":229,\"length\":4,\"target\":\"type\",\"line\":7,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":246,\"length\":7,\"target\":\"indexed\",\"line\":7,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":261,\"length\":4,\"target\":\"name\",\"line\":7,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":285,\"length\":4,\"target\":\"type\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":302,\"length\":7,\"target\":\"indexed\",\"line\":8,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":317,\"length\":4,\"target\":\"name\",\"line\":8,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":339,\"length\":4,\"target\":\"type\",\"line\":9,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":356,\"length\":7,\"target\":\"indexed\",\"line\":9,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":372,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) args: {\\n    from: string;\\n    to: string;\\n}\",\"start\":402,\"length\":4,\"target\":\"args\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: string\",\"start\":414,\"length\":4,\"target\":\"from\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":470,\"length\":2,\"target\":\"to\",\"line\":14,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) fromBlock: bigint\",\"start\":526,\"length\":9,\"target\":\"fromBlock\",\"line\":16,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) toBlock: bigint\",\"start\":550,\"length\":7,\"target\":\"toBlock\",\"line\":17,\"character\":2}],\"tags\":[]}}"
