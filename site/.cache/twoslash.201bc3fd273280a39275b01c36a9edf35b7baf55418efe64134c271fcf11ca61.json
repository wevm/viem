"{\"value\":{\"code\":\"import { paymasterClient } from './config'\\n\\nconst paymasterArgs = await paymasterClient.getPaymasterData({\\n  callData: '0xb61d27f600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000',\\n  callGasLimit: 69420n,\\n  factory: '0xfb6dab6200b8958c2655c3747708f82243d3f32e',\\n  factoryData: '0xf14ddffc000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb922660000000000000000000000000000000000000000000000000000000000000000',\\n  maxFeePerGas: 14510554812n,\\n  maxPriorityFeePerGas: 2000000000n,\\n  nonce: 0n,\\n  preVerificationGas: 69420n, // [!code focus]\\n  sender: '0xE911628bF8428C23f179a07b081325cAe376DE1f',\\n  signature: '0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c'\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport paymasterClient\",\"start\":9,\"length\":15,\"target\":\"paymasterClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const paymasterArgs: GetPaymasterDataReturnType\",\"start\":50,\"length\":13,\"target\":\"paymasterArgs\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport paymasterClient\",\"start\":72,\"length\":15,\"target\":\"paymasterClient\",\"line\":2,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) getPaymasterData: (parameters: GetPaymasterDataParameters) => Promise<GetPaymasterDataReturnType>\",\"docs\":\"Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\\n\\n- Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link GetPaymasterDataParameters}\"],[\"returns\",\"Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\\n\\nconst userOperation = { ... }\\n\\nconst values = await paymasterClient.getPaymasterData({\\n  chainId: 1,\\n  entryPointAddress: '0x...',\\n  ...userOperation,\\n})\"]],\"start\":88,\"length\":16,\"target\":\"getPaymasterData\",\"line\":2,\"character\":44},{\"type\":\"hover\",\"text\":\"(property) callData: `0x${string}`\",\"docs\":\"The data to pass to the `sender` during the main execution call.\",\"start\":109,\"length\":8,\"target\":\"callData\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) callGasLimit?: bigint | undefined\",\"docs\":\"The amount of gas to allocate the main execution call\",\"start\":391,\"length\":12,\"target\":\"callGasLimit\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) factory?: `0x${string}` | undefined\",\"docs\":\"Account factory. Only for new accounts.\",\"start\":415,\"length\":7,\"target\":\"factory\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) factoryData?: `0x${string}` | undefined\",\"docs\":\"Data for account factory.\",\"start\":472,\"length\":11,\"target\":\"factoryData\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas?: bigint | undefined\",\"docs\":\"Maximum fee per gas.\",\"start\":629,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxPriorityFeePerGas?: bigint | undefined\",\"docs\":\"Maximum priority fee per gas.\",\"start\":659,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) nonce: bigint\",\"docs\":\"Anti-replay parameter.\",\"start\":696,\"length\":5,\"target\":\"nonce\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) preVerificationGas?: bigint | undefined\",\"docs\":\"Extra gas to pay the Bundler.\",\"start\":709,\"length\":18,\"target\":\"preVerificationGas\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) sender: `0x${string}`\",\"docs\":\"The account making the operation.\",\"start\":756,\"length\":6,\"target\":\"sender\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) signature: string\",\"start\":812,\"length\":9,\"target\":\"signature\",\"line\":12,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,282]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nexport const paymasterClient = createPaymasterClient({ \\n  transport: http('https://public.pimlico.io/v2/11155111/rpc'), \\n}) \\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":243,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { paymasterClient } from './config'\\n\\nconst paymasterArgs = await paymasterClient.getPaymasterData({\\n  callData: '0xb61d27f600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000',\\n  callGasLimit: 69420n,\\n  factory: '0xfb6dab6200b8958c2655c3747708f82243d3f32e',\\n  factoryData: '0xf14ddffc000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb922660000000000000000000000000000000000000000000000000000000000000000',\\n  maxFeePerGas: 14510554812n,\\n  maxPriorityFeePerGas: 2000000000n,\\n  nonce: 0n,\\n  preVerificationGas: 69420n, // [!code focus]\\n  sender: '0xE911628bF8428C23f179a07b081325cAe376DE1f',\\n  signature: '0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c'\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport paymasterClient\",\"start\":9,\"length\":15,\"target\":\"paymasterClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const paymasterArgs: GetPaymasterDataReturnType\",\"start\":50,\"length\":13,\"target\":\"paymasterArgs\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport paymasterClient\",\"start\":72,\"length\":15,\"target\":\"paymasterClient\",\"line\":2,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) getPaymasterData: (parameters: GetPaymasterDataParameters) => Promise<GetPaymasterDataReturnType>\",\"docs\":\"Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\\n\\n- Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link GetPaymasterDataParameters}\"],[\"returns\",\"Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\\n\\nconst userOperation = { ... }\\n\\nconst values = await paymasterClient.getPaymasterData({\\n  chainId: 1,\\n  entryPointAddress: '0x...',\\n  ...userOperation,\\n})\"]],\"start\":88,\"length\":16,\"target\":\"getPaymasterData\",\"line\":2,\"character\":44},{\"type\":\"hover\",\"text\":\"(property) callData: `0x${string}`\",\"docs\":\"The data to pass to the `sender` during the main execution call.\",\"start\":109,\"length\":8,\"target\":\"callData\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) callGasLimit?: bigint | undefined\",\"docs\":\"The amount of gas to allocate the main execution call\",\"start\":391,\"length\":12,\"target\":\"callGasLimit\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) factory?: `0x${string}` | undefined\",\"docs\":\"Account factory. Only for new accounts.\",\"start\":415,\"length\":7,\"target\":\"factory\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) factoryData?: `0x${string}` | undefined\",\"docs\":\"Data for account factory.\",\"start\":472,\"length\":11,\"target\":\"factoryData\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas?: bigint | undefined\",\"docs\":\"Maximum fee per gas.\",\"start\":629,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) maxPriorityFeePerGas?: bigint | undefined\",\"docs\":\"Maximum priority fee per gas.\",\"start\":659,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) nonce: bigint\",\"docs\":\"Anti-replay parameter.\",\"start\":696,\"length\":5,\"target\":\"nonce\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) preVerificationGas?: bigint | undefined\",\"docs\":\"Extra gas to pay the Bundler.\",\"start\":709,\"length\":18,\"target\":\"preVerificationGas\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) sender: `0x${string}`\",\"docs\":\"The account making the operation.\",\"start\":756,\"length\":6,\"target\":\"sender\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) signature: string\",\"start\":812,\"length\":9,\"target\":\"signature\",\"line\":12,\"character\":2}],\"tags\":[]}}"
