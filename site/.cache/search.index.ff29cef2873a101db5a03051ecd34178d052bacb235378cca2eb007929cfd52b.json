"{\"value\":{\"mdx\":\"# Getting Started [Get started with viem in just a few lines of code.]\\n\\n## Overview\\n\\nviem is a TypeScript interface for Ethereum that provides low-level stateless primitives for interacting with Ethereum. viem is focused on developer experience, stability, bundle size, and performance:\\n\\n- **Developer experience** Automatic [type safety and inference](/docs/typescript), comprehensive documentation, composable APIs.\\n- **Stability** Test suite runs against forked Ethereum networks, complete [test coverage](https://app.codecov.io/gh/wevm/viem).\\n- **Bundle size** Tree-shakable lightweight modules.\\n- **Performance** Optimized encoding/parsing, async tasks only when necessary.\\n\\nYou can learn more about the rationale behind the project in the [Why viem](/docs/introduction) section.\\n\\n## Installation\\n\\n:::code-group\\n\\n```bash [npm]\\nnpm i viem\\n```\\n\\n```bash [pnpm]\\npnpm i viem\\n```\\n\\n```bash [bun]\\nbun i viem\\n```\\n\\n:::\\n\\n## Quick Start\\n\\n### 1. Set up your Client & Transport\\n\\nFirstly, set up your [Client](/docs/clients/intro) with a desired [Transport](/docs/clients/intro) & [Chain](/docs/chains/introduction).\\n\\n```ts twoslash\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({ // [!code focus]\\n  chain: mainnet, // [!code focus]\\n  transport: http(), // [!code focus]\\n}) // [!code focus]\\n```\\n\\n:::info\\nIn a production app, it is highly recommended to pass through your authenticated RPC provider URL (Alchemy, Infura, Ankr, etc). If no URL is provided, viem will default to a public RPC provider. [Read more](/docs/clients/transports/http#usage).\\n:::\\n\\n### 2. Consume Actions\\n\\nNow that you have a Client set up, you can now interact with Ethereum and consume [Actions](/docs/actions/public/introduction)!\\n\\n```ts twoslash \\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst blockNumber = await client.getBlockNumber() // [!code focus]\\n```\\n\\n## Live example\\n\\n<iframe className=\\\"mt-6\\\" width=\\\"100%\\\" height=\\\"600px\\\" frameBorder=\\\"0\\\" src=\\\"https://stackblitz.com/edit/viem-getting-started?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=1&hideExplorer=1&devtoolsheight=1&ctl=1\\\"></iframe>\\n\",\"document\":[{\"href\":\"/docs/getting-started#getting-started\",\"html\":\"<div role=\\\"doc-subtitle\\\">Get started with viem in just a few lines of code.</div></header>\\n\",\"id\":\"pages/docs/getting-started.mdx#getting-started\",\"isPage\":true,\"text\":\"Get started with viem in just a few lines of code.\\n\",\"title\":\"Getting Started\",\"titles\":[]},{\"href\":\"/docs/getting-started#overview\",\"html\":\"\\n<p>viem is a TypeScript interface for Ethereum that provides low-level stateless primitives for interacting with Ethereum. viem is focused on developer experience, stability, bundle size, and performance:</p>\\n<ul>\\n<li><strong>Developer experience</strong> Automatic <a href=\\\"/docs/typescript\\\">type safety and inference</a>, comprehensive documentation, composable APIs.</li>\\n<li><strong>Stability</strong> Test suite runs against forked Ethereum networks, complete <a href=\\\"https://app.codecov.io/gh/wevm/viem\\\">test coverage</a>.</li>\\n<li><strong>Bundle size</strong> Tree-shakable lightweight modules.</li>\\n<li><strong>Performance</strong> Optimized encoding/parsing, async tasks only when necessary.</li>\\n</ul>\\n<p>You can learn more about the rationale behind the project in the <a href=\\\"/docs/introduction\\\">Why viem</a> section.</p>\\n\",\"id\":\"pages/docs/getting-started.mdx#overview\",\"isPage\":false,\"text\":\"\\nviem is a TypeScript interface for Ethereum that provides low-level stateless primitives for interacting with Ethereum. viem is focused on developer experience, stability, bundle size, and performance:\\n\\nDeveloper experience Automatic type safety and inference, comprehensive documentation, composable APIs.\\nStability Test suite runs against forked Ethereum networks, complete test coverage.\\nBundle size Tree-shakable lightweight modules.\\nPerformance Optimized encoding/parsing, async tasks only when necessary.\\n\\nYou can learn more about the rationale behind the project in the Why viem section.\\n\",\"title\":\"Overview\",\"titles\":[\"Getting Started\"]},{\"href\":\"/docs/getting-started#installation\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"npm\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"npm\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">npm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> viem</span></span></code></pre></div><div data-title=\\\"pnpm\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"pnpm\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">pnpm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> viem</span></span></code></pre></div><div data-title=\\\"bun\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"bun\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">bun</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> i</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> viem</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/getting-started.mdx#installation\",\"isPage\":false,\"text\":\"\\nnpm i viempnpm i viembun i viem\\n\",\"title\":\"Installation\",\"titles\":[\"Getting Started\"]},{\"href\":\"/docs/getting-started#quick-start\",\"html\":\"\\n\",\"id\":\"pages/docs/getting-started.mdx#quick-start\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Quick Start\",\"titles\":[\"Getting Started\"]},{\"href\":\"/docs/getting-started#1-set-up-your-client--transport\",\"html\":\"\\n<p>Firstly, set up your <a href=\\\"/docs/clients/intro\\\">Client</a> with a desired <a href=\\\"/docs/clients/intro\\\">Transport</a> &amp; <a href=\\\"/docs/chains/introduction\\\">Chain</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\\n<aside data-callout=\\\"info\\\"><p>In a production app, it is highly recommended to pass through your authenticated RPC provider URL (Alchemy, Infura, Ankr, etc). If no URL is provided, viem will default to a public RPC provider. <a href=\\\"/docs/clients/transports/http#usage\\\">Read more</a>.</p></aside>\\n\",\"id\":\"pages/docs/getting-started.mdx#1-set-up-your-client--transport\",\"isPage\":false,\"text\":\"\\nFirstly, set up your Client with a desired Transport &amp; Chain.\\nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst client = createPublicClient({ \\n  chain: mainnet, \\n  transport: http(), \\n}) \\nIn a production app, it is highly recommended to pass through your authenticated RPC provider URL (Alchemy, Infura, Ankr, etc). If no URL is provided, viem will default to a public RPC provider. Read more.\\n\",\"title\":\"1. Set up your Client &amp; Transport\",\"titles\":[\"Getting Started\",\"Quick Start\"]},{\"href\":\"/docs/getting-started#2-consume-actions\",\"html\":\"\\n<p>Now that you have a Client set up, you can now interact with Ethereum and consume <a href=\\\"/docs/actions/public/introduction\\\">Actions</a>!</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span></code></pre>\\n\",\"id\":\"pages/docs/getting-started.mdx#2-consume-actions\",\"isPage\":false,\"text\":\"\\nNow that you have a Client set up, you can now interact with Ethereum and consume Actions!\\nimport { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n \\nconst blockNumber = await client.getBlockNumber() \\n\",\"title\":\"2. Consume Actions\",\"titles\":[\"Getting Started\",\"Quick Start\"]},{\"href\":\"/docs/getting-started#live-example\",\"html\":\"\\n<iframe class=\\\"mt-6\\\" width=\\\"100%\\\" height=\\\"600px\\\" frameBorder=\\\"0\\\" src=\\\"https://stackblitz.com/edit/viem-getting-started?embed=1&amp;file=index.ts&amp;hideNavigation=1&amp;hideDevTools=true&amp;terminalHeight=1&amp;hideExplorer=1&amp;devtoolsheight=1&amp;ctl=1\\\"></iframe>\",\"id\":\"pages/docs/getting-started.mdx#live-example\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Live example\",\"titles\":[\"Getting Started\"]}]}}"
