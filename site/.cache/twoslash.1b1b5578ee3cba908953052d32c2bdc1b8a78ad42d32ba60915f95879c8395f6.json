"{\"value\":{\"code\":\"import { walletClient } from './config'\\nimport { domain, types } from './data'\\n\\nconst signature = await walletClient.signTypedData({\\n  domain,\\n  types,\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"import domain\",\"start\":49,\"length\":6,\"target\":\"domain\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"import types\",\"start\":57,\"length\":5,\"target\":\"types\",\"line\":1,\"character\":17},{\"type\":\"hover\",\"text\":\"const signature: `0x${string}`\",\"start\":86,\"length\":9,\"target\":\"signature\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":104,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTypedData: <any, \\\"Mail\\\">(args: SignTypedDataParameters<any, \\\"Mail\\\", undefined>) => Promise<SignTypedDataReturnType>\",\"docs\":\"Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message) + message))`.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTypedData\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"args - {@link SignTypedDataParameters}\"],[\"returns\",\"The signed data. {@link SignTypedDataReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst signature = await client.signTypedData({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst signature = await client.signTypedData({\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"]],\"start\":117,\"length\":13,\"target\":\"signTypedData\",\"line\":3,\"character\":37},{\"type\":\"hover\",\"text\":\"(property) domain?: any\",\"start\":135,\"length\":6,\"target\":\"domain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) types: any\",\"start\":145,\"length\":5,\"target\":\"types\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) primaryType: any\",\"start\":154,\"length\":11,\"target\":\"primaryType\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: any\",\"start\":177,\"length\":7,\"target\":\"message\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: {\\n    name: string;\\n    wallet: string;\\n}\",\"start\":192,\"length\":4,\"target\":\"from\",\"line\":8,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":206,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: string\",\"start\":225,\"length\":6,\"target\":\"wallet\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: {\\n    name: string;\\n    wallet: string;\\n}\",\"start\":290,\"length\":2,\"target\":\"to\",\"line\":12,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":302,\"length\":4,\"target\":\"name\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: string\",\"start\":321,\"length\":6,\"target\":\"wallet\",\"line\":14,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) contents: string\",\"start\":386,\"length\":8,\"target\":\"contents\",\"line\":16,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,701]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↑ JSON-RPC Account\",\"start\":556,\"end\":584},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↑ Local Account\",\"start\":636,\"end\":661}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":238,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\n\\nimport 'viem/window'\\n\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n\\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":662,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { walletClient } from './config'\\nimport { domain, types } from './data'\\n\\nconst signature = await walletClient.signTypedData({\\n  domain,\\n  types,\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"import domain\",\"start\":49,\"length\":6,\"target\":\"domain\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"import types\",\"start\":57,\"length\":5,\"target\":\"types\",\"line\":1,\"character\":17},{\"type\":\"hover\",\"text\":\"const signature: `0x${string}`\",\"start\":86,\"length\":9,\"target\":\"signature\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":104,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTypedData: <any, \\\"Mail\\\">(args: SignTypedDataParameters<any, \\\"Mail\\\", undefined>) => Promise<SignTypedDataReturnType>\",\"docs\":\"Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message) + message))`.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTypedData\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"args - {@link SignTypedDataParameters}\"],[\"returns\",\"The signed data. {@link SignTypedDataReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst signature = await client.signTypedData({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst signature = await client.signTypedData({\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"]],\"start\":117,\"length\":13,\"target\":\"signTypedData\",\"line\":3,\"character\":37},{\"type\":\"hover\",\"text\":\"(property) domain?: any\",\"start\":135,\"length\":6,\"target\":\"domain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) types: any\",\"start\":145,\"length\":5,\"target\":\"types\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) primaryType: any\",\"start\":154,\"length\":11,\"target\":\"primaryType\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: any\",\"start\":177,\"length\":7,\"target\":\"message\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: {\\n    name: string;\\n    wallet: string;\\n}\",\"start\":192,\"length\":4,\"target\":\"from\",\"line\":8,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":206,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: string\",\"start\":225,\"length\":6,\"target\":\"wallet\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: {\\n    name: string;\\n    wallet: string;\\n}\",\"start\":290,\"length\":2,\"target\":\"to\",\"line\":12,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":302,\"length\":4,\"target\":\"name\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: string\",\"start\":321,\"length\":6,\"target\":\"wallet\",\"line\":14,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) contents: string\",\"start\":386,\"length\":8,\"target\":\"contents\",\"line\":16,\"character\":4}],\"tags\":[]}}"
