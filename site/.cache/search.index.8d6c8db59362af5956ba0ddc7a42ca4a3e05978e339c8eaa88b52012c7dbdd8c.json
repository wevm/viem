"{\"value\":{\"mdx\":\"# createNonceManager [Creates a Nonce Manager for automatic nonce generation]\\n\\nCreates a new Nonce Manager instance to be used with a [Local Account](/docs/accounts/local). The Nonce Manager is used to automatically manage & generate nonces for transactions.\\n\\n:::warning\\nA Nonce Manager can only be used with [Local Accounts](/docs/accounts/local) (ie. Private Key, Mnemonic, etc). \\n\\nFor [JSON-RPC Accounts](/docs/accounts/jsonRpc) (ie. Browser Extension, WalletConnect, Backend, etc), the Wallet or Backend will manage the nonces.\\n:::\\n\\n## Import\\n\\n```ts twoslash\\nimport { createNonceManager } from 'viem/nonce'\\n```\\n\\n## Usage\\n\\nA Nonce Manager can be instantiated with the `createNonceManager` function with a provided `source`. \\n\\nThe example below demonstrates how to create a Nonce Manager with a JSON-RPC source (ie. uses `eth_getTransactionCount` as the source of truth).\\n\\n```ts twoslash\\nimport { createNonceManager, jsonRpc } from 'viem/nonce'\\n\\nconst nonceManager = createNonceManager({\\n  source: jsonRpc()\\n})\\n```\\n\\n:::tip\\nViem also exports a default `nonceManager` instance that you can use directly.\\n\\n```ts twoslash\\nimport { nonceManager } from 'viem'\\n```\\n:::\\n\\n### Integration with Local Accounts\\n\\nA `nonceManager` can be passed as an option to [Local Accounts](/docs/accounts/local) to automatically manage nonces for transactions.\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { privateKeyToAccount, nonceManager } from 'viem/accounts' // [!code focus]\\nimport { client } from './config'\\n\\nconst account = privateKeyToAccount('0x...', { nonceManager }) // [!code focus]\\n\\nconst hashes = await Promise.all([ // [!code focus]\\n// @log:   ↓ nonce = 0\\n  client.sendTransaction({ // [!code focus]\\n    account, // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('0.1'), // [!code focus]\\n  }), // [!code focus]\\n// @log:   ↓ nonce = 1\\n  client.sendTransaction({ // [!code focus]\\n    account, // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('0.2'), // [!code focus]\\n  }), // [!code focus]\\n]) // [!code focus]\\n```\\n\\n```ts twoslash [config.ts] filename=\\\"config.ts\\\"\\nimport { createWalletClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n:::\\n\\n## Return Type\\n\\n`NonceManager`\\n\\nThe Nonce Manager.\\n\\n## Parameters\\n\\n### source\\n\\n- **Type:** `NonceManagerSource`\\n\\nThe source of truth for the Nonce Manager.\\n\\nAvailable sources: \\n\\n- `jsonRpc`\\n\\n```ts twoslash\\nimport { createNonceManager, jsonRpc } from 'viem/nonce'\\n\\nconst nonceManager = createNonceManager({\\n  source: jsonRpc() // [!code focus]\\n})\\n```\",\"document\":[{\"href\":\"/docs/accounts/local/createNonceManager#createnoncemanager\",\"html\":\"<div role=\\\"doc-subtitle\\\">Creates a Nonce Manager for automatic nonce generation</div></header>\\n<p>Creates a new Nonce Manager instance to be used with a <a href=\\\"/docs/accounts/local\\\">Local Account</a>. The Nonce Manager is used to automatically manage &amp; generate nonces for transactions.</p>\\n<aside data-callout=\\\"warning\\\"><p>A Nonce Manager can only be used with <a href=\\\"/docs/accounts/local\\\">Local Accounts</a> (ie. Private Key, Mnemonic, etc).</p><p>For <a href=\\\"/docs/accounts/jsonRpc\\\">JSON-RPC Accounts</a> (ie. Browser Extension, WalletConnect, Backend, etc), the Wallet or Backend will manage the nonces.</p></aside>\\n\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#createnoncemanager\",\"isPage\":true,\"text\":\"Creates a Nonce Manager for automatic nonce generation\\nCreates a new Nonce Manager instance to be used with a Local Account. The Nonce Manager is used to automatically manage &amp; generate nonces for transactions.\\nA Nonce Manager can only be used with Local Accounts (ie. Private Key, Mnemonic, etc).For JSON-RPC Accounts (ie. Browser Extension, WalletConnect, Backend, etc), the Wallet or Backend will manage the nonces.\\n\",\"title\":\"createNonceManager\",\"titles\":[]},{\"href\":\"/docs/accounts/local/createNonceManager#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createNonceManager } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/nonce&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#import\",\"isPage\":false,\"text\":\"\\nimport { createNonceManager } from &#x27;viem/nonce&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"createNonceManager\"]},{\"href\":\"/docs/accounts/local/createNonceManager#usage\",\"html\":\"\\n<p>A Nonce Manager can be instantiated with the <code>createNonceManager</code> function with a provided <code>source</code>.</p>\\n<p>The example below demonstrates how to create a Nonce Manager with a JSON-RPC source (ie. uses <code>eth_getTransactionCount</code> as the source of truth).</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createNonceManager, jsonRpc } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/nonce&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> nonceManager</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createNonceManager</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  source: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">jsonRpc</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<aside data-callout=\\\"tip\\\"><p>Viem also exports a default <code>nonceManager</code> instance that you can use directly.</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { nonceManager } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre></aside>\\n\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#usage\",\"isPage\":false,\"text\":\"\\nA Nonce Manager can be instantiated with the createNonceManager function with a provided source.\\nThe example below demonstrates how to create a Nonce Manager with a JSON-RPC source (ie. uses eth_getTransactionCount as the source of truth).\\nimport { createNonceManager, jsonRpc } from &#x27;viem/nonce&#x27;\\n \\nconst nonceManager = createNonceManager({\\n  source: jsonRpc()\\n})\\nViem also exports a default nonceManager instance that you can use directly.import { nonceManager } from &#x27;viem&#x27;\\n\",\"title\":\"Usage\",\"titles\":[\"createNonceManager\"]},{\"href\":\"/docs/accounts/local/createNonceManager#integration-with-local-accounts\",\"html\":\"\\n<p>A <code>nonceManager</code> can be passed as an option to <a href=\\\"/docs/accounts/local\\\">Local Accounts</a> to automatically manage nonces for transactions.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount, nonceManager } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, { nonceManager }) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hashes</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">all</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:   ↓ nonce = 0</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    account, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0.1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log:   ↓ nonce = 1</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    account, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0.2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]) </span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#integration-with-local-accounts\",\"isPage\":false,\"text\":\"\\nA nonceManager can be passed as an option to Local Accounts to automatically manage nonces for transactions.\\n// @filename: config.ts\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const client = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// @filename: example.js\\n \\n// ---cut---\\nimport { privateKeyToAccount, nonceManager } from &#x27;viem/accounts&#x27;\\nimport { client } from &#x27;./config&#x27;\\n \\nconst account = privateKeyToAccount(&#x27;0x...&#x27;, { nonceManager }) \\n \\nconst hashes = await Promise.all([ \\n// @log:   ↓ nonce = 0\\n  client.sendTransaction({ \\n    account, \\n    to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;, \\n    value: parseEther(&#x27;0.1&#x27;), \\n  }), \\n// @log:   ↓ nonce = 1\\n  client.sendTransaction({ \\n    account, \\n    to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;, \\n    value: parseEther(&#x27;0.2&#x27;), \\n  }), \\n]) import { createWalletClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const client = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"title\":\"Integration with Local Accounts\",\"titles\":[\"createNonceManager\",\"Usage\"]},{\"href\":\"/docs/accounts/local/createNonceManager#return-type\",\"html\":\"\\n<p><code>NonceManager</code></p>\\n<p>The Nonce Manager.</p>\\n\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#return-type\",\"isPage\":false,\"text\":\"\\nNonceManager\\nThe Nonce Manager.\\n\",\"title\":\"Return Type\",\"titles\":[\"createNonceManager\"]},{\"href\":\"/docs/accounts/local/createNonceManager#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"createNonceManager\"]},{\"href\":\"/docs/accounts/local/createNonceManager#source\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>NonceManagerSource</code></li>\\n</ul>\\n<p>The source of truth for the Nonce Manager.</p>\\n<p>Available sources:</p>\\n<ul>\\n<li><code>jsonRpc</code></li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createNonceManager, jsonRpc } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/nonce&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> nonceManager</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createNonceManager</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  source: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">jsonRpc</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/accounts/local/createNonceManager.md#source\",\"isPage\":false,\"text\":\"\\n\\nType: NonceManagerSource\\n\\nThe source of truth for the Nonce Manager.\\nAvailable sources:\\n\\njsonRpc\\n\\nimport { createNonceManager, jsonRpc } from &#x27;viem/nonce&#x27;\\n \\nconst nonceManager = createNonceManager({\\n  source: jsonRpc() \\n})\",\"title\":\"source\",\"titles\":[\"createNonceManager\",\"Parameters\"]}]}}"
