"{\"value\":{\"code\":\"const publicClient = createPublicClient({\\n  ccipRead: { // [!code focus]\\n    async request({ data, sender, urls }) { // [!code focus]\\n      // ... // [!code focus]\\n    } // [!code focus]\\n  }, // [!code focus]\\n  chain: mainnet,\\n  transport: http(),\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":6,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":21,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) ccipRead?: false | {\\n    request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n} | undefined\",\"docs\":\"[CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\\nIf `false`, the client will not support offchain CCIP lookups.\",\"start\":44,\"length\":8,\"target\":\"ccipRead\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) request?: ((parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>) | undefined\",\"docs\":\"A function that will be called to make the offchain CCIP lookup request.\",\"tags\":[[\"see\",\"https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol\"]],\"start\":83,\"length\":7,\"target\":\"request\",\"line\":2,\"character\":10},{\"type\":\"hover\",\"text\":\"(parameter) data: `0x${string}`\",\"start\":93,\"length\":4,\"target\":\"data\",\"line\":2,\"character\":20},{\"type\":\"hover\",\"text\":\"(parameter) sender: `0x${string}`\",\"start\":99,\"length\":6,\"target\":\"sender\",\"line\":2,\"character\":26},{\"type\":\"hover\",\"text\":\"(parameter) urls: readonly string[]\",\"start\":107,\"length\":4,\"target\":\"urls\",\"line\":2,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) chain?: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | Chain | undefined\",\"docs\":\"Chain for the client.\",\"start\":211,\"length\":5,\"target\":\"chain\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":218,\"length\":7,\"target\":\"mainnet\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":229,\"length\":9,\"target\":\"transport\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":240,\"length\":4,\"target\":\"http\",\"line\":7,\"character\":13}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,112]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":0,\"end\":13}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"// @noErrors\\nimport { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n// ---cut---\\nconst publicClient = createPublicClient({\\n  ccipRead: { // [!code focus]\\n    async request({ data, sender, urls }) { // [!code focus]\\n      // ... // [!code focus]\\n    } // [!code focus]\\n  }, // [!code focus]\\n  chain: mainnet,\\n  transport: http(),\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":6,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":21,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) ccipRead?: false | {\\n    request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n} | undefined\",\"docs\":\"[CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\\nIf `false`, the client will not support offchain CCIP lookups.\",\"start\":44,\"length\":8,\"target\":\"ccipRead\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) request?: ((parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>) | undefined\",\"docs\":\"A function that will be called to make the offchain CCIP lookup request.\",\"tags\":[[\"see\",\"https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol\"]],\"start\":83,\"length\":7,\"target\":\"request\",\"line\":2,\"character\":10},{\"type\":\"hover\",\"text\":\"(parameter) data: `0x${string}`\",\"start\":93,\"length\":4,\"target\":\"data\",\"line\":2,\"character\":20},{\"type\":\"hover\",\"text\":\"(parameter) sender: `0x${string}`\",\"start\":99,\"length\":6,\"target\":\"sender\",\"line\":2,\"character\":26},{\"type\":\"hover\",\"text\":\"(parameter) urls: readonly string[]\",\"start\":107,\"length\":4,\"target\":\"urls\",\"line\":2,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) chain?: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | Chain | undefined\",\"docs\":\"Chain for the client.\",\"start\":211,\"length\":5,\"target\":\"chain\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":218,\"length\":7,\"target\":\"mainnet\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":229,\"length\":9,\"target\":\"transport\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":240,\"length\":4,\"target\":\"http\",\"line\":7,\"character\":13}],\"tags\":[]}}"
