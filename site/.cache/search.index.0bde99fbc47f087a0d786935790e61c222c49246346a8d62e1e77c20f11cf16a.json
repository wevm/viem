"{\"value\":{\"mdx\":\"---\\ndescription: Encodes deploy data (bytecode & constructor args) into an ABI encoded value.\\n---\\n\\n# encodeDeployData\\n\\nEncodes deploy data (bytecode & constructor args) into an ABI encoded value.\\n\\n## Install\\n\\n```ts\\nimport { encodeDeployData } from 'viem'\\n```\\n\\n## Usage\\n\\nBelow is a very basic example of how to encode deploy data.\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { encodeDeployData } from 'viem'\\nimport { wagmiAbi } from './abi.ts'\\n\\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: '0x608060405260405161083e38038061083e833981016040819052610...'\\n})\\n// 0x608060405260405161083e38038061083e833981016040819052610...\\n```\\n\\n```ts [abi.ts]\\nexport const wagmiAbi = [\\n  ...\\n  { \\n    inputs: [], \\n    stateMutability: 'nonpayable', \\n    type: 'constructor' \\n  },\\n  ...\\n] as const;\\n```\\n\\n:::\\n\\n### Passing Arguments\\n\\nIf your constructor requires argument(s), you can pass them through with the `args` attribute.\\n\\nTypeScript types for `args` will be inferred from the constructor & ABI, to guard you from inserting the wrong values.\\n\\nFor example, the `constructor` below requires an **address** argument, and it is typed as `[\\\"0x${string}\\\"]`.\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { encodeDeployData } from 'viem'\\nimport { wagmiAbi } from './abi'\\n\\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\\n  args: ['0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC']\\n})\\n// 0x608060405260405161083e38038061083e833981016040819052610...00000000000000000000000000000000a5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\n```\\n\\n```ts [abi.ts]\\nexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [{ name: 'owner', type: 'address' }],\\n    stateMutability: 'nonpayable',\\n    type: 'constructor',\\n  },\\n  ...\\n] as const;\\n```\\n\\n:::\\n\\n## Return Value\\n\\n[`Hex`](/docs/glossary/types#hex)\\n\\nABI encoded data (bytecode & constructor arguments).\\n\\n## Parameters\\n\\n### abi\\n\\n- **Type:** [`Abi`](/docs/glossary/types#abi)\\n\\nThe contract's ABI.\\n\\n```ts\\nconst data = encodeDeployData({\\n  abi: wagmiAbi, // [!code focus]\\n  bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\\n  args: ['0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC']\\n})\\n```\\n\\n### bytecode\\n\\n- **Type:** [`Hex`](/docs/glossary/types#hex)\\n\\nContract bytecode.\\n\\n```ts\\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: '0x608060405260405161083e38038061083e833981016040819052610...', // [!code focus]\\n  args: ['0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC']\\n})\\n```\\n\\n### args (optional)\\n\\n- **Type:** Inferred from ABI.\\n\\nArguments to pass to function call.\\n\\n```ts\\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\\n  args: ['0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC'] // [!code focus]\\n})\\n```\\n\",\"document\":[{\"href\":\"/docs/contract/encodeDeployData#encodedeploydata\",\"html\":\"</header>\\n<p>Encodes deploy data (bytecode &amp; constructor args) into an ABI encoded value.</p>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#encodedeploydata\",\"isPage\":true,\"text\":\"\\nEncodes deploy data (bytecode &amp; constructor args) into an ABI encoded value.\\n\",\"title\":\"encodeDeployData\",\"titles\":[]},{\"href\":\"/docs/contract/encodeDeployData#install\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeDeployData } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#install\",\"isPage\":false,\"text\":\"\\nimport { encodeDeployData } from &#x27;viem&#x27;\\n\",\"title\":\"Install\",\"titles\":[\"encodeDeployData\"]},{\"href\":\"/docs/contract/encodeDeployData#usage\",\"html\":\"\\n<p>Below is a very basic example of how to encode deploy data.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeDeployData } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi.ts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeDeployData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bytecode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 0x608060405260405161083e38038061083e833981016040819052610...</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;nonpayable&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;constructor&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#usage\",\"isPage\":false,\"text\":\"\\nBelow is a very basic example of how to encode deploy data.\\nimport { encodeDeployData } from &#x27;viem&#x27;\\nimport { wagmiAbi } from &#x27;./abi.ts&#x27;\\n \\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: &#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;\\n})\\n// 0x608060405260405161083e38038061083e833981016040819052610...export const wagmiAbi = [\\n  ...\\n  { \\n    inputs: [], \\n    stateMutability: &#x27;nonpayable&#x27;, \\n    type: &#x27;constructor&#x27; \\n  },\\n  ...\\n] as const;\\n\",\"title\":\"Usage\",\"titles\":[\"encodeDeployData\"]},{\"href\":\"/docs/contract/encodeDeployData#passing-arguments\",\"html\":\"\\n<p>If your constructor requires argument(s), you can pass them through with the <code>args</code> attribute.</p>\\n<p>TypeScript types for <code>args</code> will be inferred from the constructor &amp; ABI, to guard you from inserting the wrong values.</p>\\n<p>For example, the <code>constructor</code> below requires an <strong>address</strong> argument, and it is typed as <code>[&quot;0x${string}&quot;]</code>.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeDeployData } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeDeployData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bytecode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 0x608060405260405161083e38038061083e833981016040819052610...00000000000000000000000000000000a5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;owner&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;nonpayable&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;constructor&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#passing-arguments\",\"isPage\":false,\"text\":\"\\nIf your constructor requires argument(s), you can pass them through with the args attribute.\\nTypeScript types for args will be inferred from the constructor &amp; ABI, to guard you from inserting the wrong values.\\nFor example, the constructor below requires an address argument, and it is typed as [&quot;0x${string}&quot;].\\nimport { encodeDeployData } from &#x27;viem&#x27;\\nimport { wagmiAbi } from &#x27;./abi&#x27;\\n \\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: &#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;,\\n  args: [&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;]\\n})\\n// 0x608060405260405161083e38038061083e833981016040819052610...00000000000000000000000000000000a5cc3c03994DB5b0d9A5eEdD10CabaB0813678ACexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [{ name: &#x27;owner&#x27;, type: &#x27;address&#x27; }],\\n    stateMutability: &#x27;nonpayable&#x27;,\\n    type: &#x27;constructor&#x27;,\\n  },\\n  ...\\n] as const;\\n\",\"title\":\"Passing Arguments\",\"titles\":[\"encodeDeployData\",\"Usage\"]},{\"href\":\"/docs/contract/encodeDeployData#return-value\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></p>\\n<p>ABI encoded data (bytecode &amp; constructor arguments).</p>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#return-value\",\"isPage\":false,\"text\":\"\\nHex\\nABI encoded data (bytecode &amp; constructor arguments).\\n\",\"title\":\"Return Value\",\"titles\":[\"encodeDeployData\"]},{\"href\":\"/docs/contract/encodeDeployData#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"encodeDeployData\"]},{\"href\":\"/docs/contract/encodeDeployData#abi\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#abi\\\"><code>Abi</code></a></li>\\n</ul>\\n<p>The contract&#x27;s ABI.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeDeployData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bytecode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#abi\",\"isPage\":false,\"text\":\"\\n\\nType: Abi\\n\\nThe contract&#x27;s ABI.\\nconst data = encodeDeployData({\\n  abi: wagmiAbi, \\n  bytecode: &#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;,\\n  args: [&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;]\\n})\\n\",\"title\":\"abi\",\"titles\":[\"encodeDeployData\",\"Parameters\"]},{\"href\":\"/docs/contract/encodeDeployData#bytecode\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></li>\\n</ul>\\n<p>Contract bytecode.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeDeployData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bytecode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/encodeDeployData.md#bytecode\",\"isPage\":false,\"text\":\"\\n\\nType: Hex\\n\\nContract bytecode.\\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: &#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;, \\n  args: [&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;]\\n})\\n\",\"title\":\"bytecode\",\"titles\":[\"encodeDeployData\",\"Parameters\"]},{\"href\":\"/docs/contract/encodeDeployData#args-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> Inferred from ABI.</li>\\n</ul>\\n<p>Arguments to pass to function call.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> data</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeDeployData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  bytecode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/contract/encodeDeployData.md#args-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Inferred from ABI.\\n\\nArguments to pass to function call.\\nconst data = encodeDeployData({\\n  abi: wagmiAbi,\\n  bytecode: &#x27;0x608060405260405161083e38038061083e833981016040819052610...&#x27;,\\n  args: [&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;] \\n})\",\"title\":\"args (optional)\",\"titles\":[\"encodeDeployData\",\"Parameters\"]}]}}"
