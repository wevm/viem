"{\"value\":{\"mdx\":\"# Extending Client with EIP-7702 [Setting up your Viem Client]\\n\\nTo use the experimental functionality of EIP-7702, you must extend your existing (or new) Viem Client with experimental EIP-7702 Actions.\\n\\n## Overview\\n\\nHere is an end-to-end overview of how to extend a Viem Client with EIP-7702 Actions. We will break it down into Steps below.\\n\\n```ts twoslash\\n// @noErrors\\nimport { createWalletClient, http } from 'viem'\\nimport { anvil } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n \\nconst authorization = await walletClient.signAuthorization({/* ... */})\\n```\\n\\n:::warning\\nEIP-7702 is currently not supported on Ethereum Mainnet or Testnets. For this example, we are using the `anvil` chain which interfaces with an [Anvil node](https://book.getfoundry.sh/anvil/) (a local Ethereum network).\\n:::\\n\\n## Steps\\n\\n### 0. Install & Run Anvil\\n\\nEIP-7702 is currently not supported on Ethereum Mainnet or Testnets, so let's set up an EIP-7702 compatible network. We will use an [Anvil node](https://book.getfoundry.sh/anvil/) for this example. If you are using an existing EIP-7702 compatible network, you can skip this step.\\n\\n```bash\\ncurl -L https://foundry.paradigm.xyz | bash\\nanvil --hardfork prague\\n```\\n\\n### 1. Set up a Client\\n\\nWe will need to set up a Client to sign EIP-7702 Authorizations.\\n\\n```ts twoslash\\nimport { createWalletClient, http } from 'viem'\\nimport { anvil } from 'viem/chains'\\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n})\\n```\\n\\n[See `createWalletClient` Docs](/docs/clients/wallet)\\n\\n### 2. Extend with EIP-7702 Actions\\n\\nNext, we will import the experimental EIP-7702 Actions and extend them on our Client.\\n\\n```ts twoslash\\nimport { createWalletClient, http } from 'viem'\\nimport { anvil } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental' // [!code focus]\\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions()) // [!code focus]\\n```\\n\\n### 3. Use EIP-7702 Actions\\n\\nNow we can use EIP-7702 Actions like [`signAuthorization`](/experimental/eip7702/signAuthorization).\\n\\n```ts twoslash\\n// @noErrors\\nimport { createWalletClient, http } from 'viem'\\nimport { anvil } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental' \\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions()) \\n\\nconst authorization = await walletClient.signAuthorization({/* ... */}) // [!code focus]\\n```\",\"document\":[{\"href\":\"/experimental/eip7702/client#extending-client-with-eip-7702\",\"html\":\"<div role=\\\"doc-subtitle\\\">Setting up your Viem Client</div></header>\\n<p>To use the experimental functionality of EIP-7702, you must extend your existing (or new) Viem Client with experimental EIP-7702 Actions.</p>\\n\",\"id\":\"pages/experimental/eip7702/client.md#extending-client-with-eip-7702\",\"isPage\":true,\"text\":\"Setting up your Viem Client\\nTo use the experimental functionality of EIP-7702, you must extend your existing (or new) Viem Client with experimental EIP-7702 Actions.\\n\",\"title\":\"Extending Client with EIP-7702\",\"titles\":[]},{\"href\":\"/experimental/eip7702/client#overview\",\"html\":\"\\n<p>Here is an end-to-end overview of how to extend a Viem Client with EIP-7702 Actions. We will break it down into Steps below.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { anvil } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip7702Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: anvil,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip7702Actions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> authorization</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signAuthorization</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<aside data-callout=\\\"warning\\\"><p>EIP-7702 is currently not supported on Ethereum Mainnet or Testnets. For this example, we are using the <code>anvil</code> chain which interfaces with an <a href=\\\"https://book.getfoundry.sh/anvil/\\\">Anvil node</a> (a local Ethereum network).</p></aside>\\n\",\"id\":\"pages/experimental/eip7702/client.md#overview\",\"isPage\":false,\"text\":\"\\nHere is an end-to-end overview of how to extend a Viem Client with EIP-7702 Actions. We will break it down into Steps below.\\n// @noErrors\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { anvil } from &#x27;viem/chains&#x27;\\nimport { eip7702Actions } from &#x27;viem/experimental&#x27;\\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n \\nconst authorization = await walletClient.signAuthorization({/* ... */})\\nEIP-7702 is currently not supported on Ethereum Mainnet or Testnets. For this example, we are using the anvil chain which interfaces with an Anvil node (a local Ethereum network).\\n\",\"title\":\"Overview\",\"titles\":[\"Extending Client with EIP-7702\"]},{\"href\":\"/experimental/eip7702/client#steps\",\"html\":\"\\n\",\"id\":\"pages/experimental/eip7702/client.md#steps\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Steps\",\"titles\":[\"Extending Client with EIP-7702\"]},{\"href\":\"/experimental/eip7702/client#0-install--run-anvil\",\"html\":\"\\n<p>EIP-7702 is currently not supported on Ethereum Mainnet or Testnets, so let&#x27;s set up an EIP-7702 compatible network. We will use an <a href=\\\"https://book.getfoundry.sh/anvil/\\\">Anvil node</a> for this example. If you are using an existing EIP-7702 compatible network, you can skip this step.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">curl</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -L</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> https://foundry.paradigm.xyz</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> |</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> bash</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">anvil</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> --hardfork</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> prague</span></span></code></pre>\\n\",\"id\":\"pages/experimental/eip7702/client.md#0-install--run-anvil\",\"isPage\":false,\"text\":\"\\nEIP-7702 is currently not supported on Ethereum Mainnet or Testnets, so let&#x27;s set up an EIP-7702 compatible network. We will use an Anvil node for this example. If you are using an existing EIP-7702 compatible network, you can skip this step.\\ncurl -L https://foundry.paradigm.xyz | bash\\nanvil --hardfork prague\\n\",\"title\":\"0. Install &amp; Run Anvil\",\"titles\":[\"Extending Client with EIP-7702\",\"Steps\"]},{\"href\":\"/experimental/eip7702/client#1-set-up-a-client\",\"html\":\"\\n<p>We will need to set up a Client to sign EIP-7702 Authorizations.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { anvil } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: anvil,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p><a href=\\\"/docs/clients/wallet\\\">See <code>createWalletClient</code> Docs</a></p>\\n\",\"id\":\"pages/experimental/eip7702/client.md#1-set-up-a-client\",\"isPage\":false,\"text\":\"\\nWe will need to set up a Client to sign EIP-7702 Authorizations.\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { anvil } from &#x27;viem/chains&#x27;\\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n})\\nSee createWalletClient Docs\\n\",\"title\":\"1. Set up a Client\",\"titles\":[\"Extending Client with EIP-7702\",\"Steps\"]},{\"href\":\"/experimental/eip7702/client#2-extend-with-eip-7702-actions\",\"html\":\"\\n<p>Next, we will import the experimental EIP-7702 Actions and extend them on our Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { anvil } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip7702Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: anvil,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip7702Actions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()) </span></span></code></pre>\\n\",\"id\":\"pages/experimental/eip7702/client.md#2-extend-with-eip-7702-actions\",\"isPage\":false,\"text\":\"\\nNext, we will import the experimental EIP-7702 Actions and extend them on our Client.\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { anvil } from &#x27;viem/chains&#x27;\\nimport { eip7702Actions } from &#x27;viem/experimental&#x27;\\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions()) \\n\",\"title\":\"2. Extend with EIP-7702 Actions\",\"titles\":[\"Extending Client with EIP-7702\",\"Steps\"]},{\"href\":\"/experimental/eip7702/client#3-use-eip-7702-actions\",\"html\":\"\\n<p>Now we can use EIP-7702 Actions like <a href=\\\"/experimental/eip7702/signAuthorization\\\"><code>signAuthorization</code></a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { anvil } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip7702Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: anvil,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip7702Actions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> authorization</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signAuthorization</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* ... */</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\",\"id\":\"pages/experimental/eip7702/client.md#3-use-eip-7702-actions\",\"isPage\":false,\"text\":\"\\nNow we can use EIP-7702 Actions like signAuthorization.\\n// @noErrors\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { anvil } from &#x27;viem/chains&#x27;\\nimport { eip7702Actions } from &#x27;viem/experimental&#x27; \\n \\nconst walletClient = createWalletClient({\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions()) \\n \\nconst authorization = await walletClient.signAuthorization({/* ... */}) \",\"title\":\"3. Use EIP-7702 Actions\",\"titles\":[\"Extending Client with EIP-7702\",\"Steps\"]}]}}"
