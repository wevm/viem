"{\"value\":{\"code\":\"import { createWalletClient, http } from 'viem'\\nimport { HDKey, hdKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst hdKey = HDKey.fromMasterSeed(...) // [!code focus:3]\\nconst hdKey = HDKey.fromExtendedKey(...)\\nconst hdKey = HDKey.fromJSON({ xpriv: ... })\\n\\nconst account = hdKeyToAccount(hdKey) // [!code focus]\\n\\nconst client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http(),\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createWalletClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createWalletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":29,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":57,\"length\":5,\"target\":\"HDKey\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function hdKeyToAccount(hdKey_: HDKey, { accountIndex, addressIndex, changeIndex, path, ...options }?: HDKeyToAccountOptions): HDAccount\\nimport hdKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a HD Key.\"],[\"returns\",\"A HD Account.\"]],\"start\":64,\"length\":14,\"target\":\"hdKeyToAccount\",\"line\":1,\"character\":16},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":111,\"length\":7,\"target\":\"mainnet\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":147,\"length\":5,\"target\":\"hdKey\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":155,\"length\":5,\"target\":\"HDKey\",\"line\":4,\"character\":14},{\"type\":\"hover\",\"text\":\"(method) HDKey.fromMasterSeed(seed: Uint8Array, versions?: Versions): HDKey\",\"start\":161,\"length\":14,\"target\":\"fromMasterSeed\",\"line\":4,\"character\":20},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":206,\"length\":5,\"target\":\"hdKey\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":214,\"length\":5,\"target\":\"HDKey\",\"line\":5,\"character\":14},{\"type\":\"hover\",\"text\":\"(method) HDKey.fromExtendedKey(base58key: string, versions?: Versions): HDKey\",\"start\":220,\"length\":15,\"target\":\"fromExtendedKey\",\"line\":5,\"character\":20},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":247,\"length\":5,\"target\":\"hdKey\",\"line\":6,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":255,\"length\":5,\"target\":\"HDKey\",\"line\":6,\"character\":14},{\"type\":\"hover\",\"text\":\"(method) HDKey.fromJSON(json: {\\n    xpriv: string;\\n}): HDKey\",\"start\":261,\"length\":8,\"target\":\"fromJSON\",\"line\":6,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) xpriv: string\",\"start\":272,\"length\":5,\"target\":\"xpriv\",\"line\":6,\"character\":31},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 7 more ...;\\n    getHdKey: () => HDKey;\\n}\",\"start\":293,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) hdKeyToAccount(hdKey_: HDKey, { accountIndex, addressIndex, changeIndex, path, ...options }?: HDKeyToAccountOptions): HDAccount\\nimport hdKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a HD Key.\"],[\"returns\",\"A HD Account.\"]],\"start\":303,\"length\":14,\"target\":\"hdKeyToAccount\",\"line\":8,\"character\":16},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":318,\"length\":5,\"target\":\"hdKey\",\"line\":8,\"character\":31},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 7 more ...;\\n        getHdKey: () => HDKey;\\n    };\\n    ... 27 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":349,\"length\":6,\"target\":\"client\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":358,\"length\":18,\"target\":\"createWalletClient\",\"line\":10,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 7 more ...;\\n    getHdKey: () => HDKey;\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":381,\"length\":7,\"target\":\"account\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":392,\"length\":5,\"target\":\"chain\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":399,\"length\":7,\"target\":\"mainnet\",\"line\":12,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":410,\"length\":9,\"target\":\"transport\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":421,\"length\":4,\"target\":\"http\",\"line\":13,\"character\":13}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,13]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":0,\"end\":13}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"// @noErrors\\nimport { createWalletClient, http } from 'viem'\\nimport { HDKey, hdKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst hdKey = HDKey.fromMasterSeed(...) // [!code focus:3]\\nconst hdKey = HDKey.fromExtendedKey(...)\\nconst hdKey = HDKey.fromJSON({ xpriv: ... })\\n\\nconst account = hdKeyToAccount(hdKey) // [!code focus]\\n\\nconst client = createWalletClient({\\n  account,\\n  chain: mainnet,\\n  transport: http(),\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createWalletClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createWalletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":29,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":57,\"length\":5,\"target\":\"HDKey\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function hdKeyToAccount(hdKey_: HDKey, { accountIndex, addressIndex, changeIndex, path, ...options }?: HDKeyToAccountOptions): HDAccount\\nimport hdKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a HD Key.\"],[\"returns\",\"A HD Account.\"]],\"start\":64,\"length\":14,\"target\":\"hdKeyToAccount\",\"line\":1,\"character\":16},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":111,\"length\":7,\"target\":\"mainnet\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":147,\"length\":5,\"target\":\"hdKey\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":155,\"length\":5,\"target\":\"HDKey\",\"line\":4,\"character\":14},{\"type\":\"hover\",\"text\":\"(method) HDKey.fromMasterSeed(seed: Uint8Array, versions?: Versions): HDKey\",\"start\":161,\"length\":14,\"target\":\"fromMasterSeed\",\"line\":4,\"character\":20},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":206,\"length\":5,\"target\":\"hdKey\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":214,\"length\":5,\"target\":\"HDKey\",\"line\":5,\"character\":14},{\"type\":\"hover\",\"text\":\"(method) HDKey.fromExtendedKey(base58key: string, versions?: Versions): HDKey\",\"start\":220,\"length\":15,\"target\":\"fromExtendedKey\",\"line\":5,\"character\":20},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":247,\"length\":5,\"target\":\"hdKey\",\"line\":6,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) class HDKey\\nimport HDKey\",\"start\":255,\"length\":5,\"target\":\"HDKey\",\"line\":6,\"character\":14},{\"type\":\"hover\",\"text\":\"(method) HDKey.fromJSON(json: {\\n    xpriv: string;\\n}): HDKey\",\"start\":261,\"length\":8,\"target\":\"fromJSON\",\"line\":6,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) xpriv: string\",\"start\":272,\"length\":5,\"target\":\"xpriv\",\"line\":6,\"character\":31},{\"type\":\"hover\",\"text\":\"const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 7 more ...;\\n    getHdKey: () => HDKey;\\n}\",\"start\":293,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) hdKeyToAccount(hdKey_: HDKey, { accountIndex, addressIndex, changeIndex, path, ...options }?: HDKeyToAccountOptions): HDAccount\\nimport hdKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a HD Key.\"],[\"returns\",\"A HD Account.\"]],\"start\":303,\"length\":14,\"target\":\"hdKeyToAccount\",\"line\":8,\"character\":16},{\"type\":\"hover\",\"text\":\"const hdKey: HDKey\",\"start\":318,\"length\":5,\"target\":\"hdKey\",\"line\":8,\"character\":31},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 7 more ...;\\n        getHdKey: () => HDKey;\\n    };\\n    ... 27 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":349,\"length\":6,\"target\":\"client\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":358,\"length\":18,\"target\":\"createWalletClient\",\"line\":10,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 7 more ...;\\n    getHdKey: () => HDKey;\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":381,\"length\":7,\"target\":\"account\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":392,\"length\":5,\"target\":\"chain\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":399,\"length\":7,\"target\":\"mainnet\",\"line\":12,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":410,\"length\":9,\"target\":\"transport\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":421,\"length\":4,\"target\":\"http\",\"line\":13,\"character\":13}],\"tags\":[]}}"
