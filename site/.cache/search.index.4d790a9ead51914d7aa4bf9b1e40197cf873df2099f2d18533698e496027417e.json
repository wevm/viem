"{\"value\":{\"mdx\":\"---\\ndescription: Watches and returns emitted contract event logs.\\n---\\n\\n# watchContractEvent\\n\\nWatches and returns emitted contract event logs.\\n\\nThis Action will batch up all the event logs found within the [`pollingInterval`](#pollinginterval-optional), and invoke them via [`onLogs`](#onlogs).\\n\\n`watchContractEvent` will attempt to create an [Event Filter](/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (ie. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](/docs/actions/public/getLogs) instead.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { publicClient } from './client'\\nimport { wagmiAbi } from './abi'\\n\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  onLogs: logs => console.log(logs)\\n})\\n// > [{ ... }, { ... }, { ... }]\\n// > [{ ... }, { ... }]\\n// > [{ ... }, { ... }, { ... }, { ... }]\\n```\\n\\n```ts [client.ts]\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n### Scoping to an Event Name\\n\\nYou can scope to an event on the given ABI.\\n\\n:::code-group\\n\\n```ts [example.ts] {8}\\nimport { publicClient } from './client'\\nimport { wagmiAbi } from './abi'\\n\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  eventName: 'Transfer',\\n  onLogs: logs => console.log(logs)\\n})\\n// > [{ ... }, { ... }, { ... }]\\n// > [{ ... }, { ... }]\\n// > [{ ... }, { ... }, { ... }, { ... }]\\n```\\n\\n```ts [abi.ts]\\nexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [\\n      {\\n        indexed: true,\\n        name: \\\"from\\\",\\n        type: \\\"address\\\",\\n      },\\n      { indexed: true, name: \\\"to\\\", type: \\\"address\\\" },\\n      {\\n        indexed: true,\\n        name: \\\"tokenId\\\",\\n        type: \\\"uint256\\\",\\n      },\\n    ],\\n    name: \\\"Transfer\\\",\\n    type: \\\"event\\\",\\n  },\\n  ...\\n] as const;\\n```\\n\\n```ts [client.ts]\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n### Scoping to Event Arguments\\n\\nYou can scope to given **indexed event arguments**.\\n\\nIn the example below, we want to filter out `Transfer`s that were sent by the address `\\\"0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b\\\"`.\\n\\n> Only **`indexed`** arguments on the event ABI are candidates for `args` (see `abi.ts`).\\n\\n:::code-group\\n\\n```ts [example.ts] {8-9}\\nimport { publicClient } from './client'\\nimport { wagmiAbi } from './abi'\\n\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  eventName: 'Transfer',\\n  args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\\n  onLogs: logs => console.log(logs)\\n})\\n// > [{ ... }, { ... }, { ... }]\\n// > [{ ... }, { ... }]\\n// > [{ ... }, { ... }, { ... }, { ... }]\\n```\\n\\n```ts [abi.ts] {6-8}\\nexport const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [\\n      {\\n        indexed: true,\\n        name: \\\"from\\\",\\n        type: \\\"address\\\",\\n      },\\n      { \\n        indexed: true, \\n        name: \\\"to\\\", \\n        type: \\\"address\\\" \\n      },\\n      {\\n        indexed: false,\\n        name: \\\"tokenId\\\",\\n        type: \\\"uint256\\\",\\n      },\\n    ],\\n    name: \\\"Transfer\\\",\\n    type: \\\"event\\\",\\n  },\\n  ...\\n] as const;\\n```\\n\\n```ts [client.ts]\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n## Returns\\n\\n`UnwatchFn`\\n\\nA function that can be invoked to stop watching for new event logs.\\n\\n## Arguments\\n\\n### abi\\n\\n- **Type:** [`Abi`](/docs/glossary/types#abi)\\n\\nThe contract's ABI.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi, // [!code focus]\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### onLogs\\n\\n- **Type:** `(Log[]) => void`\\n\\nThe new event logs.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  onLogs: logs => console.log(logs) // [!code focus]\\n})\\n```\\n\\n### address (optional)\\n\\n- **Type:** [`Address`](/docs/glossary/types#address)\\n\\nThe contract address. If no address is provided, then it will emit all events matching the event signatures on the ABI.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2', // [!code focus]\\n  abi: wagmiAbi,\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### args (optional)\\n\\n- **Type:** Inferred from ABI.\\n\\nEvent arguments to filter logs.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  eventName: 'Transfer', // [!code focus]\\n  args: ['0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b'], // [!code focus]\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### eventName (optional)\\n\\n- **Type:** `string`\\n\\nAn event name to filter logs.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  eventName: 'Transfer', // [!code focus]\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### batch (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `true`\\n\\nWhether or not to batch logs between polling intervals.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  batch: false, // [!code focus]\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### onError (optional)\\n\\n- **Type:** `(error: Error) => void`\\n\\nError thrown from listening for new event logs.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  onError: error => console.log(error), // [!code focus]\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### poll (optional)\\n\\n- **Type:** `boolean`\\n- **Default:** `false` for WebSocket Clients, `true` for non-WebSocket Clients\\n\\nWhether or not to use a polling mechanism to check for new logs instead of a WebSocket subscription.\\n\\nThis option is only configurable for Clients with a [WebSocket Transport](/docs/clients/transports/websocket).\\n\\n```ts\\nimport { createPublicClient, webSocket } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: webSocket()\\n})\\n\\nconst unwatch = publicClient.watchContractEvent(\\n  { \\n    address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n    abi: wagmiAbi,\\n    poll: true, // [!code focus]\\n  }\\n)\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n\\nPolling frequency (in ms). Defaults to the Client's `pollingInterval` config.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  pollingInterval: 1_000, // [!code focus]\\n  onLogs: logs => console.log(logs)\\n})\\n```\\n\\n### fromBlock (optional)\\n\\n- **Type:** `bigint`\\n\\nThe block number to start listening for logs from.\\n\\n```ts\\nconst unwatch = publicClient.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: wagmiAbi,\\n  onLogs: logs => console.log(logs),\\n  fromBlock: 1n // [!code focus]\\n})\\n```\\n\\n## JSON-RPC Methods\\n\\n**When poll `true` and RPC Provider supports `eth_newFilter`:**\\n\\n- Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\\n- On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\\n\\n**When poll `true` RPC Provider does not support `eth_newFilter`:**\\n\\n- Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\\n\\n**When poll `false` and WebSocket Transport:**\\n\\n- Uses a WebSocket subscription via `eth_subscribe` and the \\\"logs\\\" event.\\n\",\"document\":[{\"href\":\"/docs/contract/watchContractEvent#watchcontractevent\",\"html\":\"</header>\\n<p>Watches and returns emitted contract event logs.</p>\\n<p>This Action will batch up all the event logs found within the <a href=\\\"#pollinginterval-optional\\\"><code>pollingInterval</code></a>, and invoke them via <a href=\\\"#onlogs\\\"><code>onLogs</code></a>.</p>\\n<p><code>watchContractEvent</code> will attempt to create an <a href=\\\"/docs/contract/createContractEventFilter\\\">Event Filter</a> and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (ie. <code>eth_newFilter</code>), then <code>watchContractEvent</code> will fall back to using <a href=\\\"/docs/actions/public/getLogs\\\"><code>getLogs</code></a> instead.</p>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#watchcontractevent\",\"isPage\":true,\"text\":\"\\nWatches and returns emitted contract event logs.\\nThis Action will batch up all the event logs found within the pollingInterval, and invoke them via onLogs.\\nwatchContractEvent will attempt to create an Event Filter and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (ie. eth_newFilter), then watchContractEvent will fall back to using getLogs instead.\\n\",\"title\":\"watchContractEvent\",\"titles\":[]},{\"href\":\"/docs/contract/watchContractEvent#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }, { ... }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#usage\",\"isPage\":false,\"text\":\"\\nimport { publicClient } from &#x27;./client&#x27;\\nimport { wagmiAbi } from &#x27;./abi&#x27;\\n \\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  onLogs: logs =&gt; console.log(logs)\\n})\\n// &gt; [{ ... }, { ... }, { ... }]\\n// &gt; [{ ... }, { ... }]\\n// &gt; [{ ... }, { ... }, { ... }, { ... }]import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"watchContractEvent\"]},{\"href\":\"/docs/contract/watchContractEvent#scoping-to-an-event-name\",\"html\":\"\\n<p>You can scope to an event on the given ABI.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  eventName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Transfer&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }, { ... }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        indexed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;from&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;address&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { indexed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;to&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;address&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        indexed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;tokenId&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;uint256&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Transfer&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;event&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#scoping-to-an-event-name\",\"isPage\":false,\"text\":\"\\nYou can scope to an event on the given ABI.\\nimport { publicClient } from &#x27;./client&#x27;\\nimport { wagmiAbi } from &#x27;./abi&#x27;\\n \\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  eventName: &#x27;Transfer&#x27;,\\n  onLogs: logs =&gt; console.log(logs)\\n})\\n// &gt; [{ ... }, { ... }, { ... }]\\n// &gt; [{ ... }, { ... }]\\n// &gt; [{ ... }, { ... }, { ... }, { ... }]export const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [\\n      {\\n        indexed: true,\\n        name: &quot;from&quot;,\\n        type: &quot;address&quot;,\\n      },\\n      { indexed: true, name: &quot;to&quot;, type: &quot;address&quot; },\\n      {\\n        indexed: true,\\n        name: &quot;tokenId&quot;,\\n        type: &quot;uint256&quot;,\\n      },\\n    ],\\n    name: &quot;Transfer&quot;,\\n    type: &quot;event&quot;,\\n  },\\n  ...\\n] as const;import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Scoping to an Event Name\",\"titles\":[\"watchContractEvent\",\"Usage\"]},{\"href\":\"/docs/contract/watchContractEvent#scoping-to-event-arguments\",\"html\":\"\\n<p>You can scope to given <strong>indexed event arguments</strong>.</p>\\n<p>In the example below, we want to filter out <code>Transfer</code>s that were sent by the address <code>&quot;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&quot;</code>.</p>\\n<blockquote>\\n<p>Only <strong><code>indexed</code></strong> arguments on the event ABI are candidates for <code>args</code> (see <code>abi.ts</code>).</p>\\n</blockquote>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { wagmiAbi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  eventName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Transfer&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  args: { from: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }, { ... }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wagmiAbi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        indexed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;from&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;address&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        indexed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;to&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;address&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        indexed: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;tokenId&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;uint256&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Transfer&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;event&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#scoping-to-event-arguments\",\"isPage\":false,\"text\":\"\\nYou can scope to given indexed event arguments.\\nIn the example below, we want to filter out Transfers that were sent by the address &quot;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&quot;.\\n\\nOnly indexed arguments on the event ABI are candidates for args (see abi.ts).\\n\\nimport { publicClient } from &#x27;./client&#x27;\\nimport { wagmiAbi } from &#x27;./abi&#x27;\\n \\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  eventName: &#x27;Transfer&#x27;,\\n  args: { from: &#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27; },\\n  onLogs: logs =&gt; console.log(logs)\\n})\\n// &gt; [{ ... }, { ... }, { ... }]\\n// &gt; [{ ... }, { ... }]\\n// &gt; [{ ... }, { ... }, { ... }, { ... }]export const wagmiAbi = [\\n  ...\\n  {\\n    inputs: [\\n      {\\n        indexed: true,\\n        name: &quot;from&quot;,\\n        type: &quot;address&quot;,\\n      },\\n      { \\n        indexed: true, \\n        name: &quot;to&quot;, \\n        type: &quot;address&quot; \\n      },\\n      {\\n        indexed: false,\\n        name: &quot;tokenId&quot;,\\n        type: &quot;uint256&quot;,\\n      },\\n    ],\\n    name: &quot;Transfer&quot;,\\n    type: &quot;event&quot;,\\n  },\\n  ...\\n] as const;import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"title\":\"Scoping to Event Arguments\",\"titles\":[\"watchContractEvent\",\"Usage\"]},{\"href\":\"/docs/contract/watchContractEvent#returns\",\"html\":\"\\n<p><code>UnwatchFn</code></p>\\n<p>A function that can be invoked to stop watching for new event logs.</p>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#returns\",\"isPage\":false,\"text\":\"\\nUnwatchFn\\nA function that can be invoked to stop watching for new event logs.\\n\",\"title\":\"Returns\",\"titles\":[\"watchContractEvent\"]},{\"href\":\"/docs/contract/watchContractEvent#arguments\",\"html\":\"\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#arguments\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Arguments\",\"titles\":[\"watchContractEvent\"]},{\"href\":\"/docs/contract/watchContractEvent#abi\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#abi\\\"><code>Abi</code></a></li>\\n</ul>\\n<p>The contract&#x27;s ABI.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#abi\",\"isPage\":false,\"text\":\"\\n\\nType: Abi\\n\\nThe contract&#x27;s ABI.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi, \\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"abi\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#onlogs\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(Log[]) =&gt; void</code></li>\\n</ul>\\n<p>The new event logs.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#onlogs\",\"isPage\":false,\"text\":\"\\n\\nType: (Log[]) =&gt; void\\n\\nThe new event logs.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  onLogs: logs =&gt; console.log(logs) \\n})\\n\",\"title\":\"onLogs\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#address-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#address\\\"><code>Address</code></a></li>\\n</ul>\\n<p>The contract address. If no address is provided, then it will emit all events matching the event signatures on the ABI.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#address-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\n\\nThe contract address. If no address is provided, then it will emit all events matching the event signatures on the ABI.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;, \\n  abi: wagmiAbi,\\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"address (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#args-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> Inferred from ABI.</li>\\n</ul>\\n<p>Event arguments to filter logs.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  eventName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Transfer&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#args-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Inferred from ABI.\\n\\nEvent arguments to filter logs.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  eventName: &#x27;Transfer&#x27;, \\n  args: [&#x27;0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b&#x27;], \\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"args (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#eventname-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n</ul>\\n<p>An event name to filter logs.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  eventName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Transfer&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#eventname-optional\",\"isPage\":false,\"text\":\"\\n\\nType: string\\n\\nAn event name to filter logs.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  eventName: &#x27;Transfer&#x27;, \\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"eventName (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#batch-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>true</code></li>\\n</ul>\\n<p>Whether or not to batch logs between polling intervals.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  batch: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#batch-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: true\\n\\nWhether or not to batch logs between polling intervals.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  batch: false, \\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"batch (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#onerror-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(error: Error) =&gt; void</code></li>\\n</ul>\\n<p>Error thrown from listening for new event logs.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onError</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">error</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(error), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#onerror-optional\",\"isPage\":false,\"text\":\"\\n\\nType: (error: Error) =&gt; void\\n\\nError thrown from listening for new event logs.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  onError: error =&gt; console.log(error), \\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"onError (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#poll-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>boolean</code></li>\\n<li><strong>Default:</strong> <code>false</code> for WebSocket Clients, <code>true</code> for non-WebSocket Clients</li>\\n</ul>\\n<p>Whether or not to use a polling mechanism to check for new logs instead of a WebSocket subscription.</p>\\n<p>This option is only configurable for Clients with a <a href=\\\"/docs/clients/transports/websocket\\\">WebSocket Transport</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, webSocket } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">webSocket</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    poll: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#poll-optional\",\"isPage\":false,\"text\":\"\\n\\nType: boolean\\nDefault: false for WebSocket Clients, true for non-WebSocket Clients\\n\\nWhether or not to use a polling mechanism to check for new logs instead of a WebSocket subscription.\\nThis option is only configurable for Clients with a WebSocket Transport.\\nimport { createPublicClient, webSocket } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: webSocket()\\n})\\n \\nconst unwatch = publicClient.watchContractEvent(\\n  { \\n    address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n    abi: wagmiAbi,\\n    poll: true, \\n  }\\n)\\n\",\"title\":\"poll (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Polling frequency (in ms). Defaults to the Client&#x27;s <code>pollingInterval</code> config.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nPolling frequency (in ms). Defaults to the Client&#x27;s pollingInterval config.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  pollingInterval: 1_000, \\n  onLogs: logs =&gt; console.log(logs)\\n})\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#fromblock-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The block number to start listening for logs from.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> unwatch</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">watchContractEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi: wagmiAbi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  onLogs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">logs</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(logs),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  fromBlock: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/contract/watchContractEvent.md#fromblock-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe block number to start listening for logs from.\\nconst unwatch = publicClient.watchContractEvent({\\n  address: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;,\\n  abi: wagmiAbi,\\n  onLogs: logs =&gt; console.log(logs),\\n  fromBlock: 1n\\n})\\n\",\"title\":\"fromBlock (optional)\",\"titles\":[\"watchContractEvent\",\"Arguments\"]},{\"href\":\"/docs/contract/watchContractEvent#json-rpc-methods\",\"html\":\"\\n<strong>When poll <code>true</code> and RPC Provider supports <code>eth_newFilter</code>:</strong>\\n<ul>\\n<li>Calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter\\\"><code>eth_newFilter</code></a> to create a filter (called on initialize).</li>\\n<li>On a polling interval, it will call <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges\\\"><code>eth_getFilterChanges</code></a>.</li>\\n</ul>\\n<strong>When poll <code>true</code> RPC Provider does not support <code>eth_newFilter</code>:</strong>\\n<ul>\\n<li>Calls <a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs\\\"><code>eth_getLogs</code></a> for each block between the polling interval.</li>\\n</ul>\\n<strong>When poll <code>false</code> and WebSocket Transport:</strong>\\n<ul>\\n<li>Uses a WebSocket subscription via <code>eth_subscribe</code> and the &quot;logs&quot; event.</li>\\n</ul>\",\"id\":\"pages/docs/contract/watchContractEvent.md#json-rpc-methods\",\"isPage\":false,\"text\":\"\\nWhen poll true and RPC Provider supports eth_newFilter:\\n\\nCalls eth_newFilter to create a filter (called on initialize).\\nOn a polling interval, it will call eth_getFilterChanges.\\n\\nWhen poll true RPC Provider does not support eth_newFilter:\\n\\nCalls eth_getLogs for each block between the polling interval.\\n\\nWhen poll false and WebSocket Transport:\\n\\nUses a WebSocket subscription via eth_subscribe and the &quot;logs&quot; event.\\n\",\"title\":\"JSON-RPC Methods\",\"titles\":[\"watchContractEvent\"]}]}}"
