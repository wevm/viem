"{\"value\":{\"mdx\":\"# Chains\\n\\nThe following Viem chains are implemented on the OP Stack:\\n\\n```ts\\nimport {\\n  base, // [!code hl]\\n  baseGoerli, // [!code hl]\\n  baseSepolia, // [!code hl]\\n  fraxtal, // [!code hl]\\n  fraxtalTestnet, // [!code hl]\\n  ink, // [!code hl]\\n  inkSepolia, // [!code hl]\\n  optimism, // [!code hl]\\n  optimismGoerli, // [!code hl]\\n  optimismSepolia, // [!code hl]\\n  soneium, // [!code hl]\\n  soneiumMinato, // [!code hl]\\n  zircuit, // [!code hl]\\n  zircuitTestnet, // [!code hl]\\n  zora, // [!code hl]\\n  zoraSepolia, // [!code hl]\\n  zoraTestnet, // [!code hl]\\n} from 'viem/chains'\\n```\\n\\n## Configuration\\n\\nViem exports OP Stack's chain [formatters](/docs/chains/formatters) & [serializers](/docs/chains/serializers) via `chainConfig`. This is useful if you need to define another chain which is implemented on the OP Stack.\\n\\n```ts\\nimport { defineChain } from 'viem'\\nimport { chainConfig } from 'viem/op-stack'\\n\\nexport const opStackExample = defineChain({\\n  ...chainConfig,\\n  name: 'OP Stack Example',\\n  // ...\\n})\\n```\\n\",\"document\":[{\"href\":\"/op-stack/chains#chains\",\"html\":\"</header>\\n<p>The following Viem chains are implemented on the OP Stack:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  base, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  baseGoerli, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  baseSepolia, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  fraxtal, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  fraxtalTestnet, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ink, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  inkSepolia, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  optimism, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  optimismGoerli, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  optimismSepolia, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  soneium, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  soneiumMinato, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zircuit, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zircuitTestnet, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zora, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zoraSepolia, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  zoraTestnet, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/chains.md#chains\",\"isPage\":true,\"text\":\"\\nThe following Viem chains are implemented on the OP Stack:\\nimport {\\n  base, \\n  baseGoerli, \\n  baseSepolia, \\n  fraxtal, \\n  fraxtalTestnet, \\n  ink, \\n  inkSepolia, \\n  optimism, \\n  optimismGoerli, \\n  optimismSepolia, \\n  soneium, \\n  soneiumMinato, \\n  zircuit, \\n  zircuitTestnet, \\n  zora, \\n  zoraSepolia, \\n  zoraTestnet, \\n} from &#x27;viem/chains&#x27;\\n\",\"title\":\"Chains\",\"titles\":[]},{\"href\":\"/op-stack/chains#configuration\",\"html\":\"\\n<p>Viem exports OP Stack&#x27;s chain <a href=\\\"/docs/chains/formatters\\\">formatters</a> &amp; <a href=\\\"/docs/chains/serializers\\\">serializers</a> via <code>chainConfig</code>. This is useful if you need to define another chain which is implemented on the OP Stack.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { defineChain } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { chainConfig } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> opStackExample</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> defineChain</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">chainConfig,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;OP Stack Example&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // ...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/op-stack/chains.md#configuration\",\"isPage\":false,\"text\":\"\\nViem exports OP Stack&#x27;s chain formatters &amp; serializers via chainConfig. This is useful if you need to define another chain which is implemented on the OP Stack.\\nimport { defineChain } from &#x27;viem&#x27;\\nimport { chainConfig } from &#x27;viem/op-stack&#x27;\\n \\nexport const opStackExample = defineChain({\\n  ...chainConfig,\\n  name: &#x27;OP Stack Example&#x27;,\\n  // ...\\n})\",\"title\":\"Configuration\",\"titles\":[\"Chains\"]}]}}"
