"{\"value\":{\"mdx\":\"# Test Client [A function to create a Test Client]\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](/docs/actions/test/introduction).\\n\\nThe `createTestClient` function sets up a Test RPC Client with a given [Transport](/docs/clients/intro).\\n\\n## Import\\n\\n```ts twoslash\\nimport { createTestClient } from 'viem'\\n```\\n\\n## Usage\\n\\nInitialize a Client with your desired [Chain](/docs/chains/introduction), [Transport](/docs/clients/intro) (e.g. `http`) and [mode](#mode) (e.g. `\\\"anvil\\\"`).\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\\n```\\n\\nThen you can consume [Test Actions](/docs/actions/test/introduction):\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\\n// ---cut---\\nconst mine = await client.mine({ blocks: 1 }) // [!code focus:10]\\n```\\n\\n### Extending with Public & Wallet Actions\\n\\nWhen interacting with a Ethereum test node, you may also find yourself wanting to interact with [Public Actions](/docs/actions/public/introduction) and [Wallet Actions](/docs/actions/wallet/introduction) with the same `chain` and `transport`. Instead of creating three different Clients, you can instead just extend the Test Client with those actions:\\n\\n```ts twoslash\\n// @noErrors\\nimport { createTestClient, http, publicActions, walletActions } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\\n  .extend(publicActions) // [!code hl]\\n  .extend(walletActions) // [!code hl]\\n\\nconst blockNumber = await client.getBlockNumber() // Public Action\\nconst hash = await client.sendTransaction({ ... }) // Wallet Action\\nconst mine = await client.mine({ blocks: 1 }) // Test Action\\n```\\n\\n## Parameters\\n\\n### mode\\n\\n- **Type:** `\\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\"`\\n\\nMode of the Test Client.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil', // [!code focus]\\n  transport: http(), \\n})\\n```\\n\\n### transport\\n\\n- **Type:** [Transport](/docs/glossary/types#transport)\\n\\n[Transport](/docs/clients/intro) of the Test Client.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil', \\n  transport: http(),  // [!code focus]\\n})\\n```\\n\\n### account (optional)\\n\\n- **Type:** `Account | Address`\\n\\nThe Account to use for the Client. This will be used for Actions that require an `account` as an argument.\\n\\nAccepts a [JSON-RPC Account](/docs/accounts/jsonRpc) or [Local Account (Private Key, etc)](/docs/accounts/local/privateKeyToAccount).\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst client = createTestClient({\\n  account: privateKeyToAccount('0x...'), // [!code focus]\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(),\\n})\\n```\\n\\n### chain (optional)\\n\\n- **Type:** [Chain](/docs/glossary/types#chain)\\n\\n[Chain](/docs/chains/introduction) of the Test Client.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry, // [!code focus]\\n  mode: 'anvil',\\n  transport: http(), \\n})\\n```\\n\\n### cacheTime (optional)\\n\\n- **Type:** `number`\\n- **Default:** `client.pollingInterval`\\n\\nTime (in ms) that cached data will remain in memory.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nconst client = createTestClient({\\n  cacheTime: 10_000, // [!code focus]\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(),\\n})\\n```\\n\\n### name (optional)\\n\\n- **Type:** `string`\\n- **Default:** `\\\"Test Client\\\"`\\n\\nA name for the Client.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil', \\n  name: 'Anvil Client',  // [!code focus]\\n  transport: http(),\\n})\\n```\\n\\n### pollingInterval (optional)\\n\\n- **Type:** `number`\\n- **Default:** `4_000`\\n\\nFrequency (in ms) for polling enabled Actions.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil', \\n  pollingInterval: 10_000,  // [!code focus]\\n  transport: http(),\\n})\\n```\\n\\n### rpcSchema (optional)\\n\\n- **Type:** `RpcSchema`\\n- **Default:** `TestRpcSchema`\\n\\nTyped JSON-RPC schema for the client.\\n\\n```ts twoslash\\nimport { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from 'viem'\\n\\ntype CustomRpcSchema = [{ // [!code focus]\\n  Method: 'eth_wagmi', // [!code focus]\\n  Parameters: [string] // [!code focus]\\n  ReturnType: string // [!code focus]\\n}] // [!code focus]\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  rpcSchema: rpcSchema<CustomRpcSchema>(), // [!code focus]\\n  transport: http()\\n})\\n\\nconst result = await client.request({ // [!code focus]\\n  method: 'eth_wa // [!code focus] \\n//               ^|\\n  params: ['hello'], // [!code focus]\\n}) // [!code focus]\\n```\\n\",\"document\":[{\"href\":\"/docs/clients/test#test-client\",\"html\":\"<div role=\\\"doc-subtitle\\\">A function to create a Test Client</div></header>\\n<p>A Test Client is an interface to &quot;test&quot; JSON-RPC API methods accessible through a local Ethereum test node such as <a href=\\\"https://book.getfoundry.sh/anvil/\\\">Anvil</a> or <a href=\\\"https://hardhat.org/\\\">Hardhat</a> such as mining blocks, impersonating accounts, setting fees, etc through <a href=\\\"/docs/actions/test/introduction\\\">Test Actions</a>.</p>\\n<p>The <code>createTestClient</code> function sets up a Test RPC Client with a given <a href=\\\"/docs/clients/intro\\\">Transport</a>.</p>\\n\",\"id\":\"pages/docs/clients/test.md#test-client\",\"isPage\":true,\"text\":\"A function to create a Test Client\\nA Test Client is an interface to &quot;test&quot; JSON-RPC API methods accessible through a local Ethereum test node such as Anvil or Hardhat such as mining blocks, impersonating accounts, setting fees, etc through Test Actions.\\nThe createTestClient function sets up a Test RPC Client with a given Transport.\\n\",\"title\":\"Test Client\",\"titles\":[]},{\"href\":\"/docs/clients/test#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#import\",\"isPage\":false,\"text\":\"\\nimport { createTestClient } from &#x27;viem&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"Test Client\"]},{\"href\":\"/docs/clients/test#usage\",\"html\":\"\\n<p>Initialize a Client with your desired <a href=\\\"/docs/chains/introduction\\\">Chain</a>, <a href=\\\"/docs/clients/intro\\\">Transport</a> (e.g. <code>http</code>) and <a href=\\\"#mode\\\">mode</a> (e.g. <code>&quot;anvil&quot;</code>).</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p>Then you can consume <a href=\\\"/docs/actions/test/introduction\\\">Test Actions</a>:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> mine</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">mine</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ blocks: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) </span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#usage\",\"isPage\":false,\"text\":\"\\nInitialize a Client with your desired Chain, Transport (e.g. http) and mode (e.g. &quot;anvil&quot;).\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n \\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;,\\n  transport: http(), \\n})\\nThen you can consume Test Actions:\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n \\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;,\\n  transport: http(), \\n})\\n// ---cut---\\nconst mine = await client.mine({ blocks: 1 }) \\n\",\"title\":\"Usage\",\"titles\":[\"Test Client\"]},{\"href\":\"/docs/clients/test#extending-with-public--wallet-actions\",\"html\":\"\\n<p>When interacting with a Ethereum test node, you may also find yourself wanting to interact with <a href=\\\"/docs/actions/public/introduction\\\">Public Actions</a> and <a href=\\\"/docs/actions/wallet/introduction\\\">Wallet Actions</a> with the same <code>chain</code> and <code>transport</code>. Instead of creating three different Clients, you can instead just extend the Test Client with those actions:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http, publicActions, walletActions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicActions) </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(walletActions) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> blockNumber</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getBlockNumber</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Public Action</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Wallet Action</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> mine</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">mine</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ blocks: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Test Action</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#extending-with-public--wallet-actions\",\"isPage\":false,\"text\":\"\\nWhen interacting with a Ethereum test node, you may also find yourself wanting to interact with Public Actions and Wallet Actions with the same chain and transport. Instead of creating three different Clients, you can instead just extend the Test Client with those actions:\\n// @noErrors\\nimport { createTestClient, http, publicActions, walletActions } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n \\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;,\\n  transport: http(), \\n})\\n  .extend(publicActions) \\n  .extend(walletActions) \\n \\nconst blockNumber = await client.getBlockNumber() // Public Action\\nconst hash = await client.sendTransaction({ ... }) // Wallet Action\\nconst mine = await client.mine({ blocks: 1 }) // Test Action\\n\",\"title\":\"Extending with Public &amp; Wallet Actions\",\"titles\":[\"Test Client\",\"Usage\"]},{\"href\":\"/docs/clients/test#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/clients/test.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"Test Client\"]},{\"href\":\"/docs/clients/test#mode\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>&quot;anvil&quot; | &quot;hardhat&quot; | &quot;ganache&quot;</code></li>\\n</ul>\\n<p>Mode of the Test Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#mode\",\"isPage\":false,\"text\":\"\\n\\nType: &quot;anvil&quot; | &quot;hardhat&quot; | &quot;ganache&quot;\\n\\nMode of the Test Client.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;, \\n  transport: http(), \\n})\\n\",\"title\":\"mode\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#transport\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#transport\\\">Transport</a></li>\\n</ul>\\n<p><a href=\\\"/docs/clients/intro\\\">Transport</a> of the Test Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#transport\",\"isPage\":false,\"text\":\"\\n\\nType: Transport\\n\\nTransport of the Test Client.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;, \\n  transport: http(),  \\n})\\n\",\"title\":\"transport\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#account-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address</code></li>\\n</ul>\\n<p>The Account to use for the Client. This will be used for Actions that require an <code>account</code> as an argument.</p>\\n<p>Accepts a <a href=\\\"/docs/accounts/jsonRpc\\\">JSON-RPC Account</a> or <a href=\\\"/docs/accounts/local/privateKeyToAccount\\\">Local Account (Private Key, etc)</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#account-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address\\n\\nThe Account to use for the Client. This will be used for Actions that require an account as an argument.\\nAccepts a JSON-RPC Account or Local Account (Private Key, etc).\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nconst client = createTestClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;), \\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;,\\n  transport: http(),\\n})\\n\",\"title\":\"account (optional)\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\">Chain</a></li>\\n</ul>\\n<p><a href=\\\"/docs/chains/introduction\\\">Chain</a> of the Test Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\n\\nChain of the Test Client.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry, \\n  mode: &#x27;anvil&#x27;,\\n  transport: http(), \\n})\\n\",\"title\":\"chain (optional)\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#cachetime-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>client.pollingInterval</code></li>\\n</ul>\\n<p>Time (in ms) that cached data will remain in memory.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  cacheTime: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#cachetime-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: client.pollingInterval\\n\\nTime (in ms) that cached data will remain in memory.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createTestClient({\\n  cacheTime: 10_000, \\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;,\\n  transport: http(),\\n})\\n\",\"title\":\"cacheTime (optional)\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#name-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n<li><strong>Default:</strong> <code>&quot;Test Client&quot;</code></li>\\n</ul>\\n<p>A name for the Client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Anvil Client&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#name-optional\",\"isPage\":false,\"text\":\"\\n\\nType: string\\nDefault: &quot;Test Client&quot;\\n\\nA name for the Client.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;, \\n  name: &#x27;Anvil Client&#x27;,  \\n  transport: http(),\\n})\\n\",\"title\":\"name (optional)\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#pollinginterval-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n<li><strong>Default:</strong> <code>4_000</code></li>\\n</ul>\\n<p>Frequency (in ms) for polling enabled Actions.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  mode: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;anvil&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  pollingInterval: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">10_000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/clients/test.md#pollinginterval-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\nDefault: 4_000\\n\\nFrequency (in ms) for polling enabled Actions.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// ---cut---\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: &#x27;anvil&#x27;, \\n  pollingInterval: 10_000,  \\n  transport: http(),\\n})\\n\",\"title\":\"pollingInterval (optional)\",\"titles\":[\"Test Client\",\"Parameters\"]},{\"href\":\"/docs/clients/test#rpcschema-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>RpcSchema</code></li>\\n<li><strong>Default:</strong> <code>TestRpcSchema</code></li>\\n</ul>\\n<p>Typed JSON-RPC schema for the client.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createTestClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { foundry } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { rpcSchema } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">type</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> CustomRpcSchema</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [{ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  Method</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  Parameters</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">string</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  ReturnType</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> string</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}] </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createTestClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: foundry,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  rpcSchema: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">rpcSchema</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&lt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">CustomRpcSchema</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;(), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> result</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_wa // [!code focus]</span><span style=\\\"color:#B31D28;font-style:italic;--shiki-dark:#FF938A;--shiki-dark-font-style:italic\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">//               ^|</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  params: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\",\"id\":\"pages/docs/clients/test.md#rpcschema-optional\",\"isPage\":false,\"text\":\"\\n\\nType: RpcSchema\\nDefault: TestRpcSchema\\n\\nTyped JSON-RPC schema for the client.\\nimport { createTestClient, http } from &#x27;viem&#x27;\\nimport { foundry } from &#x27;viem/chains&#x27;\\n// @noErrors\\n// ---cut---\\nimport { rpcSchema } from &#x27;viem&#x27;\\n \\ntype CustomRpcSchema = [{ \\n  Method: &#x27;eth_wagmi&#x27;, \\n  Parameters: [string] \\n  ReturnType: string\\n}] \\n \\nconst client = createTestClient({\\n  chain: foundry,\\n  rpcSchema: rpcSchema&lt;CustomRpcSchema&gt;(), \\n  transport: http()\\n})\\n \\nconst result = await client.request({ \\n  method: &#x27;eth_wa // [!code focus] \\n//               ^|\\n  params: [&#x27;hello&#x27;], \\n}) \",\"title\":\"rpcSchema (optional)\",\"titles\":[\"Test Client\",\"Parameters\"]}]}}"
