"{\"value\":{\"code\":\"import { publicClient } from './client'\\n\\nconst filter = await publicClient.createEventFilter(publicClient, {\\n  address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\\n  event: { // [!code focus:99]\\n    name: 'Transfer', \\n    inputs: [\\n      { type: 'address', indexed: true, name: 'from' },\\n      { type: 'address', indexed: true, name: 'to' },\\n      { type: 'uint256', indexed: false, name: 'value' }\\n    ] \\n  }\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":9,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const filter: {\\n    id: Hex;\\n    request: EIP1193RequestFn<readonly [{\\n        Method: \\\"eth_getFilterChanges\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[] | Hex[];\\n    }, {\\n        Method: \\\"eth_getFilterLogs\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[];\\n    }, {\\n        ...;\\n    }]>;\\n    ... 6 more ...;\\n    strict?: undefined | undefined;\\n}\",\"start\":47,\"length\":6,\"target\":\"filter\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":62,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) createEventFilter: <undefined, undefined, undefined, undefined, undefined, undefined, undefined>(args?: CreateEventFilterParameters<undefined, undefined, undefined, undefined, undefined, undefined, undefined> | undefined) => Promise<...>\",\"docs\":\"Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\\n\\n- Docs: https://viem.sh/docs/actions/public/createEventFilter\\n- JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\",\"tags\":[[\"param\",\"args - {@link CreateEventFilterParameters}\"],[\"returns\",\"[`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst filter = await client.createEventFilter({\\n  address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\\n})\"]],\"start\":75,\"length\":17,\"target\":\"createEventFilter\",\"line\":2,\"character\":34},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":93,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":52},{\"type\":\"hover\",\"text\":\"(property) address: string\",\"start\":111,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) event: {\\n    name: string;\\n    inputs: {\\n        type: string;\\n        indexed: boolean;\\n        name: string;\\n    }[];\\n}\",\"start\":168,\"length\":5,\"target\":\"event\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":201,\"length\":4,\"target\":\"name\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) inputs: {\\n    type: string;\\n    indexed: boolean;\\n    name: string;\\n}[]\",\"start\":224,\"length\":6,\"target\":\"inputs\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":242,\"length\":4,\"target\":\"type\",\"line\":7,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":259,\"length\":7,\"target\":\"indexed\",\"line\":7,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":274,\"length\":4,\"target\":\"name\",\"line\":7,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":298,\"length\":4,\"target\":\"type\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":315,\"length\":7,\"target\":\"indexed\",\"line\":8,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":330,\"length\":4,\"target\":\"name\",\"line\":8,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":352,\"length\":4,\"target\":\"type\",\"line\":9,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":369,\"length\":7,\"target\":\"indexed\",\"line\":9,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":385,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":41}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,843]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":201,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":402,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":603,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":804,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { publicClient } from './client'\\n\\nconst filter = await publicClient.createEventFilter(publicClient, {\\n  address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\\n  event: { // [!code focus:99]\\n    name: 'Transfer', \\n    inputs: [\\n      { type: 'address', indexed: true, name: 'from' },\\n      { type: 'address', indexed: true, name: 'to' },\\n      { type: 'uint256', indexed: false, name: 'value' }\\n    ] \\n  }\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":9,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const filter: {\\n    id: Hex;\\n    request: EIP1193RequestFn<readonly [{\\n        Method: \\\"eth_getFilterChanges\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[] | Hex[];\\n    }, {\\n        Method: \\\"eth_getFilterLogs\\\";\\n        Parameters: [filterId: Quantity];\\n        ReturnType: RpcLog[];\\n    }, {\\n        ...;\\n    }]>;\\n    ... 6 more ...;\\n    strict?: undefined | undefined;\\n}\",\"start\":47,\"length\":6,\"target\":\"filter\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":62,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) createEventFilter: <undefined, undefined, undefined, undefined, undefined, undefined, undefined>(args?: CreateEventFilterParameters<undefined, undefined, undefined, undefined, undefined, undefined, undefined> | undefined) => Promise<...>\",\"docs\":\"Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\\n\\n- Docs: https://viem.sh/docs/actions/public/createEventFilter\\n- JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\",\"tags\":[[\"param\",\"args - {@link CreateEventFilterParameters}\"],[\"returns\",\"[`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst filter = await client.createEventFilter({\\n  address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\\n})\"]],\"start\":75,\"length\":17,\"target\":\"createEventFilter\",\"line\":2,\"character\":34},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":93,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":52},{\"type\":\"hover\",\"text\":\"(property) address: string\",\"start\":111,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) event: {\\n    name: string;\\n    inputs: {\\n        type: string;\\n        indexed: boolean;\\n        name: string;\\n    }[];\\n}\",\"start\":168,\"length\":5,\"target\":\"event\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":201,\"length\":4,\"target\":\"name\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) inputs: {\\n    type: string;\\n    indexed: boolean;\\n    name: string;\\n}[]\",\"start\":224,\"length\":6,\"target\":\"inputs\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":242,\"length\":4,\"target\":\"type\",\"line\":7,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":259,\"length\":7,\"target\":\"indexed\",\"line\":7,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":274,\"length\":4,\"target\":\"name\",\"line\":7,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":298,\"length\":4,\"target\":\"type\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":315,\"length\":7,\"target\":\"indexed\",\"line\":8,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":330,\"length\":4,\"target\":\"name\",\"line\":8,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type: string\",\"start\":352,\"length\":4,\"target\":\"type\",\"line\":9,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) indexed: boolean\",\"start\":369,\"length\":7,\"target\":\"indexed\",\"line\":9,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":385,\"length\":4,\"target\":\"name\",\"line\":9,\"character\":41}],\"tags\":[]}}"
