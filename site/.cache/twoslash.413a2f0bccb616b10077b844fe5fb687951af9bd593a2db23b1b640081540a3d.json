"{\"value\":{\"code\":\"import { encodeFunctionData, parseEther } from 'viem'\\nimport { walletClient } from './config'\\nimport { contractAddress } from './contract'\\n \\nconst authorization = await walletClient.signAuthorization({\\n  contractAddress,\\n})\\n\\nconst hash = await walletClient.sendTransaction({ // [!code focus]\\n  authorizationList: [authorization], // [!code focus]\\n  data: encodeFunctionData({ // [!code focus]\\n    abi, // [!code focus]\\n    functionName: 'execute', // [!code focus]\\n    args: [ // [!code focus]\\n      [ // [!code focus]\\n        { // [!code focus]\\n          data: '0x', // [!code focus]\\n          to: '0xcb98643b8786950F0461f3B0edf99D88F274574D', // [!code focus]\\n          value: parseEther('0.001'), // [!code focus]\\n        }, // [!code focus]\\n        { // [!code focus]\\n          data: '0x', // [!code focus]\\n          to: '0xd2135CfB216b74109775236E36d4b433F1DF507B', // [!code focus]\\n          value: parseEther('0.002'), // [!code focus]\\n        }, // [!code focus]\\n      ], // [!code focus]\\n    ] // [!code focus]\\n  }), // [!code focus]\\n  to: walletClient.account.address, // [!code focus]\\n}) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function encodeFunctionData<const abi extends Abi | readonly unknown[], functionName extends ContractFunctionName<abi> | undefined = undefined>(parameters: EncodeFunctionDataParameters<abi, functionName>): EncodeFunctionDataReturnType\\nimport encodeFunctionData\",\"start\":9,\"length\":18,\"target\":\"encodeFunctionData\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":29,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":63,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const contractAddress: \\\"0x...\\\"\\nimport contractAddress\",\"start\":103,\"length\":15,\"target\":\"contractAddress\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":147,\"length\":13,\"target\":\"authorization\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":169,\"length\":12,\"target\":\"walletClient\",\"line\":4,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/experimental/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/experimental/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":182,\"length\":17,\"target\":\"signAuthorization\",\"line\":4,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":204,\"length\":15,\"target\":\"contractAddress\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":231,\"length\":4,\"target\":\"hash\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":244,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: `0x${string}`;\\n    readonly to: `0x${string}`;\\n}, undefined>(args: SendTransactionParameters<{\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: `0x${string}`;\\n    readonly to: `0x${string}`;\\n}>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":257,\"length\":15,\"target\":\"sendTransaction\",\"line\":8,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: readonly [SignAuthorizationReturnType]\",\"start\":294,\"length\":17,\"target\":\"authorizationList\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":314,\"length\":13,\"target\":\"authorization\",\"line\":9,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) data: `0x${string}`\",\"start\":349,\"length\":4,\"target\":\"data\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) encodeFunctionData<any, \\\"execute\\\">(parameters: any): EncodeFunctionDataReturnType\\nimport encodeFunctionData\",\"start\":355,\"length\":18,\"target\":\"encodeFunctionData\",\"line\":10,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) abi: any\",\"start\":397,\"length\":3,\"target\":\"abi\",\"line\":11,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":423,\"length\":12,\"target\":\"functionName\",\"line\":12,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) args: {\\n    data: string;\\n    to: string;\\n    value: bigint;\\n}[][]\",\"start\":469,\"length\":4,\"target\":\"args\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) data: string\",\"start\":556,\"length\":4,\"target\":\"data\",\"line\":16,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":595,\"length\":2,\"target\":\"to\",\"line\":17,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":672,\"length\":5,\"target\":\"value\",\"line\":18,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":679,\"length\":10,\"target\":\"parseEther\",\"line\":18,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data: string\",\"start\":782,\"length\":4,\"target\":\"data\",\"line\":21,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":821,\"length\":2,\"target\":\"to\",\"line\":22,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":898,\"length\":5,\"target\":\"value\",\"line\":23,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":905,\"length\":10,\"target\":\"parseEther\",\"line\":23,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":1045,\"length\":2,\"target\":\"to\",\"line\":28,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":1049,\"length\":12,\"target\":\"walletClient\",\"line\":28,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    ...;\\n}\",\"docs\":\"The Account of the Client.\",\"start\":1062,\"length\":7,\"target\":\"account\",\"line\":28,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":1070,\"length\":7,\"target\":\"address\",\"line\":28,\"character\":27}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,2747]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":579,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1158,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1737,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { anvil } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' \\nimport { eip7702Actions } from 'viem/experimental'\\n\\nexport const account = privateKeyToAccount('0x...')\\n \\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2129,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2708,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { encodeFunctionData, parseEther } from 'viem'\\nimport { walletClient } from './config'\\nimport { contractAddress } from './contract'\\n \\nconst authorization = await walletClient.signAuthorization({\\n  contractAddress,\\n})\\n\\nconst hash = await walletClient.sendTransaction({ // [!code focus]\\n  authorizationList: [authorization], // [!code focus]\\n  data: encodeFunctionData({ // [!code focus]\\n    abi, // [!code focus]\\n    functionName: 'execute', // [!code focus]\\n    args: [ // [!code focus]\\n      [ // [!code focus]\\n        { // [!code focus]\\n          data: '0x', // [!code focus]\\n          to: '0xcb98643b8786950F0461f3B0edf99D88F274574D', // [!code focus]\\n          value: parseEther('0.001'), // [!code focus]\\n        }, // [!code focus]\\n        { // [!code focus]\\n          data: '0x', // [!code focus]\\n          to: '0xd2135CfB216b74109775236E36d4b433F1DF507B', // [!code focus]\\n          value: parseEther('0.002'), // [!code focus]\\n        }, // [!code focus]\\n      ], // [!code focus]\\n    ] // [!code focus]\\n  }), // [!code focus]\\n  to: walletClient.account.address, // [!code focus]\\n}) // [!code focus]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function encodeFunctionData<const abi extends Abi | readonly unknown[], functionName extends ContractFunctionName<abi> | undefined = undefined>(parameters: EncodeFunctionDataParameters<abi, functionName>): EncodeFunctionDataReturnType\\nimport encodeFunctionData\",\"start\":9,\"length\":18,\"target\":\"encodeFunctionData\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":29,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":63,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const contractAddress: \\\"0x...\\\"\\nimport contractAddress\",\"start\":103,\"length\":15,\"target\":\"contractAddress\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":147,\"length\":13,\"target\":\"authorization\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":169,\"length\":12,\"target\":\"walletClient\",\"line\":4,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/experimental/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/experimental/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":182,\"length\":17,\"target\":\"signAuthorization\",\"line\":4,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":204,\"length\":15,\"target\":\"contractAddress\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":231,\"length\":4,\"target\":\"hash\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":244,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: `0x${string}`;\\n    readonly to: `0x${string}`;\\n}, undefined>(args: SendTransactionParameters<{\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: `0x${string}`;\\n    readonly to: `0x${string}`;\\n}>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":257,\"length\":15,\"target\":\"sendTransaction\",\"line\":8,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: readonly [SignAuthorizationReturnType]\",\"start\":294,\"length\":17,\"target\":\"authorizationList\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":314,\"length\":13,\"target\":\"authorization\",\"line\":9,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) data: `0x${string}`\",\"start\":349,\"length\":4,\"target\":\"data\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) encodeFunctionData<any, \\\"execute\\\">(parameters: any): EncodeFunctionDataReturnType\\nimport encodeFunctionData\",\"start\":355,\"length\":18,\"target\":\"encodeFunctionData\",\"line\":10,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) abi: any\",\"start\":397,\"length\":3,\"target\":\"abi\",\"line\":11,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":423,\"length\":12,\"target\":\"functionName\",\"line\":12,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) args: {\\n    data: string;\\n    to: string;\\n    value: bigint;\\n}[][]\",\"start\":469,\"length\":4,\"target\":\"args\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) data: string\",\"start\":556,\"length\":4,\"target\":\"data\",\"line\":16,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":595,\"length\":2,\"target\":\"to\",\"line\":17,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":672,\"length\":5,\"target\":\"value\",\"line\":18,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":679,\"length\":10,\"target\":\"parseEther\",\"line\":18,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data: string\",\"start\":782,\"length\":4,\"target\":\"data\",\"line\":21,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":821,\"length\":2,\"target\":\"to\",\"line\":22,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":898,\"length\":5,\"target\":\"value\",\"line\":23,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":905,\"length\":10,\"target\":\"parseEther\",\"line\":23,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":1045,\"length\":2,\"target\":\"to\",\"line\":28,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":1049,\"length\":12,\"target\":\"walletClient\",\"line\":28,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    ...;\\n}\",\"docs\":\"The Account of the Client.\",\"start\":1062,\"length\":7,\"target\":\"account\",\"line\":28,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":1070,\"length\":7,\"target\":\"address\",\"line\":28,\"character\":27}],\"tags\":[]}}"
