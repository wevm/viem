"{\"value\":{\"mdx\":\"---\\ndescription: Creates, signs, and sends a new transaction to the network.\\n---\\n\\n# sendTransaction\\n\\nCreates, signs, and sends a new transaction to the network.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { account, walletClient } from './config'\\n \\nconst hash = await walletClient.sendTransaction({ // [!code focus:99]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n// '0x...'\\n```\\n\\n```ts twoslash [config.ts] filename=\\\"config.ts\\\"\\n// [!include ~/snippets/walletClient.ts]\\n\\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n\\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n```\\n\\n:::\\n\\n### Account Hoisting\\n\\nIf you do not wish to pass an `account` to every `sendTransaction`, you can also hoist the Account on the Wallet Client (see `config.ts`).\\n\\n[Learn more](/docs/clients/wallet#account).\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { walletClient } from './config'\\n \\nconst hash = await walletClient.sendTransaction({ // [!code focus:99]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n// '0x...'\\n```\\n\\n```ts [config.ts (JSON-RPC Account)]\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n```\\n\\n```ts twoslash [config.ts (Local Account)] filename=\\\"config.ts\\\"\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  transport: http()\\n})\\n```\\n\\n:::\\n\\n## Returns\\n\\n[`Hash`](/docs/glossary/types#hash)\\n\\nThe [Transaction](/docs/glossary/terms#transaction) hash.\\n\\n## Parameters\\n\\n### account\\n\\n- **Type:** `Account | Address | null`\\n\\nThe Account to send the transaction from.\\n\\nAccepts a [JSON-RPC Account](/docs/clients/wallet#json-rpc-accounts) or [Local Account (Private Key, etc)](/docs/clients/wallet#local-accounts-private-key-mnemonic-etc). If set to `null`, it is assumed that the transport will handle filling the sender of the transaction.\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### to\\n\\n- **Type:** `0x${string}`\\n\\nThe transaction recipient or contract address.\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n  value: 1000000000000000000n,\\n  nonce: 69\\n})\\n```\\n\\n### accessList (optional)\\n\\n- **Type:** [`AccessList`](/docs/glossary/types#accesslist)\\n\\nThe access list.\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  accessList: [ // [!code focus:6]\\n    {\\n      address: '0x1',\\n      storageKeys: ['0x1'],\\n    },\\n  ],\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n})\\n```\\n\\n### authorizationList (optional)\\n\\n- **Type:** `AuthorizationList`\\n\\nSigned EIP-7702 Authorization list.\\n\\n```ts twoslash\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst account = privateKeyToAccount('0x...')\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n// ---cut---\\nconst authorization = await walletClient.signAuthorization({ \\n  account,\\n  contractAddress: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2', \\n}) \\n\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  authorizationList: [authorization], // [!code focus]\\n  data: '0xdeadbeef',\\n  to: account.address,\\n})\\n```\\n\\n:::note\\n**References**\\n- [EIP-7702 Overview](/experimental/eip7702)\\n- [`signAuthorization` Docs](/experimental/eip7702/signAuthorization)\\n:::\\n\\n### blobs (optional)\\n\\n- **Type:** `Hex[]`\\n\\nBlobs for [Blob Transactions](/docs/guides/blob-transactions). \\n\\n```ts\\nimport * as cKzg from 'c-kzg'\\nimport { toBlobs, setupKzg, stringToHex } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath) \\n\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  blobs: toBlobs({ data: stringToHex('blobby blob!') }), // [!code focus]\\n  kzg,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8'\\n})\\n```\\n\\n### chain (optional)\\n\\n- **Type:** [`Chain`](/docs/glossary/types#chain)\\n- **Default:** `walletClient.chain`\\n\\nThe target chain. If there is a mismatch between the wallet's current chain & the target chain, an error will be thrown.\\n\\nThe chain is also used to infer its request type (e.g. the Celo chain has a `gatewayFee` that you can pass through to `sendTransaction`).\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nimport { optimism } from 'viem/chains' // [!code focus]\\n\\nconst hash = await walletClient.sendTransaction({\\n  chain: optimism, // [!code focus]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### data (optional)\\n\\n- **Type:** `0x${string}`\\n\\nA contract hashed method call with encoded args.\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // [!code focus]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### gasPrice (optional)\\n\\n- **Type:** `bigint`\\n\\nThe price (in wei) to pay per gas. Only applies to [Legacy Transactions](/docs/glossary/terms#legacy-transaction).\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  gasPrice: parseGwei('20'), // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1') \\n})\\n```\\n\\n### kzg (optional)\\n\\n- **Type:** `KZG`\\n\\nKZG implementation for [Blob Transactions](/docs/guides/blob-transactions). \\n\\nSee [`setupKzg`](/docs/utilities/setupKzg) for more information.\\n\\n```ts\\nimport * as cKzg from 'c-kzg'\\nimport { toBlobs, setupKzg, stringToHex } from 'viem'\\nimport { mainnetTrustedSetupPath } from 'viem/node'\\n\\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath) // [!code focus]\\n\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  blobs: toBlobs({ data: stringToHex('blobby blob!') }), // [!code focus]\\n  kzg, // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8'\\n})\\n```\\n\\n### maxFeePerGas (optional)\\n\\n- **Type:** `bigint`\\n\\nTotal fee per gas (in wei), inclusive of `maxPriorityFeePerGas`. Only applies to [EIP-1559 Transactions](/docs/glossary/terms#eip-1559-transaction)\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  maxFeePerGas: parseGwei('20'),  // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1')\\n})\\n```\\n\\n### maxPriorityFeePerGas (optional)\\n\\n- **Type:** `bigint`\\n\\nMax priority fee per gas (in wei). Only applies to [EIP-1559 Transactions](/docs/glossary/terms#eip-1559-transaction)\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  maxFeePerGas: parseGwei('20'),\\n  maxPriorityFeePerGas: parseGwei('2'), // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1')\\n})\\n```\\n\\n### nonce (optional)\\n\\n- **Type:** `number`\\n\\nUnique number identifying this transaction.\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n  nonce: 69 // [!code focus]\\n})\\n```\\n\\n### value (optional)\\n\\n- **Type:** `bigint`\\n\\nValue in wei sent with this transaction.\\n\\n```ts twoslash\\n// [!include ~/snippets/walletClient.ts]\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1'), // [!code focus]\\n  nonce: 69\\n})\\n```\\n\\n## Tips\\n\\n- For dapps: When using this action, it is assumed that the user has connected to their wallet (e.g. given permission for the dapp to access their accounts via [`requestAddresses`](/docs/actions/wallet/requestAddresses)). You can also check if the user has granted access to their accounts via [`getAddresses`](/docs/actions/wallet/getAddresses)\\n\\n## Live Example\\n\\nCheck out the usage of `sendTransaction` in the live [Sending Transactions Example](https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions) below.\\n\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=0&ctl=1\\\"></iframe>\\n\\n## JSON-RPC Methods\\n\\n- JSON-RPC Accounts:\\n  - [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n- Local Accounts:\\n  - [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\\n\",\"document\":[{\"href\":\"/docs/actions/wallet/sendTransaction#sendtransaction\",\"html\":\"</header>\\n<p>Creates, signs, and sends a new transaction to the network.</p>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#sendtransaction\",\"isPage\":true,\"text\":\"\\nCreates, signs, and sends a new transaction to the network.\\n\",\"title\":\"sendTransaction\",\"titles\":[]},{\"href\":\"/docs/actions/wallet/sendTransaction#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: ↑ JSON-RPC Account</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// export const account = privateKeyToAccount(...)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: ↑ Local Account</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, walletClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x...&#x27;</span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: ↑ JSON-RPC Account</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// export const account = privateKeyToAccount(...)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: ↑ Local Account</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#usage\",\"isPage\":false,\"text\":\"\\n// @filename: config.ts\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;),\\n  transport: http()\\n})\\n// @filename: config.ts\\n \\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n \\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n \\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n \\n// @filename: example.js\\n \\n// ---cut---\\nimport { account, walletClient } from &#x27;./config&#x27;\\n \\nconst hash = await walletClient.sendTransaction({ \\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n// &#x27;0x...&#x27;import &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n \\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n \\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n\",\"title\":\"Usage\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#account-hoisting\",\"html\":\"\\n<p>If you do not wish to pass an <code>account</code> to every <code>sendTransaction</code>, you can also hoist the Account on the Wallet Client (see <code>config.ts</code>).</p>\\n<p><a href=\\\"/docs/clients/wallet#account\\\">Learn more</a>.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: ↑ JSON-RPC Account</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// export const account = privateKeyToAccount(...)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: ↑ Local Account</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { walletClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x...&#x27;</span></span></code></pre></div><div data-title=\\\"config.ts (JSON-RPC Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (JSON-RPC Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Retrieve Account from an EIP-1193 Provider.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.ethereum.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_requestAccounts&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-title=\\\"config.ts (Local Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (Local Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#account-hoisting\",\"isPage\":false,\"text\":\"\\nIf you do not wish to pass an account to every sendTransaction, you can also hoist the Account on the Wallet Client (see config.ts).\\nLearn more.\\n// @filename: config.ts\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;),\\n  transport: http()\\n})\\n// @filename: config.ts\\n \\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n \\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n \\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n \\n// @filename: example.js\\n \\n// ---cut---\\nimport { walletClient } from &#x27;./config&#x27;\\n \\nconst hash = await walletClient.sendTransaction({ \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n// &#x27;0x...&#x27;import { createWalletClient, custom } from &#x27;viem&#x27;\\n \\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum.request({ \\n  method: &#x27;eth_requestAccounts&#x27; \\n})\\n \\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})import { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;),\\n  transport: http()\\n})\\n\",\"title\":\"Account Hoisting\",\"titles\":[\"sendTransaction\",\"Usage\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hash\\\"><code>Hash</code></a></p>\\n<p>The <a href=\\\"/docs/glossary/terms#transaction\\\">Transaction</a> hash.</p>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#returns\",\"isPage\":false,\"text\":\"\\nHash\\nThe Transaction hash.\\n\",\"title\":\"Returns\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#account\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address | null</code></li>\\n</ul>\\n<p>The Account to send the transaction from.</p>\\n<p>Accepts a <a href=\\\"/docs/clients/wallet#json-rpc-accounts\\\">JSON-RPC Account</a> or <a href=\\\"/docs/clients/wallet#local-accounts-private-key-mnemonic-etc\\\">Local Account (Private Key, etc)</a>. If set to <code>null</code>, it is assumed that the transport will handle filling the sender of the transaction.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#account\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address | null\\n\\nThe Account to send the transaction from.\\nAccepts a JSON-RPC Account or Local Account (Private Key, etc). If set to null, it is assumed that the transport will handle filling the sender of the transaction.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;, \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"account\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#to\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>0x${string}</code></li>\\n</ul>\\n<p>The transaction recipient or contract address.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#to\",\"isPage\":false,\"text\":\"\\n\\nType: 0x${string}\\n\\nThe transaction recipient or contract address.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;, \\n  value: 1000000000000000000n,\\n  nonce: 69\\n})\\n\",\"title\":\"to\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#accesslist-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#accesslist\\\"><code>AccessList</code></a></li>\\n</ul>\\n<p>The access list.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  accessList: [ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      storageKeys: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#accesslist-optional\",\"isPage\":false,\"text\":\"\\n\\nType: AccessList\\n\\nThe access list.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  accessList: [ \\n    {\\n      address: &#x27;0x1&#x27;,\\n      storageKeys: [&#x27;0x1&#x27;],\\n    },\\n  ],\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n})\\n\",\"title\":\"accessList (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#authorizationlist-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>AuthorizationList</code></li>\\n</ul>\\n<p>Signed EIP-7702 Authorization list.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip7702Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip7702Actions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> authorization</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signAuthorization</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  contractAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  authorizationList: [authorization], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  data: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xdeadbeef&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<aside data-callout=\\\"note\\\"><strong>References</strong><ul>\\n<li><a href=\\\"/experimental/eip7702\\\">EIP-7702 Overview</a></li>\\n<li><a href=\\\"/experimental/eip7702/signAuthorization\\\"><code>signAuthorization</code> Docs</a></li>\\n</ul></aside>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#authorizationlist-optional\",\"isPage\":false,\"text\":\"\\n\\nType: AuthorizationList\\n\\nSigned EIP-7702 Authorization list.\\nimport { createWalletClient, http } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\nimport { eip7702Actions } from &#x27;viem/experimental&#x27;\\n \\nconst account = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n// ---cut---\\nconst authorization = await walletClient.signAuthorization({ \\n  account,\\n  contractAddress: &#x27;0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2&#x27;, \\n}) \\n \\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  authorizationList: [authorization], \\n  data: &#x27;0xdeadbeef&#x27;,\\n  to: account.address,\\n})\\nReferences\\nEIP-7702 Overview\\nsignAuthorization Docs\\n\\n\",\"title\":\"authorizationList (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#blobs-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Hex[]</code></li>\\n</ul>\\n<p>Blobs for <a href=\\\"/docs/guides/blob-transactions\\\">Blob Transactions</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toBlobs, setupKzg, stringToHex } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(cKzg, mainnetTrustedSetupPath) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  blobs: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">toBlobs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ data: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">stringToHex</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;blobby blob!&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) }), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  kzg,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#blobs-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Hex[]\\n\\nBlobs for Blob Transactions.\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { toBlobs, setupKzg, stringToHex } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath) \\n \\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  blobs: toBlobs({ data: stringToHex(&#x27;blobby blob!&#x27;) }), \\n  kzg,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;\\n})\\n\",\"title\":\"blobs (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\"><code>Chain</code></a></li>\\n<li><strong>Default:</strong> <code>walletClient.chain</code></li>\\n</ul>\\n<p>The target chain. If there is a mismatch between the wallet&#x27;s current chain &amp; the target chain, an error will be thrown.</p>\\n<p>The chain is also used to infer its request type (e.g. the Celo chain has a <code>gatewayFee</code> that you can pass through to <code>sendTransaction</code>).</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\nDefault: walletClient.chain\\n\\nThe target chain. If there is a mismatch between the wallet&#x27;s current chain &amp; the target chain, an error will be thrown.\\nThe chain is also used to infer its request type (e.g. the Celo chain has a gatewayFee that you can pass through to sendTransaction).\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nimport { optimism } from &#x27;viem/chains&#x27;\\n \\nconst hash = await walletClient.sendTransaction({\\n  chain: optimism, \\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"chain (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#data-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>0x${string}</code></li>\\n</ul>\\n<p>A contract hashed method call with encoded args.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  data: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#data-optional\",\"isPage\":false,\"text\":\"\\n\\nType: 0x${string}\\n\\nA contract hashed method call with encoded args.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  data: &#x27;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#x27;, \\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"data (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#gasprice-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The price (in wei) to pay per gas. Only applies to <a href=\\\"/docs/glossary/terms#legacy-transaction\\\">Legacy Transactions</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gasPrice: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#gasprice-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe price (in wei) to pay per gas. Only applies to Legacy Transactions.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  gasPrice: parseGwei(&#x27;20&#x27;), \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: parseEther(&#x27;1&#x27;) \\n})\\n\",\"title\":\"gasPrice (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#kzg-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>KZG</code></li>\\n</ul>\\n<p>KZG implementation for <a href=\\\"/docs/guides/blob-transactions\\\">Blob Transactions</a>.</p>\\n<p>See <a href=\\\"/docs/utilities/setupKzg\\\"><code>setupKzg</code></a> for more information.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> *</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> as</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> cKzg </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;c-kzg&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toBlobs, setupKzg, stringToHex } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnetTrustedSetupPath } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/node&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> kzg</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setupKzg</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(cKzg, mainnetTrustedSetupPath) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  blobs: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">toBlobs</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ data: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">stringToHex</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;blobby blob!&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) }), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  kzg, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#kzg-optional\",\"isPage\":false,\"text\":\"\\n\\nType: KZG\\n\\nKZG implementation for Blob Transactions.\\nSee setupKzg for more information.\\nimport * as cKzg from &#x27;c-kzg&#x27;\\nimport { toBlobs, setupKzg, stringToHex } from &#x27;viem&#x27;\\nimport { mainnetTrustedSetupPath } from &#x27;viem/node&#x27;\\n \\nconst kzg = setupKzg(cKzg, mainnetTrustedSetupPath) \\n \\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  blobs: toBlobs({ data: stringToHex(&#x27;blobby blob!&#x27;) }), \\n  kzg, \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;\\n})\\n\",\"title\":\"kzg (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#maxfeepergas-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Total fee per gas (in wei), inclusive of <code>maxPriorityFeePerGas</code>. Only applies to <a href=\\\"/docs/glossary/terms#eip-1559-transaction\\\">EIP-1559 Transactions</a></p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#maxfeepergas-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nTotal fee per gas (in wei), inclusive of maxPriorityFeePerGas. Only applies to EIP-1559 Transactions\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  maxFeePerGas: parseGwei(&#x27;20&#x27;),  \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: parseEther(&#x27;1&#x27;)\\n})\\n\",\"title\":\"maxFeePerGas (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#maxpriorityfeepergas-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Max priority fee per gas (in wei). Only applies to <a href=\\\"/docs/glossary/terms#eip-1559-transaction\\\">EIP-1559 Transactions</a></p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxPriorityFeePerGas: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#maxpriorityfeepergas-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nMax priority fee per gas (in wei). Only applies to EIP-1559 Transactions\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  maxFeePerGas: parseGwei(&#x27;20&#x27;),\\n  maxPriorityFeePerGas: parseGwei(&#x27;2&#x27;), \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: parseEther(&#x27;1&#x27;)\\n})\\n\",\"title\":\"maxPriorityFeePerGas (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#nonce-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Unique number identifying this transaction.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#nonce-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nUnique number identifying this transaction.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n,\\n  nonce: 69\\n})\\n\",\"title\":\"nonce (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#value-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Value in wei sent with this transaction.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/window&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#value-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nValue in wei sent with this transaction.\\nimport &#x27;viem/window&#x27;\\n \\n// ---cut---\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n// ---cut---\\n// @noErrors\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: parseEther(&#x27;1&#x27;), \\n  nonce: 69\\n})\\n\",\"title\":\"value (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#tips\",\"html\":\"\\n<ul>\\n<li>For dapps: When using this action, it is assumed that the user has connected to their wallet (e.g. given permission for the dapp to access their accounts via <a href=\\\"/docs/actions/wallet/requestAddresses\\\"><code>requestAddresses</code></a>). You can also check if the user has granted access to their accounts via <a href=\\\"/docs/actions/wallet/getAddresses\\\"><code>getAddresses</code></a></li>\\n</ul>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#tips\",\"isPage\":false,\"text\":\"\\n\\nFor dapps: When using this action, it is assumed that the user has connected to their wallet (e.g. given permission for the dapp to access their accounts via requestAddresses). You can also check if the user has granted access to their accounts via getAddresses\\n\\n\",\"title\":\"Tips\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#live-example\",\"html\":\"\\n<p>Check out the usage of <code>sendTransaction</code> in the live <a href=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\\">Sending Transactions Example</a> below.</p>\\n<iframe frameBorder=\\\"0\\\" width=\\\"100%\\\" height=\\\"500px\\\" src=\\\"https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions?embed=1&amp;file=index.ts&amp;hideNavigation=1&amp;hideDevTools=true&amp;terminalHeight=0&amp;ctl=1\\\"></iframe>\\n\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#live-example\",\"isPage\":false,\"text\":\"\\nCheck out the usage of sendTransaction in the live Sending Transactions Example below.\\n\\n\",\"title\":\"Live Example\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/docs/actions/wallet/sendTransaction#json-rpc-methods\",\"html\":\"\\n<ul>\\n<li>JSON-RPC Accounts:\\n<ul>\\n<li><a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction\\\"><code>eth_sendTransaction</code></a></li>\\n</ul>\\n</li>\\n<li>Local Accounts:\\n<ul>\\n<li><a href=\\\"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction\\\"><code>eth_sendRawTransaction</code></a></li>\\n</ul>\\n</li>\\n</ul>\",\"id\":\"pages/docs/actions/wallet/sendTransaction.md#json-rpc-methods\",\"isPage\":false,\"text\":\"\\n\\nJSON-RPC Accounts:\\n\\neth_sendTransaction\\n\\n\\nLocal Accounts:\\n\\neth_sendRawTransaction\\n\\n\\n\",\"title\":\"JSON-RPC Methods\",\"titles\":[\"sendTransaction\"]}]}}"
