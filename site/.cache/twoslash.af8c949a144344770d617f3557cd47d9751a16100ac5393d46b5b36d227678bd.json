"{\"value\":{\"code\":\"import { privateKeyToAccount } from 'viem/accounts'\\nimport { walletClient } from './config'\\nimport { abi, contractAddress } from './contract'\\n\\nconst eoa = privateKeyToAccount('0x...')\\n\\n// 1. Authorize designation of the Contract onto the EOA.\\nconst authorization = await walletClient.signAuthorization({\\n  account: eoa,\\n  contractAddress,\\n})\\n\\n// 2. Designate the Contract on the EOA, and invoke the \\n//    `initialize` function.\\nconst hash = await walletClient.writeContract({\\n  abi,\\n  address: eoa.address,\\n  authorizationList: [authorization],\\n  //                  ↑ 3. Pass the Authorization as a parameter.\\n  functionName: 'initialize',\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":9,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":61,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const abi: readonly [{\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"initialize\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}, {\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"ping\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}]\\nimport abi\",\"start\":101,\"length\":3,\"target\":\"abi\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const contractAddress: \\\"0x...\\\"\\nimport contractAddress\",\"start\":106,\"length\":15,\"target\":\"contractAddress\",\"line\":2,\"character\":14},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":149,\"length\":3,\"target\":\"eoa\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":155,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":4,\"character\":12},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":249,\"length\":13,\"target\":\"authorization\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":271,\"length\":12,\"target\":\"walletClient\",\"line\":7,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":284,\"length\":17,\"target\":\"signAuthorization\",\"line\":7,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"start\":306,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":315,\"length\":3,\"target\":\"eoa\",\"line\":8,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) contractAddress?: `0x${string}` | undefined\",\"docs\":\"Address of the contract to delegate to.\",\"tags\":[[\"alias\",\"`address`\"]],\"start\":322,\"length\":15,\"target\":\"contractAddress\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":435,\"length\":4,\"target\":\"hash\",\"line\":14,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":448,\"length\":12,\"target\":\"walletClient\",\"line\":14,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) writeContract: <readonly [{\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"initialize\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}, {\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"ping\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}], \\\"initialize\\\", readonly unknown[], undefined>(args: WriteContractParameters<...>) => Promise<WriteContractReturnType>\",\"docs\":\"Executes a write function on a contract.\\n\\n- Docs: https://viem.sh/docs/contract/writeContract\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\\n\\nA \\\"write\\\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\\n\\nInternally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\\n\\n__Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\",\"tags\":[[\"param\",\"args - {@link WriteContractParameters}\"],[\"returns\",\"A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\"],[\"example\",\"import { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.writeContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n})\"],[\"example\",\"// With Validation\\nimport { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst { request } = await client.simulateContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n}\\nconst hash = await client.writeContract(request)\"]],\"start\":461,\"length\":13,\"target\":\"writeContract\",\"line\":14,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"initialize\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}, {\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"ping\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}]\",\"start\":479,\"length\":3,\"target\":\"abi\",\"line\":15,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":486,\"length\":7,\"target\":\"address\",\"line\":16,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":495,\"length\":3,\"target\":\"eoa\",\"line\":16,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":499,\"length\":7,\"target\":\"address\",\"line\":16,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) authorizationList?: AuthorizationList<number, boolean> | undefined\",\"start\":510,\"length\":17,\"target\":\"authorizationList\",\"line\":17,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":530,\"length\":13,\"target\":\"authorization\",\"line\":17,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":614,\"length\":12,\"target\":\"functionName\",\"line\":19,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,2084]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"initialize\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"ping\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":344,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"initialize\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"ping\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":688,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"initialize\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"ping\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1032,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"initialize\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"ping\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1376,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"initialize\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"ping\\\",\\n    \\\"inputs\\\": [],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"pure\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1720,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { sepolia } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' \\n\\nexport const relay = privateKeyToAccount('0x...')\\n \\nexport const walletClient = createWalletClient({\\n  account: relay,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2045,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { walletClient } from './config'\\nimport { abi, contractAddress } from './contract'\\n\\nconst eoa = privateKeyToAccount('0x...')\\n\\n// 1. Authorize designation of the Contract onto the EOA.\\nconst authorization = await walletClient.signAuthorization({\\n  account: eoa,\\n  contractAddress,\\n})\\n\\n// 2. Designate the Contract on the EOA, and invoke the \\n//    `initialize` function.\\nconst hash = await walletClient.writeContract({\\n  abi,\\n  address: eoa.address,\\n  authorizationList: [authorization],\\n  //                  ↑ 3. Pass the Authorization as a parameter.\\n  functionName: 'initialize',\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":9,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":61,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const abi: readonly [{\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"initialize\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}, {\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"ping\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}]\\nimport abi\",\"start\":101,\"length\":3,\"target\":\"abi\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const contractAddress: \\\"0x...\\\"\\nimport contractAddress\",\"start\":106,\"length\":15,\"target\":\"contractAddress\",\"line\":2,\"character\":14},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":149,\"length\":3,\"target\":\"eoa\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":155,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":4,\"character\":12},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":249,\"length\":13,\"target\":\"authorization\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":271,\"length\":12,\"target\":\"walletClient\",\"line\":7,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":284,\"length\":17,\"target\":\"signAuthorization\",\"line\":7,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"start\":306,\"length\":7,\"target\":\"account\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":315,\"length\":3,\"target\":\"eoa\",\"line\":8,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) contractAddress?: `0x${string}` | undefined\",\"docs\":\"Address of the contract to delegate to.\",\"tags\":[[\"alias\",\"`address`\"]],\"start\":322,\"length\":15,\"target\":\"contractAddress\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":435,\"length\":4,\"target\":\"hash\",\"line\":14,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":448,\"length\":12,\"target\":\"walletClient\",\"line\":14,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) writeContract: <readonly [{\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"initialize\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}, {\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"ping\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}], \\\"initialize\\\", readonly unknown[], undefined>(args: WriteContractParameters<...>) => Promise<WriteContractReturnType>\",\"docs\":\"Executes a write function on a contract.\\n\\n- Docs: https://viem.sh/docs/contract/writeContract\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\\n\\nA \\\"write\\\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\\n\\nInternally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\\n\\n__Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\",\"tags\":[[\"param\",\"args - {@link WriteContractParameters}\"],[\"returns\",\"A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\"],[\"example\",\"import { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.writeContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n})\"],[\"example\",\"// With Validation\\nimport { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst { request } = await client.simulateContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n}\\nconst hash = await client.writeContract(request)\"]],\"start\":461,\"length\":13,\"target\":\"writeContract\",\"line\":14,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"initialize\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}, {\\n    readonly type: \\\"function\\\";\\n    readonly name: \\\"ping\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"pure\\\";\\n}]\",\"start\":479,\"length\":3,\"target\":\"abi\",\"line\":15,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":486,\"length\":7,\"target\":\"address\",\"line\":16,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":495,\"length\":3,\"target\":\"eoa\",\"line\":16,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":499,\"length\":7,\"target\":\"address\",\"line\":16,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) authorizationList?: AuthorizationList<number, boolean> | undefined\",\"start\":510,\"length\":17,\"target\":\"authorizationList\",\"line\":17,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":530,\"length\":13,\"target\":\"authorization\",\"line\":17,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":614,\"length\":12,\"target\":\"functionName\",\"line\":19,\"character\":2}],\"tags\":[]}}"
