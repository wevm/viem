"{\"value\":{\"code\":\"import { factory, publicClient } from './config'\\n\\nconst { domain, extensions, fields } = await publicClient.getEip712Domain({ \\n  address: '0x57ba3ec8df619d4d243ce439551cce713bb17411',\\n  factory: factory.address,\\n  factoryData: encodeFunctionData({\\n    abi: factory.abi,\\n    functionName: 'createAccount',\\n    args: ['0x0000000000000000000000000000000000000000', 0n]\\n  }),\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const factory: {\\n    readonly address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"createAccount\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [];\\n    }];\\n}\\nimport factory\",\"start\":9,\"length\":7,\"target\":\"factory\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":18,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const domain: RequiredBy<TypedDataDomain, \\\"name\\\" | \\\"salt\\\" | \\\"chainId\\\" | \\\"verifyingContract\\\" | \\\"version\\\">\",\"start\":58,\"length\":6,\"target\":\"domain\",\"line\":2,\"character\":8},{\"type\":\"hover\",\"text\":\"const extensions: readonly bigint[]\",\"start\":66,\"length\":10,\"target\":\"extensions\",\"line\":2,\"character\":16},{\"type\":\"hover\",\"text\":\"const fields: `0x${string}`\",\"start\":78,\"length\":6,\"target\":\"fields\",\"line\":2,\"character\":28},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":95,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":45},{\"type\":\"hover\",\"text\":\"(property) getEip712Domain: (args: GetEip712DomainParameters) => Promise<GetEip712DomainReturnType>\",\"docs\":\"Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\",\"tags\":[[\"param\",\"client - A {@link Client} instance.\"],[\"param\",\"parameters - The parameters of the action. {@link GetEip712DomainParameters}\"],[\"returns\",\"The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\"],[\"example\",\"```ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst domain = await client.getEip712Domain({\\n  address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\\n})\\n// {\\n//   domain: {\\n//     name: 'ExampleContract',\\n//     version: '1',\\n//     chainId: 1,\\n//     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\\n//   },\\n//   fields: '0x0f',\\n//   extensions: [],\\n// }\\n```\"]],\"start\":108,\"length\":15,\"target\":\"getEip712Domain\",\"line\":2,\"character\":58},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":129,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) factory?: `0x${string}` | undefined\",\"docs\":\"Contract deployment factory address (ie. Create2 factory, Smart Account factory, etc).\",\"start\":186,\"length\":7,\"target\":\"factory\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const factory: {\\n    readonly address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"createAccount\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [];\\n    }];\\n}\\nimport factory\",\"start\":195,\"length\":7,\"target\":\"factory\",\"line\":4,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\"\",\"start\":203,\"length\":7,\"target\":\"address\",\"line\":4,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) factoryData?: `0x${string}` | undefined\",\"docs\":\"Calldata to execute on the factory to deploy the contract.\",\"start\":214,\"length\":11,\"target\":\"factoryData\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":227,\"length\":18,\"target\":\"encodeFunctionData\",\"line\":5,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"createAccount\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n        readonly name: \\\"salt\\\";\\n    }];\\n    readonly outputs: readonly [];\\n}]\",\"start\":252,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const factory: {\\n    readonly address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"createAccount\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [];\\n    }];\\n}\\nimport factory\",\"start\":257,\"length\":7,\"target\":\"factory\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"createAccount\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n        readonly name: \\\"salt\\\";\\n    }];\\n    readonly outputs: readonly [];\\n}]\",\"start\":265,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":274,\"length\":12,\"target\":\"functionName\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) args: (string | bigint)[]\",\"start\":309,\"length\":4,\"target\":\"args\",\"line\":8,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,418]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const factory = {\\n  address: '0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb',\\n  abi: parseAbi(['function createAccount(address owner, uint256 salt)']),\\n} as const\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":379,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { factory, publicClient } from './config'\\n\\nconst { domain, extensions, fields } = await publicClient.getEip712Domain({ \\n  address: '0x57ba3ec8df619d4d243ce439551cce713bb17411',\\n  factory: factory.address,\\n  factoryData: encodeFunctionData({\\n    abi: factory.abi,\\n    functionName: 'createAccount',\\n    args: ['0x0000000000000000000000000000000000000000', 0n]\\n  }),\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const factory: {\\n    readonly address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"createAccount\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [];\\n    }];\\n}\\nimport factory\",\"start\":9,\"length\":7,\"target\":\"factory\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":18,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const domain: RequiredBy<TypedDataDomain, \\\"name\\\" | \\\"salt\\\" | \\\"chainId\\\" | \\\"verifyingContract\\\" | \\\"version\\\">\",\"start\":58,\"length\":6,\"target\":\"domain\",\"line\":2,\"character\":8},{\"type\":\"hover\",\"text\":\"const extensions: readonly bigint[]\",\"start\":66,\"length\":10,\"target\":\"extensions\",\"line\":2,\"character\":16},{\"type\":\"hover\",\"text\":\"const fields: `0x${string}`\",\"start\":78,\"length\":6,\"target\":\"fields\",\"line\":2,\"character\":28},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":95,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":45},{\"type\":\"hover\",\"text\":\"(property) getEip712Domain: (args: GetEip712DomainParameters) => Promise<GetEip712DomainReturnType>\",\"docs\":\"Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\",\"tags\":[[\"param\",\"client - A {@link Client} instance.\"],[\"param\",\"parameters - The parameters of the action. {@link GetEip712DomainParameters}\"],[\"returns\",\"The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\"],[\"example\",\"```ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst domain = await client.getEip712Domain({\\n  address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\\n})\\n// {\\n//   domain: {\\n//     name: 'ExampleContract',\\n//     version: '1',\\n//     chainId: 1,\\n//     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\\n//   },\\n//   fields: '0x0f',\\n//   extensions: [],\\n// }\\n```\"]],\"start\":108,\"length\":15,\"target\":\"getEip712Domain\",\"line\":2,\"character\":58},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":129,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) factory?: `0x${string}` | undefined\",\"docs\":\"Contract deployment factory address (ie. Create2 factory, Smart Account factory, etc).\",\"start\":186,\"length\":7,\"target\":\"factory\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const factory: {\\n    readonly address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"createAccount\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [];\\n    }];\\n}\\nimport factory\",\"start\":195,\"length\":7,\"target\":\"factory\",\"line\":4,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\"\",\"start\":203,\"length\":7,\"target\":\"address\",\"line\":4,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) factoryData?: `0x${string}` | undefined\",\"docs\":\"Calldata to execute on the factory to deploy the contract.\",\"start\":214,\"length\":11,\"target\":\"factoryData\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":227,\"length\":18,\"target\":\"encodeFunctionData\",\"line\":5,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"createAccount\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n        readonly name: \\\"salt\\\";\\n    }];\\n    readonly outputs: readonly [];\\n}]\",\"start\":252,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const factory: {\\n    readonly address: \\\"0xE8Df82fA4E10e6A12a9Dab552bceA2acd26De9bb\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"createAccount\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [];\\n    }];\\n}\\nimport factory\",\"start\":257,\"length\":7,\"target\":\"factory\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"createAccount\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"owner\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n        readonly name: \\\"salt\\\";\\n    }];\\n    readonly outputs: readonly [];\\n}]\",\"start\":265,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":274,\"length\":12,\"target\":\"functionName\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) args: (string | bigint)[]\",\"start\":309,\"length\":4,\"target\":\"args\",\"line\":8,\"character\":4}],\"tags\":[]}}"
