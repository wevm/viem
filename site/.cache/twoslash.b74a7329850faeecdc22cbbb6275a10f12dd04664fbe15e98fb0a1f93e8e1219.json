"{\"value\":{\"code\":\"const credential = await createWebAuthnCredential({\\n  excludeCredentialIds: ['abc', 'def'], // [!code focus]\\n  name: 'Example',\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const credential: P256Credential\",\"start\":6,\"length\":10,\"target\":\"credential\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWebAuthnCredential(parameters: CreateWebAuthnCredentialParameters): Promise<CreateWebAuthnCredentialReturnType>\\nimport createWebAuthnCredential\",\"start\":25,\"length\":24,\"target\":\"createWebAuthnCredential\",\"line\":0,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) excludeCredentialIds?: readonly string[] | undefined\",\"docs\":\"List of credential IDs to exclude from the creation. This property can be used\\nto prevent creation of a credential if it already exists.\",\"start\":54,\"length\":20,\"target\":\"excludeCredentialIds\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"docs\":\"Name for the credential (user.name).\",\"start\":111,\"length\":4,\"target\":\"name\",\"line\":2,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,100]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { createWebAuthnCredential, toWebAuthnAccount } from 'viem/account-abstraction'\\n// ---cut---\\nconst credential = await createWebAuthnCredential({\\n  excludeCredentialIds: ['abc', 'def'], // [!code focus]\\n  name: 'Example',\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const credential: P256Credential\",\"start\":6,\"length\":10,\"target\":\"credential\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWebAuthnCredential(parameters: CreateWebAuthnCredentialParameters): Promise<CreateWebAuthnCredentialReturnType>\\nimport createWebAuthnCredential\",\"start\":25,\"length\":24,\"target\":\"createWebAuthnCredential\",\"line\":0,\"character\":25},{\"type\":\"hover\",\"text\":\"(property) excludeCredentialIds?: readonly string[] | undefined\",\"docs\":\"List of credential IDs to exclude from the creation. This property can be used\\nto prevent creation of a credential if it already exists.\",\"start\":54,\"length\":20,\"target\":\"excludeCredentialIds\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"docs\":\"Name for the credential (user.name).\",\"start\":111,\"length\":4,\"target\":\"name\",\"line\":2,\"character\":2}],\"tags\":[]}}"
