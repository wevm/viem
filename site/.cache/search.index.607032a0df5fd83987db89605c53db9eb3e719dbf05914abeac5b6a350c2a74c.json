"{\"value\":{\"mdx\":\"# Gasless USDC Transfers with Circle Paymaster\\n\\n## Overview\\n\\n:::info\\nThis guide is maintained by [Circle](https://www.circle.com).\\n:::\\n\\nIn this guide, we'll show how to send USDC on the Arbitrum Sepolia testnet **without needing any ETH for gas**, using [Circle's Paymaster service](https://developers.circle.com/stablecoins/paymaster-overview) with Viem's Account Abstraction.\\n\\nWe'll use a Smart Account (via EIP-7702) to perform a USDC transfer. The Circle Paymaster will sponsor the gas in exchange for a small USDC fee, authorized by our signed permit.\\n\\nBy the end of this tutorial, you'll know how to:\\n\\n* Set up a **Viem Client** and a **Smart Account** on Arbitrum Sepolia\\n* **Check the USDC balance** for the smart account\\n* Create an **EIP-2612 permit signature** authorizing the Paymaster to spend USDC for gas fees\\n* Configure a **Paymaster and Bundler** (using Pimlico's bundler) to handle gas payment in USDC\\n* **Send a User Operation** that transfers USDC to a recipient, with gas fees paid in USDC via the Paymaster\\n\\nLet's get started with the environment setup, then walk through each step of the gasless USDC transfer.\\n\\n::::steps\\n\\n## Set up Client and Smart Account\\n\\n```ts twoslash [config.ts] filename=\\\"config.ts\\\"\\nimport { createClient, http, publicActions, walletActions } from 'viem'\\nimport { arbitrumSepolia } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { toSimple7702SmartAccount } from 'viem/account-abstraction'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n\\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n\\nexport const paymasterAddress = '0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966'\\nexport const usdcAddress = '0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d' \\n```\\n\\n## Verify USDC Balance\\n\\nBefore sending a gasless transaction, ensure the smart account has enough USDC to cover the transfer and the gas fee (in USDC). \\n\\nWe will read the USDC token balance of our smart account. If it is below a threshold (here we require at least **1 USDC**), the script will prompt you to fund the account via Circle's [USDC testnet faucet](https://faucet.circle.com) and then exit:\\n\\n```ts [paymaster.ts]\\nconst usdc = getContract({ client, address: usdcAddress, abi: erc20Abi })\\nconst usdcBalance = await usdc.read.balanceOf([account.address])\\n\\nif (usdcBalance < 1000000n) {\\n  console.log(\\n    `Fund ${account.address} with USDC on ${client.chain.name} using https://faucet.circle.com, then run this again.`,\\n  )\\n  process.exit(1)\\n}\\n```\\n\\n## Create an EIP-2612 Permit\\n\\nCircle's Paymaster requires a **permit signature** from the user to authorize it to spend USDC for gas. We'll use the EIP-2612 permit standard (supported by USDC) to allow the Paymaster contract to pull a certain amount of USDC from our account to cover gas fees.\\n\\n```ts twoslash [utils.ts]\\n// @noErrors\\nimport { \\n  Address,\\n  erc20Abi, \\n  maxUint256, \\n  getContract, \\n  parseErc6492Signature, \\n} from 'viem'\\nimport { account, client } from './config'\\n\\nconst eip2612Abi = [\\n  ...erc20Abi,\\n  {\\n    inputs: [\\n      {\\n        internalType: 'address',\\n        name: 'owner',\\n        type: 'address',\\n      },\\n    ],\\n    stateMutability: 'view',\\n    type: 'function',\\n    name: 'nonces',\\n    outputs: [\\n      {\\n        internalType: 'uint256',\\n        name: '',\\n        type: 'uint256',\\n      },\\n    ],\\n  },\\n  {\\n    inputs: [],\\n    name: 'version',\\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\\n    stateMutability: 'view',\\n    type: 'function',\\n  },\\n] as const\\n\\nexport async function signPermit({\\n  permitAmount,\\n  spenderAddress,\\n  tokenAddress,\\n}: {\\n  permitAmount: bigint,\\n  spenderAddress: Address,\\n  tokenAddress: Address,\\n}) {\\n  const token = getContract({\\n    client,\\n    address: tokenAddress,\\n    abi: eip2612Abi,\\n  })\\n\\n  const signature = await account.signTypedData(permitData)\\n\\n  const [name, version, nonce] = await Promise.all([\\n    token.read.name(),\\n    token.read.version(),\\n    token.read.nonces([ownerAddress])\\n  ])\\n\\n  const isValid = await client.verifyTypedData({\\n    address: account.address,\\n    types: {\\n      Permit: [\\n        { name: 'owner', type: 'address' },\\n        { name: 'spender', type: 'address' },\\n        { name: 'value', type: 'uint256' },\\n        { name: 'nonce', type: 'uint256' },\\n        { name: 'deadline', type: 'uint256' },\\n      ],\\n    },\\n    primaryType: 'Permit',\\n    domain: {\\n      chainId: chain.id,\\n      name,\\n      verifyingContract: token.address,\\n      version,\\n    },\\n    message: {\\n      owner: ownerAddress,\\n      spender: spenderAddress,\\n      value,\\n      nonce,\\n      deadline: maxUint256,\\n    },\\n    signature,\\n  })\\n\\n  if (!isValid) \\n    throw new Error(\\n      `Invalid permit signature for ${account.address}: ${wrappedPermitSignature}`,\\n    )\\n  \\n\\n  const { signature: unwrappedSignature } = parseErc6492Signature(wrappedPermitSignature)\\n  return unwrappedSignature\\n}\\n```\\n\\n## Set up the Paymaster Configuration\\n\\nNow we configure the Paymaster configuration for our User Operation using the permit we just prepared. \\n\\nViem's account abstraction allows us to provide a custom **Paymaster** object with a getPaymasterData method. \\n\\nThe bundler will call this method to attach the necessary paymaster info to our User Operation. In this method, we'll generate the permit signature on the fly and pack it into the required format:\\n\\n```ts twoslash [paymaster.ts]\\n// @noErrors\\nimport { parseUnits } from 'viem'\\nimport { BundlerClientConfig } from 'viem/account-abstraction'\\nimport { paymasterAddress } from './config'\\nimport { signPermit } from './utils'\\n\\nexport const paymaster: BundlerClientConfig['paymaster'] = {\\n  async getPaymasterData(parameters) {\\n    const permitAmount = parseUnits('10', 6) // 10 USDC\\n\\n    const permitSignature = await signPermit({\\n      permitAmount,\\n      spenderAddress: paymasterAddress,\\n      tokenAddress: usdcAddress,\\n    })\\n\\n    const paymasterData = encodePacked(\\n      ['uint8', 'address', 'uint256', 'bytes'],\\n      [0, usdcAddress, permitAmount, permitSignature],\\n    )\\n\\n    return {\\n      paymaster: paymasterAddress,\\n      paymasterData,\\n      paymasterVerificationGasLimit: 200_000n,\\n      paymasterPostOpGasLimit: 15_000n,\\n      isFinal: true,\\n    }\\n  },\\n}\\n```\\n\\n## Initialize Bundler Client\\n\\nNext, set up the Bundler Client that will send our User Operation. \\n\\nWe'll use **Pimlico's Public Bundler** for Arbitrum Sepolia:\\n\\n```ts twoslash [example.ts]\\n// @noErrors\\nimport { createBundlerClient, http } from 'viem/account-abstraction'\\nimport { account, client } from './config'\\nimport { paymaster } from './paymaster'\\n\\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  paymaster,\\n  transport: http(`https://public.pimlico.io/v2/${client.chain.id}/rpc`),\\n  userOperation: {\\n    estimateFeesPerGas: async ({ account, bundlerClient, userOperation }) => {\\n      const { standard: fees } = await bundlerClient.request({\\n        method: 'pimlico_getUserOperationGasPrice',\\n      })\\n      const maxFeePerGas = hexToBigInt(fees.maxFeePerGas)\\n      const maxPriorityFeePerGas = hexToBigInt(fees.maxPriorityFeePerGas)\\n      return { maxFeePerGas, maxPriorityFeePerGas }\\n    },\\n  },\\n})\\n```\\n\\n## Send the User Operation\\n\\nFinally, we create the User Operation to transfer USDC from our smart account to the recipient, and send it via the bundler. There are two parts here: **signing the smart account authorization** and **sending the User Operation** with the USDC transfer call.\\n\\n```ts twoslash [example.ts]\\nimport { erc20Abi, parseUnits } from 'viem'\\nimport { account, client, usdcAddress } from './config'\\nimport { paymaster } from './paymaster'\\n\\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  paymaster,\\n  transport: http(`https://public.pimlico.io/v2/${client.chain.id}/rpc`),\\n  userOperation: {\\n    estimateFeesPerGas: async ({ account, bundlerClient, userOperation }) => {\\n      const { standard: fees } = await bundlerClient.request({\\n        method: 'pimlico_getUserOperationGasPrice',\\n      })\\n      const maxFeePerGas = hexToBigInt(fees.maxFeePerGas)\\n      const maxPriorityFeePerGas = hexToBigInt(fees.maxPriorityFeePerGas)\\n      return { maxFeePerGas, maxPriorityFeePerGas }\\n    },\\n  },\\n})\\n\\nconst authorization = await client.signAuthorization(account.authorization) // [!code focus:99]\\n\\nconst hash = await bundlerClient.sendUserOperation({\\n  account,\\n  authorization,\\n  calls: [\\n    {\\n      to: usdcAddress,\\n      abi: erc20Abi,\\n      functionName: 'transfer',\\n      args: ['0x{recipient}', parseUnits('10', 6)], // 10 USDC\\n    },\\n  ],\\n})\\n\\nconst receipt = await bundlerClient.waitForUserOperationReceipt({ hash })\\n```\\n\\n**Congratulations!** You've successfully sent a USDC transfer on Arbitrum Sepolia without using any ETH for gas.\\n\\n::::\\n\",\"document\":[{\"href\":\"/circle-usdc/guides/paymaster#gasless-usdc-transfers-with-circle-paymaster\",\"html\":\"</header>\\n\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#gasless-usdc-transfers-with-circle-paymaster\",\"isPage\":true,\"text\":\"\\n\",\"title\":\"Gasless USDC Transfers with Circle Paymaster\",\"titles\":[]},{\"href\":\"/circle-usdc/guides/paymaster#overview\",\"html\":\"\\n<aside data-callout=\\\"info\\\"><p>This guide is maintained by <a href=\\\"https://www.circle.com\\\">Circle</a>.</p></aside>\\n<p>In this guide, we&#x27;ll show how to send USDC on the Arbitrum Sepolia testnet <strong>without needing any ETH for gas</strong>, using <a href=\\\"https://developers.circle.com/stablecoins/paymaster-overview\\\">Circle&#x27;s Paymaster service</a> with Viem&#x27;s Account Abstraction.</p>\\n<p>We&#x27;ll use a Smart Account (via EIP-7702) to perform a USDC transfer. The Circle Paymaster will sponsor the gas in exchange for a small USDC fee, authorized by our signed permit.</p>\\n<p>By the end of this tutorial, you&#x27;ll know how to:</p>\\n<ul>\\n<li>Set up a <strong>Viem Client</strong> and a <strong>Smart Account</strong> on Arbitrum Sepolia</li>\\n<li><strong>Check the USDC balance</strong> for the smart account</li>\\n<li>Create an <strong>EIP-2612 permit signature</strong> authorizing the Paymaster to spend USDC for gas fees</li>\\n<li>Configure a <strong>Paymaster and Bundler</strong> (using Pimlico&#x27;s bundler) to handle gas payment in USDC</li>\\n<li><strong>Send a User Operation</strong> that transfers USDC to a recipient, with gas fees paid in USDC via the Paymaster</li>\\n</ul>\\n<p>Let&#x27;s get started with the environment setup, then walk through each step of the gasless USDC transfer.</p>\\n<div data-vocs-steps=\\\"true\\\"><div data-depth=\\\"2\\\">\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#overview\",\"isPage\":false,\"text\":\"\\nThis guide is maintained by Circle.\\nIn this guide, we&#x27;ll show how to send USDC on the Arbitrum Sepolia testnet without needing any ETH for gas, using Circle&#x27;s Paymaster service with Viem&#x27;s Account Abstraction.\\nWe&#x27;ll use a Smart Account (via EIP-7702) to perform a USDC transfer. The Circle Paymaster will sponsor the gas in exchange for a small USDC fee, authorized by our signed permit.\\nBy the end of this tutorial, you&#x27;ll know how to:\\n\\nSet up a Viem Client and a Smart Account on Arbitrum Sepolia\\nCheck the USDC balance for the smart account\\nCreate an EIP-2612 permit signature authorizing the Paymaster to spend USDC for gas fees\\nConfigure a Paymaster and Bundler (using Pimlico&#x27;s bundler) to handle gas payment in USDC\\nSend a User Operation that transfers USDC to a recipient, with gas fees paid in USDC via the Paymaster\\n\\nLet&#x27;s get started with the environment setup, then walk through each step of the gasless USDC transfer.\\n\",\"title\":\"Overview\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]},{\"href\":\"/circle-usdc/guides/paymaster#set-up-client-and-smart-account\",\"html\":\"<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts&quot; filename=&quot;config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http, publicActions, walletActions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { arbitrumSepolia } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toSimple7702SmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: arbitrumSepolia, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicActions)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(walletActions)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSimple7702SmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ client, owner })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdcAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span></code></pre></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#set-up-client-and-smart-account\",\"isPage\":false,\"text\":\"import { createClient, http, publicActions, walletActions } from &#x27;viem&#x27;\\nimport { arbitrumSepolia } from &#x27;viem/chains&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { toSimple7702SmartAccount } from &#x27;viem/account-abstraction&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n \\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n \\nexport const paymasterAddress = &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;\\nexport const usdcAddress = &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27; \",\"title\":\"Set up Client and Smart Account\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]},{\"href\":\"/circle-usdc/guides/paymaster#verify-usdc-balance\",\"html\":\"<p>Before sending a gasless transaction, ensure the smart account has enough USDC to cover the transfer and the gas fee (in USDC).</p><p>We will read the USDC token balance of our smart account. If it is below a threshold (here we require at least <strong>1 USDC</strong>), the script will prompt you to fund the account via Circle&#x27;s <a href=\\\"https://faucet.circle.com\\\">USDC testnet faucet</a> and then exit:</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"paymaster.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdc</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getContract</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ client, address: usdcAddress, abi: erc20Abi })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdcBalance</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> usdc.read.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">balanceOf</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([account.address])</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (usdcBalance </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 1000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    `Fund ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">account</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">address</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">} with USDC on ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">chain</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">name</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">} using https://faucet.circle.com, then run this again.`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  )</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  process.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">exit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#verify-usdc-balance\",\"isPage\":false,\"text\":\"Before sending a gasless transaction, ensure the smart account has enough USDC to cover the transfer and the gas fee (in USDC).We will read the USDC token balance of our smart account. If it is below a threshold (here we require at least 1 USDC), the script will prompt you to fund the account via Circle&#x27;s USDC testnet faucet and then exit:const usdc = getContract({ client, address: usdcAddress, abi: erc20Abi })\\nconst usdcBalance = await usdc.read.balanceOf([account.address])\\n \\nif (usdcBalance &lt; 1000000n) {\\n  console.log(\\n    `Fund ${account.address} with USDC on ${client.chain.name} using https://faucet.circle.com, then run this again.`,\\n  )\\n  process.exit(1)\\n}\",\"title\":\"Verify USDC Balance\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]},{\"href\":\"/circle-usdc/guides/paymaster#create-an-eip-2612-permit\",\"html\":\"<p>Circle&#x27;s Paymaster requires a <strong>permit signature</strong> from the user to authorize it to spend USDC for gas. We&#x27;ll use the EIP-2612 permit standard (supported by USDC) to allow the Paymaster contract to pull a certain amount of USDC from our account to cover gas fees.</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"utils.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http, publicActions, walletActions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { arbitrumSepolia } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toSimple7702SmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: arbitrumSepolia, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicActions)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(walletActions)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSimple7702SmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ client, owner })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdcAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  Address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  erc20Abi, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  maxUint256, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  getContract, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  parseErc6492Signature, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> eip2612Abi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  ...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">erc20Abi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        internalType: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;owner&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;view&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;function&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;nonces&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        internalType: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;version&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    outputs: [{ internalType: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;string&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;string&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    stateMutability: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;view&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;function&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> async</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> signPermit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  permitAmount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  spenderAddress</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  tokenAddress</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  permitAmount</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bigint</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  spenderAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> Address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  tokenAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> Address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> token</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getContract</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    address: tokenAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    abi: eip2612Abi,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> signature</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> account.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signTypedData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(permitData)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">version</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">nonce</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">all</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    token.read.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    token.read.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">version</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    token.read.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">nonces</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([ownerAddress])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ])</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> isValid</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">verifyTypedData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    address: account.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    types: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      Permit: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;owner&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;spender&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;value&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;nonce&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;deadline&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    primaryType: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Permit&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    domain: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      chainId: chain.id,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      name,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      verifyingContract: token.address,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      version,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    message: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      owner: ownerAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      spender: spenderAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      value,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      nonce,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      deadline: maxUint256,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    signature,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">isValid) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    throw</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">      `Invalid permit signature for ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">account</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">address</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}: ${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">wrappedPermitSignature</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    )</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">signature</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">unwrappedSignature</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> parseErc6492Signature</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(wrappedPermitSignature)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> unwrappedSignature</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#create-an-eip-2612-permit\",\"isPage\":false,\"text\":\"Circle&#x27;s Paymaster requires a permit signature from the user to authorize it to spend USDC for gas. We&#x27;ll use the EIP-2612 permit standard (supported by USDC) to allow the Paymaster contract to pull a certain amount of USDC from our account to cover gas fees.// @filename: config.ts\\nimport { createClient, http, publicActions, walletActions } from &#x27;viem&#x27;\\nimport { arbitrumSepolia } from &#x27;viem/chains&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { toSimple7702SmartAccount } from &#x27;viem/account-abstraction&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n \\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n \\nexport const paymasterAddress = &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;\\nexport const usdcAddress = &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27; \\n// @filename: example.js\\n \\n// ---cut---\\n// @noErrors\\nimport { \\n  Address,\\n  erc20Abi, \\n  maxUint256, \\n  getContract, \\n  parseErc6492Signature, \\n} from &#x27;viem&#x27;\\nimport { account, client } from &#x27;./config&#x27;\\n \\nconst eip2612Abi = [\\n  ...erc20Abi,\\n  {\\n    inputs: [\\n      {\\n        internalType: &#x27;address&#x27;,\\n        name: &#x27;owner&#x27;,\\n        type: &#x27;address&#x27;,\\n      },\\n    ],\\n    stateMutability: &#x27;view&#x27;,\\n    type: &#x27;function&#x27;,\\n    name: &#x27;nonces&#x27;,\\n    outputs: [\\n      {\\n        internalType: &#x27;uint256&#x27;,\\n        name: &#x27;&#x27;,\\n        type: &#x27;uint256&#x27;,\\n      },\\n    ],\\n  },\\n  {\\n    inputs: [],\\n    name: &#x27;version&#x27;,\\n    outputs: [{ internalType: &#x27;string&#x27;, name: &#x27;&#x27;, type: &#x27;string&#x27; }],\\n    stateMutability: &#x27;view&#x27;,\\n    type: &#x27;function&#x27;,\\n  },\\n] as const\\n \\nexport async function signPermit({\\n  permitAmount,\\n  spenderAddress,\\n  tokenAddress,\\n}: {\\n  permitAmount: bigint,\\n  spenderAddress: Address,\\n  tokenAddress: Address,\\n}) {\\n  const token = getContract({\\n    client,\\n    address: tokenAddress,\\n    abi: eip2612Abi,\\n  })\\n \\n  const signature = await account.signTypedData(permitData)\\n \\n  const [name, version, nonce] = await Promise.all([\\n    token.read.name(),\\n    token.read.version(),\\n    token.read.nonces([ownerAddress])\\n  ])\\n \\n  const isValid = await client.verifyTypedData({\\n    address: account.address,\\n    types: {\\n      Permit: [\\n        { name: &#x27;owner&#x27;, type: &#x27;address&#x27; },\\n        { name: &#x27;spender&#x27;, type: &#x27;address&#x27; },\\n        { name: &#x27;value&#x27;, type: &#x27;uint256&#x27; },\\n        { name: &#x27;nonce&#x27;, type: &#x27;uint256&#x27; },\\n        { name: &#x27;deadline&#x27;, type: &#x27;uint256&#x27; },\\n      ],\\n    },\\n    primaryType: &#x27;Permit&#x27;,\\n    domain: {\\n      chainId: chain.id,\\n      name,\\n      verifyingContract: token.address,\\n      version,\\n    },\\n    message: {\\n      owner: ownerAddress,\\n      spender: spenderAddress,\\n      value,\\n      nonce,\\n      deadline: maxUint256,\\n    },\\n    signature,\\n  })\\n \\n  if (!isValid) \\n    throw new Error(\\n      `Invalid permit signature for ${account.address}: ${wrappedPermitSignature}`,\\n    )\\n  \\n \\n  const { signature: unwrappedSignature } = parseErc6492Signature(wrappedPermitSignature)\\n  return unwrappedSignature\\n}\",\"title\":\"Create an EIP-2612 Permit\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]},{\"href\":\"/circle-usdc/guides/paymaster#set-up-the-paymaster-configuration\",\"html\":\"<p>Now we configure the Paymaster configuration for our User Operation using the permit we just prepared.</p><p>Viem&#x27;s account abstraction allows us to provide a custom <strong>Paymaster</strong> object with a getPaymasterData method.</p><p>The bundler will call this method to attach the necessary paymaster info to our User Operation. In this method, we&#x27;ll generate the permit signature on the fly and pack it into the required format:</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"paymaster.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http, publicActions, walletActions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { arbitrumSepolia } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toSimple7702SmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: arbitrumSepolia, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicActions)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(walletActions)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSimple7702SmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ client, owner })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdcAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { parseUnits } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { BundlerClientConfig } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { paymasterAddress } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { signPermit } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./utils&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymaster</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> BundlerClientConfig</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">[</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;paymaster&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getPaymasterData</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">parameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> permitAmount</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> parseUnits</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;10&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">6</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 10 USDC</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> permitSignature</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> signPermit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      permitAmount,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      spenderAddress: paymasterAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      tokenAddress: usdcAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterData</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodePacked</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;bytes&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, usdcAddress, permitAmount, permitSignature],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    )</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      paymaster: paymasterAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      paymasterData,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      paymasterVerificationGasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">200_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      paymasterPostOpGasLimit: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">15_000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      isFinal: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#set-up-the-paymaster-configuration\",\"isPage\":false,\"text\":\"Now we configure the Paymaster configuration for our User Operation using the permit we just prepared.Viem&#x27;s account abstraction allows us to provide a custom Paymaster object with a getPaymasterData method.The bundler will call this method to attach the necessary paymaster info to our User Operation. In this method, we&#x27;ll generate the permit signature on the fly and pack it into the required format:// @filename: config.ts\\nimport { createClient, http, publicActions, walletActions } from &#x27;viem&#x27;\\nimport { arbitrumSepolia } from &#x27;viem/chains&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { toSimple7702SmartAccount } from &#x27;viem/account-abstraction&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n \\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n \\nexport const paymasterAddress = &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;\\nexport const usdcAddress = &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27; \\n// @filename: example.js\\n \\n// ---cut---\\n// @noErrors\\nimport { parseUnits } from &#x27;viem&#x27;\\nimport { BundlerClientConfig } from &#x27;viem/account-abstraction&#x27;\\nimport { paymasterAddress } from &#x27;./config&#x27;\\nimport { signPermit } from &#x27;./utils&#x27;\\n \\nexport const paymaster: BundlerClientConfig[&#x27;paymaster&#x27;] = {\\n  async getPaymasterData(parameters) {\\n    const permitAmount = parseUnits(&#x27;10&#x27;, 6) // 10 USDC\\n \\n    const permitSignature = await signPermit({\\n      permitAmount,\\n      spenderAddress: paymasterAddress,\\n      tokenAddress: usdcAddress,\\n    })\\n \\n    const paymasterData = encodePacked(\\n      [&#x27;uint8&#x27;, &#x27;address&#x27;, &#x27;uint256&#x27;, &#x27;bytes&#x27;],\\n      [0, usdcAddress, permitAmount, permitSignature],\\n    )\\n \\n    return {\\n      paymaster: paymasterAddress,\\n      paymasterData,\\n      paymasterVerificationGasLimit: 200_000n,\\n      paymasterPostOpGasLimit: 15_000n,\\n      isFinal: true,\\n    }\\n  },\\n}\",\"title\":\"Set up the Paymaster Configuration\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]},{\"href\":\"/circle-usdc/guides/paymaster#initialize-bundler-client\",\"html\":\"<p>Next, set up the Bundler Client that will send our User Operation.</p><p>We&#x27;ll use <strong>Pimlico&#x27;s Public Bundler</strong> for Arbitrum Sepolia:</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http, publicActions, walletActions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { arbitrumSepolia } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toSimple7702SmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: arbitrumSepolia, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicActions)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(walletActions)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSimple7702SmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ client, owner })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdcAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @noErrors</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createBundlerClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { paymaster } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./paymaster&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`https://public.pimlico.io/v2/${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">chain</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">id</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}/rpc`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  userOperation: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    estimateFeesPerGas</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">bundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">userOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">standard</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">fees</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> bundlerClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;pimlico_getUserOperationGasPrice&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> maxFeePerGas</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> hexToBigInt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(fees.maxFeePerGas)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> maxPriorityFeePerGas</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> hexToBigInt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(fees.maxPriorityFeePerGas)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { maxFeePerGas, maxPriorityFeePerGas }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-depth=\\\"2\\\">\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#initialize-bundler-client\",\"isPage\":false,\"text\":\"Next, set up the Bundler Client that will send our User Operation.We&#x27;ll use Pimlico&#x27;s Public Bundler for Arbitrum Sepolia:// @filename: config.ts\\nimport { createClient, http, publicActions, walletActions } from &#x27;viem&#x27;\\nimport { arbitrumSepolia } from &#x27;viem/chains&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { toSimple7702SmartAccount } from &#x27;viem/account-abstraction&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n \\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n \\nexport const paymasterAddress = &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;\\nexport const usdcAddress = &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27; \\n// @filename: example.js\\n \\n// ---cut---\\n// @noErrors\\nimport { createBundlerClient, http } from &#x27;viem/account-abstraction&#x27;\\nimport { account, client } from &#x27;./config&#x27;\\nimport { paymaster } from &#x27;./paymaster&#x27;\\n \\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  paymaster,\\n  transport: http(`https://public.pimlico.io/v2/${client.chain.id}/rpc`),\\n  userOperation: {\\n    estimateFeesPerGas: async ({ account, bundlerClient, userOperation }) =&gt; {\\n      const { standard: fees } = await bundlerClient.request({\\n        method: &#x27;pimlico_getUserOperationGasPrice&#x27;,\\n      })\\n      const maxFeePerGas = hexToBigInt(fees.maxFeePerGas)\\n      const maxPriorityFeePerGas = hexToBigInt(fees.maxPriorityFeePerGas)\\n      return { maxFeePerGas, maxPriorityFeePerGas }\\n    },\\n  },\\n})\",\"title\":\"Initialize Bundler Client\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]},{\"href\":\"/circle-usdc/guides/paymaster#send-the-user-operation\",\"html\":\"<p>Finally, we create the User Operation to transfer USDC from our smart account to the recipient, and send it via the bundler. There are two parts here: <strong>signing the smart account authorization</strong> and <strong>sending the User Operation</strong> with the USDC transfer call.</p><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: config.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createClient, http, publicActions, walletActions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { arbitrumSepolia } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toSimple7702SmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: owner,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: arbitrumSepolia, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(publicActions)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  .</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(walletActions)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toSimple7702SmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ client, owner })</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> paymasterAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> usdcAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { erc20Abi, parseUnits } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, client, usdcAddress } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { paymaster } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./paymaster&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> bundlerClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createBundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`https://public.pimlico.io/v2/${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">client</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">chain</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">id</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}/rpc`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  userOperation: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    estimateFeesPerGas</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> ({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">bundlerClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">userOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">standard</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">fees</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> bundlerClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;pimlico_getUserOperationGasPrice&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> maxFeePerGas</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> hexToBigInt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(fees.maxFeePerGas)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> maxPriorityFeePerGas</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> hexToBigInt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(fees.maxPriorityFeePerGas)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { maxFeePerGas, maxPriorityFeePerGas }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> authorization</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signAuthorization</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(account.authorization) </span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> bundlerClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendUserOperation</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  authorization,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  calls: [</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      to: usdcAddress,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      abi: erc20Abi,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      functionName: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;transfer&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      args: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x{recipient}&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseUnits</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;10&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">6</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)], </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 10 USDC</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line focused\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> receipt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> bundlerClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">waitForUserOperationReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ hash })</span></span></code></pre><p><strong>Congratulations!</strong> You&#x27;ve successfully sent a USDC transfer on Arbitrum Sepolia without using any ETH for gas.</p></div></div>\",\"id\":\"pages/circle-usdc/guides/paymaster.mdx#send-the-user-operation\",\"isPage\":false,\"text\":\"Finally, we create the User Operation to transfer USDC from our smart account to the recipient, and send it via the bundler. There are two parts here: signing the smart account authorization and sending the User Operation with the USDC transfer call.// @filename: config.ts\\nimport { createClient, http, publicActions, walletActions } from &#x27;viem&#x27;\\nimport { arbitrumSepolia } from &#x27;viem/chains&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { toSimple7702SmartAccount } from &#x27;viem/account-abstraction&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n \\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n \\nexport const paymasterAddress = &#x27;0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966&#x27;\\nexport const usdcAddress = &#x27;0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d&#x27; \\n// @filename: example.js\\n \\n// ---cut---\\nimport { erc20Abi, parseUnits } from &#x27;viem&#x27;\\nimport { account, client, usdcAddress } from &#x27;./config&#x27;\\nimport { paymaster } from &#x27;./paymaster&#x27;\\n \\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  paymaster,\\n  transport: http(`https://public.pimlico.io/v2/${client.chain.id}/rpc`),\\n  userOperation: {\\n    estimateFeesPerGas: async ({ account, bundlerClient, userOperation }) =&gt; {\\n      const { standard: fees } = await bundlerClient.request({\\n        method: &#x27;pimlico_getUserOperationGasPrice&#x27;,\\n      })\\n      const maxFeePerGas = hexToBigInt(fees.maxFeePerGas)\\n      const maxPriorityFeePerGas = hexToBigInt(fees.maxPriorityFeePerGas)\\n      return { maxFeePerGas, maxPriorityFeePerGas }\\n    },\\n  },\\n})\\n \\nconst authorization = await client.signAuthorization(account.authorization) \\n \\nconst hash = await bundlerClient.sendUserOperation({\\n  account,\\n  authorization,\\n  calls: [\\n    {\\n      to: usdcAddress,\\n      abi: erc20Abi,\\n      functionName: &#x27;transfer&#x27;,\\n      args: [&#x27;0x{recipient}&#x27;, parseUnits(&#x27;10&#x27;, 6)], // 10 USDC\\n    },\\n  ],\\n})\\n \\nconst receipt = await bundlerClient.waitForUserOperationReceipt({ hash })Congratulations! You&#x27;ve successfully sent a USDC transfer on Arbitrum Sepolia without using any ETH for gas.\",\"title\":\"Send the User Operation\",\"titles\":[\"Gasless USDC Transfers with Circle Paymaster\"]}]}}"
