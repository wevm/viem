"{\"value\":{\"code\":\"import { parseAbi } from 'viem'\\nimport { client } from './config'\\n\\nconst abi = parseAbi([\\n  'function totalSupply() returns (uint256)',\\n  'function ownerOf(uint256) returns (address)',\\n])\\n \\nconst { results } = await client.simulateCalls({\\n  calls: [\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'totalSupply',\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'ownerOf',\\n      args: [69420n],\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'ownerOf',\\n      args: [13371337n],\\n    },\\n  ],\\n})\\n\\nconsole.log(results)\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":41,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":73,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function totalSupply() returns (uint256)\\\", \\\"function ownerOf(uint256) returns (address)\\\"]>(signatures: [\\\"function totalSupply() returns (uint256)\\\", \\\"function ownerOf(uint256) returns (address)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":79,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const results: [({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n})]\",\"docs\":\"Call results.\",\"start\":198,\"length\":7,\"target\":\"results\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":216,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) simulateCalls: <readonly [{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"totalSupply\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [];\\n        readonly outputs: readonly [...];\\n    }, {\\n        ...;\\n    }];\\n    readonly functionName: \\\"totalSupply\\\";\\n}, {\\n    ...;\\n}, {\\n    ...;\\n}]>(args: SimulateCallsParameters<...>) => Promise<...>\",\"docs\":\"Simulates a set of calls.\",\"tags\":[[\"example\",\"```ts\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst result = await client.simulateCalls({\\n  account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n  calls: [{\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1'),\\n    },\\n  ]\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link SimulateCallsParameters}\"],[\"returns\",\"Results. {@link SimulateCallsReturnType}\"]],\"start\":223,\"length\":13,\"target\":\"simulateCalls\",\"line\":8,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"totalSupply\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [];\\n        readonly outputs: readonly [...];\\n    }, {\\n        ...;\\n    }];\\n    readonly functionName: \\\"totalSupply\\\";\\n}, {}>>, Prettify<...>, Prettify<...>]\",\"docs\":\"Calls to simulate.\",\"start\":241,\"length\":5,\"target\":\"calls\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":262,\"length\":2,\"target\":\"to\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":318,\"length\":3,\"target\":\"abi\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"totalSupply\\\" | \\\"ownerOf\\\"\",\"start\":329,\"length\":12,\"target\":\"functionName\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":377,\"length\":2,\"target\":\"to\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":433,\"length\":3,\"target\":\"abi\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"totalSupply\\\" | \\\"ownerOf\\\"\",\"start\":444,\"length\":12,\"target\":\"functionName\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [bigint]\",\"start\":475,\"length\":4,\"target\":\"args\",\"line\":19,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":510,\"length\":2,\"target\":\"to\",\"line\":22,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":566,\"length\":3,\"target\":\"abi\",\"line\":23,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"totalSupply\\\" | \\\"ownerOf\\\"\",\"start\":577,\"length\":12,\"target\":\"functionName\",\"line\":24,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [bigint]\",\"start\":608,\"length\":4,\"target\":\"args\",\"line\":25,\"character\":6},{\"type\":\"hover\",\"text\":\"namespace console\\nvar console: Console\",\"docs\":\"The `console` module provides a simple debugging console that is similar to the\\nJavaScript console mechanism provided by web browsers.\\n\\nThe module exports two specific components:\\n\\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v20.x/api/process.html#processstdout) and\\n[`process.stderr`](https://nodejs.org/docs/latest-v20.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\\n\\n_**Warning**_: The global console object's methods are neither consistently\\nsynchronous like the browser APIs they resemble, nor are they consistently\\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v20.x/api/process.html#a-note-on-process-io) for\\nmore information.\\n\\nExample using the global `console`:\\n\\n```js\\nconsole.log('hello world');\\n// Prints: hello world, to stdout\\nconsole.log('hello %s', 'world');\\n// Prints: hello world, to stdout\\nconsole.error(new Error('Whoops, something bad happened'));\\n// Prints error message and stack trace to stderr:\\n//   Error: Whoops, something bad happened\\n//     at [eval]:5:15\\n//     at Script.runInThisContext (node:vm:132:18)\\n//     at Object.runInThisContext (node:vm:309:38)\\n//     at node:internal/process/execution:77:19\\n//     at [eval]-wrapper:6:22\\n//     at evalScript (node:internal/process/execution:76:60)\\n//     at node:internal/main/eval_string:23:3\\n\\nconst name = 'Will Robinson';\\nconsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to stderr\\n```\\n\\nExample using the `Console` class:\\n\\n```js\\nconst out = getStreamSomehow();\\nconst err = getStreamSomehow();\\nconst myConsole = new console.Console(out, err);\\n\\nmyConsole.log('hello world');\\n// Prints: hello world, to out\\nmyConsole.log('hello %s', 'world');\\n// Prints: hello world, to out\\nmyConsole.error(new Error('Whoops, something bad happened'));\\n// Prints: [Error: Whoops, something bad happened], to err\\n\\nconst name = 'Will Robinson';\\nmyConsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to err\\n```\",\"tags\":[[\"see\",\"[source](https://github.com/nodejs/node/blob/v20.11.1/lib/console.js)\"]],\"start\":643,\"length\":7,\"target\":\"console\",\"line\":30,\"character\":0},{\"type\":\"hover\",\"text\":\"(method) Console.log(...data: any[]): void (+2 overloads)\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)\",\"start\":651,\"length\":3,\"target\":\"log\",\"line\":30,\"character\":8},{\"type\":\"hover\",\"text\":\"const results: [({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n})]\",\"docs\":\"Call results.\",\"start\":655,\"length\":7,\"target\":\"results\",\"line\":30,\"character\":12},{\"type\":\"tag\",\"name\":\"log\",\"start\":664,\"length\":0,\"text\":\"[\",\"line\":31,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":665,\"length\":0,\"text\":\"  {\",\"line\":32,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":666,\"length\":0,\"text\":\"    result: 424122n,\",\"line\":33,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":667,\"length\":0,\"text\":\"    status: \\\"success\\\",\",\"line\":34,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":668,\"length\":0,\"text\":\"  },\",\"line\":35,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":669,\"length\":0,\"text\":\"  {\",\"line\":36,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":670,\"length\":0,\"text\":\"    result: \\\"0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b\\\",\",\"line\":37,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":671,\"length\":0,\"text\":\"    status: \\\"success\\\",\",\"line\":38,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":672,\"length\":0,\"text\":\"  },\",\"line\":39,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":673,\"length\":0,\"text\":\"  {\",\"line\":40,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":674,\"length\":0,\"text\":\"    error: [ContractFunctionExecutionError: token has no owner],\",\"line\":41,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":675,\"length\":0,\"text\":\"    status: \\\"failure\\\",\",\"line\":42,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":676,\"length\":0,\"text\":\"  },\",\"line\":43,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":677,\"length\":0,\"text\":\"]\",\"line\":45,\"character\":0}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[1859,1870],[1844,1858],[1811,1843],[1736,1810],[1722,1735],[1707,1721],[1674,1706],[1606,1673],[1592,1605],[1577,1591],[1544,1576],[1513,1543],[1499,1512],[1487,1498],[0,823]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"[\",\"start\":1487,\"end\":1498},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  {\",\"start\":1499,\"end\":1512},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"    result: 424122n,\",\"start\":1513,\"end\":1543},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"    status: \\\"success\\\",\",\"start\":1544,\"end\":1576},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  },\",\"start\":1577,\"end\":1591},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  {\",\"start\":1592,\"end\":1605},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"    result: \\\"0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b\\\",\",\"start\":1606,\"end\":1673},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"    status: \\\"success\\\",\",\"start\":1674,\"end\":1706},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  },\",\"start\":1707,\"end\":1721},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  {\",\"start\":1722,\"end\":1735},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"    error: [ContractFunctionExecutionError: token has no owner],\",\"start\":1736,\"end\":1810},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"    status: \\\"failure\\\",\",\"start\":1811,\"end\":1843},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  },\",\"start\":1844,\"end\":1858},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"]\",\"start\":1859,\"end\":1870}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":196,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":392,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":588,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":784,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseAbi } from 'viem'\\nimport { client } from './config'\\n\\nconst abi = parseAbi([\\n  'function totalSupply() returns (uint256)',\\n  'function ownerOf(uint256) returns (address)',\\n])\\n \\nconst { results } = await client.simulateCalls({\\n  calls: [\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'totalSupply',\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'ownerOf',\\n      args: [69420n],\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'ownerOf',\\n      args: [13371337n],\\n    },\\n  ],\\n})\\n\\nconsole.log(results)\\n// @log: [\\n\\n// @log:   {\\n\\n// @log:     result: 424122n,\\n\\n// @log:     status: \\\"success\\\",\\n\\n// @log:   },\\n\\n// @log:   {\\n\\n// @log:     result: \\\"0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b\\\",\\n\\n// @log:     status: \\\"success\\\",\\n\\n// @log:   },\\n\\n// @log:   {\\n\\n// @log:     error: [ContractFunctionExecutionError: token has no owner],\\n\\n// @log:     status: \\\"failure\\\",\\n\\n// @log:   },\\n\\n// @log: ]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":41,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":73,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function totalSupply() returns (uint256)\\\", \\\"function ownerOf(uint256) returns (address)\\\"]>(signatures: [\\\"function totalSupply() returns (uint256)\\\", \\\"function ownerOf(uint256) returns (address)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":79,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const results: [({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n})]\",\"docs\":\"Call results.\",\"start\":198,\"length\":7,\"target\":\"results\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":216,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) simulateCalls: <readonly [{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"totalSupply\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [];\\n        readonly outputs: readonly [...];\\n    }, {\\n        ...;\\n    }];\\n    readonly functionName: \\\"totalSupply\\\";\\n}, {\\n    ...;\\n}, {\\n    ...;\\n}]>(args: SimulateCallsParameters<...>) => Promise<...>\",\"docs\":\"Simulates a set of calls.\",\"tags\":[[\"example\",\"```ts\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst result = await client.simulateCalls({\\n  account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n  calls: [{\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1'),\\n    },\\n  ]\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link SimulateCallsParameters}\"],[\"returns\",\"Results. {@link SimulateCallsReturnType}\"]],\"start\":223,\"length\":13,\"target\":\"simulateCalls\",\"line\":8,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"totalSupply\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [];\\n        readonly outputs: readonly [...];\\n    }, {\\n        ...;\\n    }];\\n    readonly functionName: \\\"totalSupply\\\";\\n}, {}>>, Prettify<...>, Prettify<...>]\",\"docs\":\"Calls to simulate.\",\"start\":241,\"length\":5,\"target\":\"calls\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":262,\"length\":2,\"target\":\"to\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":318,\"length\":3,\"target\":\"abi\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"totalSupply\\\" | \\\"ownerOf\\\"\",\"start\":329,\"length\":12,\"target\":\"functionName\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":377,\"length\":2,\"target\":\"to\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":433,\"length\":3,\"target\":\"abi\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"totalSupply\\\" | \\\"ownerOf\\\"\",\"start\":444,\"length\":12,\"target\":\"functionName\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [bigint]\",\"start\":475,\"length\":4,\"target\":\"args\",\"line\":19,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":510,\"length\":2,\"target\":\"to\",\"line\":22,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"totalSupply\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [];\\n    readonly outputs: readonly [{\\n        readonly type: \\\"uint256\\\";\\n    }];\\n}, {\\n    readonly name: \\\"ownerOf\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [...];\\n    readonly outputs: readonly [...];\\n}]\",\"start\":566,\"length\":3,\"target\":\"abi\",\"line\":23,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"totalSupply\\\" | \\\"ownerOf\\\"\",\"start\":577,\"length\":12,\"target\":\"functionName\",\"line\":24,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [bigint]\",\"start\":608,\"length\":4,\"target\":\"args\",\"line\":25,\"character\":6},{\"type\":\"hover\",\"text\":\"namespace console\\nvar console: Console\",\"docs\":\"The `console` module provides a simple debugging console that is similar to the\\nJavaScript console mechanism provided by web browsers.\\n\\nThe module exports two specific components:\\n\\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v20.x/api/process.html#processstdout) and\\n[`process.stderr`](https://nodejs.org/docs/latest-v20.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\\n\\n_**Warning**_: The global console object's methods are neither consistently\\nsynchronous like the browser APIs they resemble, nor are they consistently\\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v20.x/api/process.html#a-note-on-process-io) for\\nmore information.\\n\\nExample using the global `console`:\\n\\n```js\\nconsole.log('hello world');\\n// Prints: hello world, to stdout\\nconsole.log('hello %s', 'world');\\n// Prints: hello world, to stdout\\nconsole.error(new Error('Whoops, something bad happened'));\\n// Prints error message and stack trace to stderr:\\n//   Error: Whoops, something bad happened\\n//     at [eval]:5:15\\n//     at Script.runInThisContext (node:vm:132:18)\\n//     at Object.runInThisContext (node:vm:309:38)\\n//     at node:internal/process/execution:77:19\\n//     at [eval]-wrapper:6:22\\n//     at evalScript (node:internal/process/execution:76:60)\\n//     at node:internal/main/eval_string:23:3\\n\\nconst name = 'Will Robinson';\\nconsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to stderr\\n```\\n\\nExample using the `Console` class:\\n\\n```js\\nconst out = getStreamSomehow();\\nconst err = getStreamSomehow();\\nconst myConsole = new console.Console(out, err);\\n\\nmyConsole.log('hello world');\\n// Prints: hello world, to out\\nmyConsole.log('hello %s', 'world');\\n// Prints: hello world, to out\\nmyConsole.error(new Error('Whoops, something bad happened'));\\n// Prints: [Error: Whoops, something bad happened], to err\\n\\nconst name = 'Will Robinson';\\nmyConsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to err\\n```\",\"tags\":[[\"see\",\"[source](https://github.com/nodejs/node/blob/v20.11.1/lib/console.js)\"]],\"start\":643,\"length\":7,\"target\":\"console\",\"line\":30,\"character\":0},{\"type\":\"hover\",\"text\":\"(method) Console.log(...data: any[]): void (+2 overloads)\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)\",\"start\":651,\"length\":3,\"target\":\"log\",\"line\":30,\"character\":8},{\"type\":\"hover\",\"text\":\"const results: [({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n}), ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n})]\",\"docs\":\"Call results.\",\"start\":655,\"length\":7,\"target\":\"results\",\"line\":30,\"character\":12}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":664,\"length\":0,\"text\":\"[\",\"line\":31,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":665,\"length\":0,\"text\":\"  {\",\"line\":32,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":666,\"length\":0,\"text\":\"    result: 424122n,\",\"line\":33,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":667,\"length\":0,\"text\":\"    status: \\\"success\\\",\",\"line\":34,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":668,\"length\":0,\"text\":\"  },\",\"line\":35,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":669,\"length\":0,\"text\":\"  {\",\"line\":36,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":670,\"length\":0,\"text\":\"    result: \\\"0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b\\\",\",\"line\":37,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":671,\"length\":0,\"text\":\"    status: \\\"success\\\",\",\"line\":38,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":672,\"length\":0,\"text\":\"  },\",\"line\":39,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":673,\"length\":0,\"text\":\"  {\",\"line\":40,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":674,\"length\":0,\"text\":\"    error: [ContractFunctionExecutionError: token has no owner],\",\"line\":41,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":675,\"length\":0,\"text\":\"    status: \\\"failure\\\",\",\"line\":42,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":676,\"length\":0,\"text\":\"  },\",\"line\":43,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":677,\"length\":0,\"text\":\"]\",\"line\":45,\"character\":0}]}}"
