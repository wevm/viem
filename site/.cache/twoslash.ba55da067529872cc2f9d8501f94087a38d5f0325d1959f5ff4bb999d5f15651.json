"{\"value\":{\"code\":\"import { walletClient } from './config'\\nimport { contractAddress } from './contract'\\n \\nconst authorization = await walletClient.signAuthorization({ // [!code focus]\\n  contractAddress, // [!code focus]\\n}) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const contractAddress: \\\"0x...\\\"\\nimport contractAddress\",\"start\":49,\"length\":15,\"target\":\"contractAddress\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":93,\"length\":13,\"target\":\"authorization\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":115,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/experimental/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/experimental/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":128,\"length\":17,\"target\":\"signAuthorization\",\"line\":3,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":167,\"length\":15,\"target\":\"contractAddress\",\"line\":4,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,2747]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":579,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1158,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1737,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { anvil } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' \\nimport { eip7702Actions } from 'viem/experimental'\\n\\nexport const account = privateKeyToAccount('0x...')\\n \\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: anvil,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2129,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nexport const abi = [\\n  {\\n    \\\"type\\\": \\\"function\\\",\\n    \\\"name\\\": \\\"execute\\\",\\n    \\\"inputs\\\": [\\n      {\\n        \\\"name\\\": \\\"calls\\\",\\n        \\\"type\\\": \\\"tuple[]\\\",\\n        \\\"components\\\": [\\n          {\\n            \\\"name\\\": \\\"data\\\",\\n            \\\"type\\\": \\\"bytes\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"to\\\",\\n            \\\"type\\\": \\\"address\\\",\\n          },\\n          {\\n            \\\"name\\\": \\\"value\\\",\\n            \\\"type\\\": \\\"uint256\\\",\\n          }\\n        ]\\n      }\\n    ],\\n    \\\"outputs\\\": [],\\n    \\\"stateMutability\\\": \\\"payable\\\"\\n  },\\n] as const\\n\\nexport const contractAddress = '0x...'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2708,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { walletClient } from './config'\\nimport { contractAddress } from './contract'\\n \\nconst authorization = await walletClient.signAuthorization({ // [!code focus]\\n  contractAddress, // [!code focus]\\n}) // [!code focus]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":9,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const contractAddress: \\\"0x...\\\"\\nimport contractAddress\",\"start\":49,\"length\":15,\"target\":\"contractAddress\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":93,\"length\":13,\"target\":\"authorization\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":115,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/experimental/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/experimental/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":128,\"length\":17,\"target\":\"signAuthorization\",\"line\":3,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) contractAddress: `0x${string}`\",\"docs\":\"Address of the contract to set as code for the Authority.\",\"start\":167,\"length\":15,\"target\":\"contractAddress\",\"line\":4,\"character\":2}],\"tags\":[]}}"
