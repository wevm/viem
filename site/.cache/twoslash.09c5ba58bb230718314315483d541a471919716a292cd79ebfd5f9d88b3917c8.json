"{\"value\":{\"code\":\"const result = client.signTypedData({\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n\\n  primaryType: 'Mail',\\n\\n  message: {\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const result: Promise<`0x${string}`>\",\"start\":6,\"length\":6,\"target\":\"result\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: {\\n        address: \\\"0x\\\";\\n        type: \\\"json-rpc\\\";\\n    };\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":15,\"length\":6,\"target\":\"client\",\"line\":0,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) signTypedData: <{\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}, \\\"Mail\\\">(args: SignTypedDataParameters<...>) => Promise<SignTypedDataReturnType>\",\"docs\":\"Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message) + message))`.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTypedData\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"args - {@link SignTypedDataParameters}\"],[\"returns\",\"The signed data. {@link SignTypedDataReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst signature = await client.signTypedData({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst signature = await client.signTypedData({\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"]],\"start\":22,\"length\":13,\"target\":\"signTypedData\",\"line\":0,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) domain?: {\\n    chainId?: number | bigint | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    salt?: `0x${string}` | undefined;\\n    verifyingContract?: `0x${string}` | undefined;\\n    version?: string | undefined | undefined;\\n} | undefined\",\"start\":40,\"length\":6,\"target\":\"domain\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name?: string | undefined\",\"start\":54,\"length\":4,\"target\":\"name\",\"line\":2,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) version?: string | undefined\",\"start\":78,\"length\":7,\"target\":\"version\",\"line\":3,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) chainId?: number | bigint | undefined\",\"start\":96,\"length\":7,\"target\":\"chainId\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) verifyingContract?: `0x${string}` | undefined\",\"start\":112,\"length\":17,\"target\":\"verifyingContract\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) types: {\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}\",\"start\":185,\"length\":5,\"target\":\"types\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) Person: readonly [{\\n    readonly name: \\\"name\\\";\\n    readonly type: \\\"string\\\";\\n}, {\\n    readonly name: \\\"wallet\\\";\\n    readonly type: \\\"address\\\";\\n}]\",\"start\":198,\"length\":6,\"target\":\"Person\",\"line\":9,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: \\\"name\\\"\",\"start\":216,\"length\":4,\"target\":\"name\",\"line\":10,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"string\\\"\",\"start\":230,\"length\":4,\"target\":\"type\",\"line\":10,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) name: \\\"wallet\\\"\",\"start\":256,\"length\":4,\"target\":\"name\",\"line\":11,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"address\\\"\",\"start\":272,\"length\":4,\"target\":\"type\",\"line\":11,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) Mail: readonly [{\\n    readonly name: \\\"from\\\";\\n    readonly type: \\\"Person\\\";\\n}, {\\n    readonly name: \\\"to\\\";\\n    readonly type: \\\"Person\\\";\\n}, {\\n    readonly name: \\\"contents\\\";\\n    readonly type: \\\"string\\\";\\n}]\",\"start\":302,\"length\":4,\"target\":\"Mail\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: \\\"from\\\"\",\"start\":318,\"length\":4,\"target\":\"name\",\"line\":14,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"Person\\\"\",\"start\":332,\"length\":4,\"target\":\"type\",\"line\":14,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) name: \\\"to\\\"\",\"start\":358,\"length\":4,\"target\":\"name\",\"line\":15,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"Person\\\"\",\"start\":370,\"length\":4,\"target\":\"type\",\"line\":15,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) name: \\\"contents\\\"\",\"start\":396,\"length\":4,\"target\":\"name\",\"line\":16,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"string\\\"\",\"start\":414,\"length\":4,\"target\":\"type\",\"line\":16,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) primaryType: \\\"Person\\\" | \\\"Mail\\\"\",\"start\":447,\"length\":11,\"target\":\"primaryType\",\"line\":20,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: {\\n    from: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    to: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    contents: string;\\n}\",\"start\":471,\"length\":7,\"target\":\"message\",\"line\":22,\"character\":2},{\"type\":\"query\",\"text\":\"(property) message: {\\n    from: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    to: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    contents: string;\\n}\",\"start\":471,\"length\":7,\"target\":\"message\",\"line\":22,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":498,\"length\":4,\"target\":\"from\",\"line\":35,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":512,\"length\":4,\"target\":\"name\",\"line\":36,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":531,\"length\":6,\"target\":\"wallet\",\"line\":37,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":596,\"length\":2,\"target\":\"to\",\"line\":39,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":608,\"length\":4,\"target\":\"name\",\"line\":40,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":627,\"length\":6,\"target\":\"wallet\",\"line\":41,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) contents: string\",\"start\":692,\"length\":8,\"target\":\"contents\",\"line\":43,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[640,650],[0,158]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { createWalletClient, http, erc20Abi, parseAbi } from 'viem'\\n\\nconst client = createWalletClient({\\n  account: '0x',\\n  transport: http()\\n})\\n// ---cut---\\nconst result = client.signTypedData({\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n\\n  primaryType: 'Mail',\\n\\n  message: {\\n    // ^?\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[634],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[{\"type\":\"query\",\"text\":\"(property) message: {\\n    from: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    to: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    contents: string;\\n}\",\"start\":471,\"length\":7,\"target\":\"message\",\"line\":22,\"character\":2}],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const result: Promise<`0x${string}`>\",\"start\":6,\"length\":6,\"target\":\"result\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: {\\n        address: \\\"0x\\\";\\n        type: \\\"json-rpc\\\";\\n    };\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":15,\"length\":6,\"target\":\"client\",\"line\":0,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) signTypedData: <{\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}, \\\"Mail\\\">(args: SignTypedDataParameters<...>) => Promise<SignTypedDataReturnType>\",\"docs\":\"Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message) + message))`.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTypedData\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"args - {@link SignTypedDataParameters}\"],[\"returns\",\"The signed data. {@link SignTypedDataReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst signature = await client.signTypedData({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst signature = await client.signTypedData({\\n  domain: {\\n    name: 'Ether Mail',\\n    version: '1',\\n    chainId: 1,\\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n  },\\n  types: {\\n    Person: [\\n      { name: 'name', type: 'string' },\\n      { name: 'wallet', type: 'address' },\\n    ],\\n    Mail: [\\n      { name: 'from', type: 'Person' },\\n      { name: 'to', type: 'Person' },\\n      { name: 'contents', type: 'string' },\\n    ],\\n  },\\n  primaryType: 'Mail',\\n  message: {\\n    from: {\\n      name: 'Cow',\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\\n    },\\n    to: {\\n      name: 'Bob',\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\\n    },\\n    contents: 'Hello, Bob!',\\n  },\\n})\"]],\"start\":22,\"length\":13,\"target\":\"signTypedData\",\"line\":0,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) domain?: {\\n    chainId?: number | bigint | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    salt?: `0x${string}` | undefined;\\n    verifyingContract?: `0x${string}` | undefined;\\n    version?: string | undefined | undefined;\\n} | undefined\",\"start\":40,\"length\":6,\"target\":\"domain\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) name?: string | undefined\",\"start\":54,\"length\":4,\"target\":\"name\",\"line\":2,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) version?: string | undefined\",\"start\":78,\"length\":7,\"target\":\"version\",\"line\":3,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) chainId?: number | bigint | undefined\",\"start\":96,\"length\":7,\"target\":\"chainId\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) verifyingContract?: `0x${string}` | undefined\",\"start\":112,\"length\":17,\"target\":\"verifyingContract\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) types: {\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}\",\"start\":185,\"length\":5,\"target\":\"types\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) Person: readonly [{\\n    readonly name: \\\"name\\\";\\n    readonly type: \\\"string\\\";\\n}, {\\n    readonly name: \\\"wallet\\\";\\n    readonly type: \\\"address\\\";\\n}]\",\"start\":198,\"length\":6,\"target\":\"Person\",\"line\":9,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: \\\"name\\\"\",\"start\":216,\"length\":4,\"target\":\"name\",\"line\":10,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"string\\\"\",\"start\":230,\"length\":4,\"target\":\"type\",\"line\":10,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) name: \\\"wallet\\\"\",\"start\":256,\"length\":4,\"target\":\"name\",\"line\":11,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"address\\\"\",\"start\":272,\"length\":4,\"target\":\"type\",\"line\":11,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) Mail: readonly [{\\n    readonly name: \\\"from\\\";\\n    readonly type: \\\"Person\\\";\\n}, {\\n    readonly name: \\\"to\\\";\\n    readonly type: \\\"Person\\\";\\n}, {\\n    readonly name: \\\"contents\\\";\\n    readonly type: \\\"string\\\";\\n}]\",\"start\":302,\"length\":4,\"target\":\"Mail\",\"line\":13,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: \\\"from\\\"\",\"start\":318,\"length\":4,\"target\":\"name\",\"line\":14,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"Person\\\"\",\"start\":332,\"length\":4,\"target\":\"type\",\"line\":14,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) name: \\\"to\\\"\",\"start\":358,\"length\":4,\"target\":\"name\",\"line\":15,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"Person\\\"\",\"start\":370,\"length\":4,\"target\":\"type\",\"line\":15,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) name: \\\"contents\\\"\",\"start\":396,\"length\":4,\"target\":\"name\",\"line\":16,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) type: \\\"string\\\"\",\"start\":414,\"length\":4,\"target\":\"type\",\"line\":16,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) primaryType: \\\"Person\\\" | \\\"Mail\\\"\",\"start\":447,\"length\":11,\"target\":\"primaryType\",\"line\":20,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: {\\n    from: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    to: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    contents: string;\\n}\",\"start\":471,\"length\":7,\"target\":\"message\",\"line\":22,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":498,\"length\":4,\"target\":\"from\",\"line\":35,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":512,\"length\":4,\"target\":\"name\",\"line\":36,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":531,\"length\":6,\"target\":\"wallet\",\"line\":37,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":596,\"length\":2,\"target\":\"to\",\"line\":39,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":608,\"length\":4,\"target\":\"name\",\"line\":40,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":627,\"length\":6,\"target\":\"wallet\",\"line\":41,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) contents: string\",\"start\":692,\"length\":8,\"target\":\"contents\",\"line\":43,\"character\":4}],\"tags\":[]}}"
