"{\"value\":{\"code\":\"const userOperation = await bundlerClient.prepareUserOperation({\\n  account,\\n  calls: [{ // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('1') // [!code focus]\\n  }] // [!code focus]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const userOperation: any\",\"start\":6,\"length\":13,\"target\":\"userOperation\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\\nimport bundlerClient\",\"start\":28,\"length\":13,\"target\":\"bundlerClient\",\"line\":0,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) prepareUserOperation: <readonly unknown[], {\\n    readonly account: any;\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }];\\n}, any>(parameters: PrepareUserOperationParameters<undefined, any, readonly unknown[], {\\n    readonly account: any;\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }];\\n}>) => Promise<...>\",\"docs\":\"Prepares a User Operation and fills in missing properties.\\n\\n- Docs: https://viem.sh/actions/bundler/prepareUserOperation\",\"tags\":[[\"param\",\"args - {@link PrepareUserOperationParameters}\"],[\"returns\",\"The User Operation. {@link PrepareUserOperationReturnType}\"],[\"example\",\"import { createBundlerClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { toSmartAccount } from 'viem/accounts'\\n\\nconst account = await toSmartAccount({ ... })\\n\\nconst client = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst request = await client.prepareUserOperation({\\n  account,\\n  calls: [{ to: '0x...', value: parseEther('1') }],\\n})\"]],\"start\":42,\"length\":20,\"target\":\"prepareUserOperation\",\"line\":0,\"character\":42},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":67,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}]\",\"start\":78,\"length\":5,\"target\":\"calls\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":109,\"length\":2,\"target\":\"to\",\"line\":3,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":180,\"length\":5,\"target\":\"value\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":187,\"length\":10,\"target\":\"parseEther\",\"line\":4,\"character\":11}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1837]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\\n\\nexport const bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":569,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\\n\\nexport const bundlerClient = createBundlerClient({\\n  account, // [!code ++]\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1152,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\\n\\nexport const bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1710,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { bundlerClient } from './config'\\nimport { parseEther } from 'viem'\\n// ---cut---\\nconst userOperation = await bundlerClient.prepareUserOperation({\\n  account,\\n  calls: [{ // [!code focus]\\n    to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n    value: parseEther('1') // [!code focus]\\n  }] // [!code focus]\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const userOperation: any\",\"start\":6,\"length\":13,\"target\":\"userOperation\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\\nimport bundlerClient\",\"start\":28,\"length\":13,\"target\":\"bundlerClient\",\"line\":0,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) prepareUserOperation: <readonly unknown[], {\\n    readonly account: any;\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }];\\n}, any>(parameters: PrepareUserOperationParameters<undefined, any, readonly unknown[], {\\n    readonly account: any;\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }];\\n}>) => Promise<...>\",\"docs\":\"Prepares a User Operation and fills in missing properties.\\n\\n- Docs: https://viem.sh/actions/bundler/prepareUserOperation\",\"tags\":[[\"param\",\"args - {@link PrepareUserOperationParameters}\"],[\"returns\",\"The User Operation. {@link PrepareUserOperationReturnType}\"],[\"example\",\"import { createBundlerClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { toSmartAccount } from 'viem/accounts'\\n\\nconst account = await toSmartAccount({ ... })\\n\\nconst client = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst request = await client.prepareUserOperation({\\n  account,\\n  calls: [{ to: '0x...', value: parseEther('1') }],\\n})\"]],\"start\":42,\"length\":20,\"target\":\"prepareUserOperation\",\"line\":0,\"character\":42},{\"type\":\"hover\",\"text\":\"(property) account: any\",\"start\":67,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}]\",\"start\":78,\"length\":5,\"target\":\"calls\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":109,\"length\":2,\"target\":\"to\",\"line\":3,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":180,\"length\":5,\"target\":\"value\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":187,\"length\":10,\"target\":\"parseEther\",\"line\":4,\"character\":11}],\"tags\":[]}}"
