"{\"value\":{\"mdx\":\"---\\ndescription: Generates ABI encoded data.\\n---\\n\\n# encodeAbiParameters\\n\\nGenerates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec.html), given a set of ABI parameters (`inputs`/`outputs`) and their corresponding values.\\n\\nThe `encodeAbiParameters` function is used by the other contract encoding utilities (ie. `encodeFunctionData`, `encodeEventTopics`, etc).\\n\\n## Import\\n\\n```ts\\nimport { encodeAbiParameters } from 'viem'\\n```\\n\\n## Usage\\n\\nThe `encodeAbiParameters` function takes in two parameters:\\n\\n- a set of ABI Parameters (`params`), that can be in the shape of the `inputs` or `outputs` attribute of an ABI Item.\\n- a set of values (`values`) that correspond to the given `params`.\\n\\n\\n```ts\\nimport { encodeAbiParameters } from 'viem'\\n\\nconst encodedData = encodeAbiParameters(\\n  [\\n    { name: 'x', type: 'string' },\\n    { name: 'y', type: 'uint' },\\n    { name: 'z', type: 'bool' }\\n  ],\\n  ['wagmi', 420n, true]\\n)\\n// 0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000\\n```\\n\\n### Human Readable\\n\\nYou can also pass in [Human Readable](/docs/glossary/terms#human-readable-abi) parameters with the [`parseAbiParameters` utility](/docs/abi/parseAbiParameters).\\n\\n```ts\\nimport { encodeAbiParameters, parseAbiParameters } from 'viem'\\n\\nconst encodedData = encodeAbiParameters(\\n  parseAbiParameters('string x, uint y, bool z'),\\n  ['wagmi', 420n, true]\\n)\\n// 0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000\\n```\\n\\n## Returns\\n\\n[`Hex`](/docs/glossary/types#hex)\\n\\nThe ABI encoded data.\\n\\n## Parameters\\n\\n### params\\n\\n- **Type**: [`AbiParameter[]`](/docs/glossary/terms#abiparameter)\\n\\nThe set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI event/function.\\n\\nThese parameters must include valid [ABI types](https://docs.soliditylang.org/en/develop/abi-spec#types).\\n\\n```ts\\nencodeAbiParameters(\\n  [{ name: 'x', type: 'uint32' }], // [!code focus]\\n  [69420]\\n)\\n```\\n\\n### values\\n\\n- **Type**: [`AbiParametersToPrimitiveTypes<AbiParameter[]>`](/docs/glossary/terms#abiparameterstoprimitivetypes)\\n\\nThe set of primitive values that correspond to the ABI types defined in `params`.\\n\\n```ts\\nencodeAbiParameters(\\n  [{ name: 'x', type: 'uint32' }],\\n  [69420] // [!code focus]\\n)\\n```\\n\\n## More Examples\\n\\n### Simple struct\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { abi } from './abi'\\n\\nconst encodedData = encodeAbiParameters(\\n  abi[0].inputs,\\n  [{\\n    x: 420n,\\n    y: true,\\n    z: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n  }],\\n)\\n// 0x00000000000000000000000000000000000000000000000000000000000001a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac\\n```\\n\\n```ts [abi.ts]\\nexport const abi = [\\n  {\\n    name: 'staticStruct',\\n    inputs: [\\n      {\\n        components: [\\n          {\\n            name: 'x',\\n            type: 'uint256',\\n          },\\n          {\\n            name: 'y',\\n            type: 'bool',\\n          },\\n          {\\n            name: 'z',\\n            type: 'address',\\n          },\\n        ],\\n        name: 'foo',\\n        type: 'tuple',\\n      },\\n    ],\\n  }\\n] as const\\n```\\n\\n```solidity [Example.sol]\\ncontract Example {\\n  struct Foo {\\n    uint256 x;\\n    bool y;\\n    address z;\\n  }\\n\\n  function staticStruct(Foo calldata foo) { ... }\\n}\\n```\\n\\n:::\\n\",\"document\":[{\"href\":\"/docs/abi/encodeAbiParameters#encodeabiparameters\",\"html\":\"</header>\\n<p>Generates ABI encoded data using the <a href=\\\"https://docs.soliditylang.org/en/latest/abi-spec.html\\\">ABI specification</a>, given a set of ABI parameters (<code>inputs</code>/<code>outputs</code>) and their corresponding values.</p>\\n<p>The <code>encodeAbiParameters</code> function is used by the other contract encoding utilities (ie. <code>encodeFunctionData</code>, <code>encodeEventTopics</code>, etc).</p>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#encodeabiparameters\",\"isPage\":true,\"text\":\"\\nGenerates ABI encoded data using the ABI specification, given a set of ABI parameters (inputs/outputs) and their corresponding values.\\nThe encodeAbiParameters function is used by the other contract encoding utilities (ie. encodeFunctionData, encodeEventTopics, etc).\\n\",\"title\":\"encodeAbiParameters\",\"titles\":[]},{\"href\":\"/docs/abi/encodeAbiParameters#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeAbiParameters } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#import\",\"isPage\":false,\"text\":\"\\nimport { encodeAbiParameters } from &#x27;viem&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"encodeAbiParameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#usage\",\"html\":\"\\n<p>The <code>encodeAbiParameters</code> function takes in two parameters:</p>\\n<ul>\\n<li>a set of ABI Parameters (<code>params</code>), that can be in the shape of the <code>inputs</code> or <code>outputs</code> attribute of an ABI Item.</li>\\n<li>a set of values (<code>values</code>) that correspond to the given <code>params</code>.</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeAbiParameters } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> encodedData</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;string&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;y&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    { name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;bool&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#usage\",\"isPage\":false,\"text\":\"\\nThe encodeAbiParameters function takes in two parameters:\\n\\na set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\\na set of values (values) that correspond to the given params.\\n\\nimport { encodeAbiParameters } from &#x27;viem&#x27;\\n \\nconst encodedData = encodeAbiParameters(\\n  [\\n    { name: &#x27;x&#x27;, type: &#x27;string&#x27; },\\n    { name: &#x27;y&#x27;, type: &#x27;uint&#x27; },\\n    { name: &#x27;z&#x27;, type: &#x27;bool&#x27; }\\n  ],\\n  [&#x27;wagmi&#x27;, 420n, true]\\n)\\n// 0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000\\n\",\"title\":\"Usage\",\"titles\":[\"encodeAbiParameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#human-readable\",\"html\":\"\\n<p>You can also pass in <a href=\\\"/docs/glossary/terms#human-readable-abi\\\">Human Readable</a> parameters with the <a href=\\\"/docs/abi/parseAbiParameters\\\"><code>parseAbiParameters</code> utility</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { encodeAbiParameters, parseAbiParameters } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> encodedData</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  parseAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;string x, uint y, bool z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#human-readable\",\"isPage\":false,\"text\":\"\\nYou can also pass in Human Readable parameters with the parseAbiParameters utility.\\nimport { encodeAbiParameters, parseAbiParameters } from &#x27;viem&#x27;\\n \\nconst encodedData = encodeAbiParameters(\\n  parseAbiParameters(&#x27;string x, uint y, bool z&#x27;),\\n  [&#x27;wagmi&#x27;, 420n, true]\\n)\\n// 0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000\\n\",\"title\":\"Human Readable\",\"titles\":[\"encodeAbiParameters\",\"Usage\"]},{\"href\":\"/docs/abi/encodeAbiParameters#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></p>\\n<p>The ABI encoded data.</p>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#returns\",\"isPage\":false,\"text\":\"\\nHex\\nThe ABI encoded data.\\n\",\"title\":\"Returns\",\"titles\":[\"encodeAbiParameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"encodeAbiParameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#params\",\"html\":\"\\n<ul>\\n<li><strong>Type</strong>: <a href=\\\"/docs/glossary/terms#abiparameter\\\"><code>AbiParameter[]</code></a></li>\\n</ul>\\n<p>The set of ABI parameters to encode, in the shape of the <code>inputs</code> or <code>outputs</code> attribute of an ABI event/function.</p>\\n<p>These parameters must include valid <a href=\\\"https://docs.soliditylang.org/en/develop/abi-spec#types\\\">ABI types</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">encodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint32&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#params\",\"isPage\":false,\"text\":\"\\n\\nType: AbiParameter[]\\n\\nThe set of ABI parameters to encode, in the shape of the inputs or outputs attribute of an ABI event/function.\\nThese parameters must include valid ABI types.\\nencodeAbiParameters(\\n  [{ name: &#x27;x&#x27;, type: &#x27;uint32&#x27; }], \\n  [69420]\\n)\\n\",\"title\":\"params\",\"titles\":[\"encodeAbiParameters\",\"Parameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#values\",\"html\":\"\\n<ul>\\n<li><strong>Type</strong>: <a href=\\\"/docs/glossary/terms#abiparameterstoprimitivetypes\\\"><code>AbiParametersToPrimitiveTypes&lt;AbiParameter[]&gt;</code></a></li>\\n</ul>\\n<p>The set of primitive values that correspond to the ABI types defined in <code>params</code>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">encodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [{ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint32&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69420</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre>\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#values\",\"isPage\":false,\"text\":\"\\n\\nType: AbiParametersToPrimitiveTypes&lt;AbiParameter[]&gt;\\n\\nThe set of primitive values that correspond to the ABI types defined in params.\\nencodeAbiParameters(\\n  [{ name: &#x27;x&#x27;, type: &#x27;uint32&#x27; }],\\n  [69420] \\n)\\n\",\"title\":\"values\",\"titles\":[\"encodeAbiParameters\",\"Parameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#more-examples\",\"html\":\"\\n\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#more-examples\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"More Examples\",\"titles\":[\"encodeAbiParameters\"]},{\"href\":\"/docs/abi/encodeAbiParameters#simple-struct\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { abi } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./abi&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> encodedData</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> encodeAbiParameters</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  abi[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].inputs,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  [{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    x: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">420</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    y: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    z: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 0x00000000000000000000000000000000000000000000000000000000000001a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678ac</span></span></code></pre></div><div data-title=\\\"abi.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"abi.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> abi</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;staticStruct&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    inputs: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        components: [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;x&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;uint256&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;y&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;bool&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;z&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;address&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;foo&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;tuple&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">as</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span></span></code></pre></div><div data-title=\\\"Example.sol\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"Example.sol\\\" data-lang=\\\"solidity\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">contract</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> Example</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  struct</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> Foo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    uint256</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> x;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    bool</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> y;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> z;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> staticStruct</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">Foo</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> calldata</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\"> foo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) { ... }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre></div></div>\",\"id\":\"pages/docs/abi/encodeAbiParameters.md#simple-struct\",\"isPage\":false,\"text\":\"\\nimport { abi } from &#x27;./abi&#x27;\\n \\nconst encodedData = encodeAbiParameters(\\n  abi[0].inputs,\\n  [{\\n    x: 420n,\\n    y: true,\\n    z: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;,\\n  }],\\n)\\n// 0x00000000000000000000000000000000000000000000000000000000000001a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5cc3c03994db5b0d9a5eedd10cabab0813678acexport const abi = [\\n  {\\n    name: &#x27;staticStruct&#x27;,\\n    inputs: [\\n      {\\n        components: [\\n          {\\n            name: &#x27;x&#x27;,\\n            type: &#x27;uint256&#x27;,\\n          },\\n          {\\n            name: &#x27;y&#x27;,\\n            type: &#x27;bool&#x27;,\\n          },\\n          {\\n            name: &#x27;z&#x27;,\\n            type: &#x27;address&#x27;,\\n          },\\n        ],\\n        name: &#x27;foo&#x27;,\\n        type: &#x27;tuple&#x27;,\\n      },\\n    ],\\n  }\\n] as constcontract Example {\\n  struct Foo {\\n    uint256 x;\\n    bool y;\\n    address z;\\n  }\\n \\n  function staticStruct(Foo calldata foo) { ... }\\n}\",\"title\":\"Simple struct\",\"titles\":[\"encodeAbiParameters\",\"More Examples\"]}]}}"
