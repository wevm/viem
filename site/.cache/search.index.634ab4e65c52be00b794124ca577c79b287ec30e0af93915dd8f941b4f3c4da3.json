"{\"value\":{\"mdx\":\"---\\ndescription: Getting started with experimental features in Viem\\n---\\n\\n# Getting Started\\n\\nViem provides a set of experimental features through the `viem/experimental` entrypoint. Such features could include: \\n\\n- implementation of non-finalized EIP proposals.\\n- features that have not been adopted by the wider ecosystem.\\n- features that are not considered stable.\\n\\n:::warning[Warning]\\nIt is recommended to not solely use experimental features in production. You should always have a fallback mechanism for unsupported features.\\n:::\\n\\n## Quick Start\\n\\n### 1. Set up your Client & Transport\\n\\nFirstly, set up your [Client](/docs/clients/intro) with a desired [Transport](/docs/clients/intro) & [Chain](/docs/chains/introduction).\\n\\n```ts\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({ // [!code focus]\\n  chain: mainnet, // [!code focus]\\n  transport: custom(window.ethereum!), // [!code focus]\\n}) // [!code focus]\\n```\\n\\n:::info\\nIn a production app, it is highly recommended to pass through your authenticated RPC provider URL (Alchemy, Infura, Ankr, etc). If no URL is provided, viem will default to a public RPC provider. [Read more](/docs/clients/transports/http#usage).\\n:::\\n\\n### 2. Extend Client with Experimental Actions\\n\\nNow that you have a Client set up, you can extend it with Experimental Actions! [Read more.](/experimental/client)\\n\\n```ts\\nimport { createWalletClient, custom } from 'viem'\\nimport { base } from 'viem/chains'\\nimport { eip5792Actions } from 'viem/experimental' // [!code focus]\\n\\nconst client = createWalletClient({\\n  chain: base,\\n  transport: custom(window.ethereum!),\\n}).extend(eip5792Actions()) // [!code focus]\\n```\\n\\n### 3. Consume Experimental Actions\\n\\nNow that you have an Experimental Client set up, you can now and consume [Actions](/experimental/eip5792/sendCalls)!\\n\\n```tsx\\nimport { createWalletClient, custom, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { eip5792Actions } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n}).extend(eip5792Actions()) \\n\\nconst id = await client.sendCalls({ // [!code focus]\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', // [!code focus]\\n  calls: [// [!code focus]\\n    {// [!code focus]\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n      value: parseEther('1'), // [!code focus]\\n    },// [!code focus]\\n    {// [!code focus]\\n      data: '0xdeadbeef'// [!code focus]\\n      to: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', // [!code focus]\\n    }, // [!code focus]\\n  ] // [!code focus]\\n}) // [!code focus]\\n```\",\"document\":[{\"href\":\"/experimental#getting-started\",\"html\":\"</header>\\n<p>Viem provides a set of experimental features through the <code>viem/experimental</code> entrypoint. Such features could include:</p>\\n<ul>\\n<li>implementation of non-finalized EIP proposals.</li>\\n<li>features that have not been adopted by the wider ecosystem.</li>\\n<li>features that are not considered stable.</li>\\n</ul>\\n<aside data-callout=\\\"warning\\\"><strong data-callout-title=\\\"true\\\">Warning</strong><p>It is recommended to not solely use experimental features in production. You should always have a fallback mechanism for unsupported features.</p></aside>\\n\",\"id\":\"pages/experimental.mdx#getting-started\",\"isPage\":true,\"text\":\"\\nViem provides a set of experimental features through the viem/experimental entrypoint. Such features could include:\\n\\nimplementation of non-finalized EIP proposals.\\nfeatures that have not been adopted by the wider ecosystem.\\nfeatures that are not considered stable.\\n\\nWarningIt is recommended to not solely use experimental features in production. You should always have a fallback mechanism for unsupported features.\\n\",\"title\":\"Getting Started\",\"titles\":[]},{\"href\":\"/experimental#quick-start\",\"html\":\"\\n\",\"id\":\"pages/experimental.mdx#quick-start\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Quick Start\",\"titles\":[\"Getting Started\"]},{\"href\":\"/experimental#1-set-up-your-client--transport\",\"html\":\"\\n<p>Firstly, set up your <a href=\\\"/docs/clients/intro\\\">Client</a> with a desired <a href=\\\"/docs/clients/intro\\\">Transport</a> &amp; <a href=\\\"/docs/chains/introduction\\\">Chain</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\\n<aside data-callout=\\\"info\\\"><p>In a production app, it is highly recommended to pass through your authenticated RPC provider URL (Alchemy, Infura, Ankr, etc). If no URL is provided, viem will default to a public RPC provider. <a href=\\\"/docs/clients/transports/http#usage\\\">Read more</a>.</p></aside>\\n\",\"id\":\"pages/experimental.mdx#1-set-up-your-client--transport\",\"isPage\":false,\"text\":\"\\nFirstly, set up your Client with a desired Transport &amp; Chain.\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nconst client = createWalletClient({ \\n  chain: mainnet, \\n  transport: custom(window.ethereum!), \\n}) \\nIn a production app, it is highly recommended to pass through your authenticated RPC provider URL (Alchemy, Infura, Ankr, etc). If no URL is provided, viem will default to a public RPC provider. Read more.\\n\",\"title\":\"1. Set up your Client &amp; Transport\",\"titles\":[\"Getting Started\",\"Quick Start\"]},{\"href\":\"/experimental#2-extend-client-with-experimental-actions\",\"html\":\"\\n<p>Now that you have a Client set up, you can extend it with Experimental Actions! <a href=\\\"/experimental/client\\\">Read more.</a></p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { base } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip5792Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: base,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip5792Actions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()) </span></span></code></pre>\\n\",\"id\":\"pages/experimental.mdx#2-extend-client-with-experimental-actions\",\"isPage\":false,\"text\":\"\\nNow that you have a Client set up, you can extend it with Experimental Actions! Read more.\\nimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { base } from &#x27;viem/chains&#x27;\\nimport { eip5792Actions } from &#x27;viem/experimental&#x27;\\n \\nconst client = createWalletClient({\\n  chain: base,\\n  transport: custom(window.ethereum!),\\n}).extend(eip5792Actions()) \\n\",\"title\":\"2. Extend Client with Experimental Actions\",\"titles\":[\"Getting Started\",\"Quick Start\"]},{\"href\":\"/experimental#3-consume-experimental-actions\",\"html\":\"\\n<p>Now that you have an Experimental Client set up, you can now and consume <a href=\\\"/experimental/eip5792/sendCalls\\\">Actions</a>!</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom, parseEther } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip5792Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip5792Actions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> id</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> client.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendCalls</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  calls: [</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      data: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xdeadbeef&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ] </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\",\"id\":\"pages/experimental.mdx#3-consume-experimental-actions\",\"isPage\":false,\"text\":\"\\nNow that you have an Experimental Client set up, you can now and consume Actions!\\nimport { createWalletClient, custom, parseEther } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\nimport { eip5792Actions } from &#x27;viem/experimental&#x27;\\n \\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n}).extend(eip5792Actions()) \\n \\nconst id = await client.sendCalls({ \\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;, \\n  calls: [\\n    {\\n      to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;, \\n      value: parseEther(&#x27;1&#x27;), \\n    },\\n    {\\n      data: &#x27;0xdeadbeef&#x27;\\n      to: &#x27;0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC&#x27;, \\n    }, \\n  ] \\n}) \",\"title\":\"3. Consume Experimental Actions\",\"titles\":[\"Getting Started\",\"Quick Start\"]}]}}"
