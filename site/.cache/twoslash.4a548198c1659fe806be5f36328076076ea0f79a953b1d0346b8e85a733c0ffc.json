"{\"value\":{\"code\":\"import { account, walletClient } from './config'\\n \\nconst request = await walletClient.prepareTransactionRequest({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n\\nconst signature = await walletClient.signTransaction(request) // [!code focus:2]\\n// 0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33\\n\\nconst hash = await walletClient.sendRawTransaction(signature)\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":9,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":18,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":57,\"length\":7,\"target\":\"request\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":73,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) prepareTransactionRequest: <{\\n    readonly account: `0x${string}`;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}, undefined, `0x${string}`>(args: PrepareTransactionRequestParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, `0x${string}`, {\\n    readonly account: `0x${string}`;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}>) => Promise<...>\",\"docs\":\"Prepares a transaction request for signing.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\",\"tags\":[[\"param\",\"args - {@link PrepareTransactionRequestParameters}\"],[\"returns\",\"The transaction request. {@link PrepareTransactionRequestReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"]],\"start\":86,\"length\":25,\"target\":\"prepareTransactionRequest\",\"line\":2,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` & (`0x${string}` | Account | null | undefined)\",\"start\":116,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":127,\"length\":2,\"target\":\"to\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: 1000000000000000000n\",\"start\":179,\"length\":5,\"target\":\"value\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const signature: `0x02${string}` | `0x01${string}` | `0x03${string}` | `0x04${string}` | TransactionSerializedLegacy\",\"start\":217,\"length\":9,\"target\":\"signature\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":235,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n} | ... 3 more ... | {\\n    ...;\\n}>(args: never) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":248,\"length\":15,\"target\":\"signTransaction\",\"line\":8,\"character\":37},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":264,\"length\":7,\"target\":\"request\",\"line\":8,\"character\":53},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":471,\"length\":4,\"target\":\"hash\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":484,\"length\":12,\"target\":\"walletClient\",\"line\":11,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendRawTransaction: (args: SendRawTransactionParameters) => Promise<SendRawTransactionReturnType>\",\"docs\":\"Sends a **signed** transaction to the network\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\\n- JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendRawTransactionParameters}\"],[\"returns\",\"The transaction hash. {@link SendRawTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { sendRawTransaction } from 'viem/wallet'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst hash = await client.sendRawTransaction({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\\n})\"]],\"start\":497,\"length\":18,\"target\":\"sendRawTransaction\",\"line\":11,\"character\":32},{\"type\":\"hover\",\"text\":\"const signature: `0x02${string}` | `0x01${string}` | `0x03${string}` | `0x04${string}` | TransactionSerializedLegacy\",\"start\":516,\"length\":9,\"target\":\"signature\",\"line\":11,\"character\":51}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,701]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↑ JSON-RPC Account\",\"start\":556,\"end\":584},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↑ Local Account\",\"start\":636,\"end\":661}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  transport: http()\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":238,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\n\\nimport 'viem/window'\\n\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n\\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":662,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { account, walletClient } from './config'\\n \\nconst request = await walletClient.prepareTransactionRequest({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n\\nconst signature = await walletClient.signTransaction(request) // [!code focus:2]\\n// 0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33\\n\\nconst hash = await walletClient.sendRawTransaction(signature)\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":9,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":18,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":57,\"length\":7,\"target\":\"request\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":73,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) prepareTransactionRequest: <{\\n    readonly account: `0x${string}`;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}, undefined, `0x${string}`>(args: PrepareTransactionRequestParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, `0x${string}`, {\\n    readonly account: `0x${string}`;\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: 1000000000000000000n;\\n}>) => Promise<...>\",\"docs\":\"Prepares a transaction request for signing.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\",\"tags\":[[\"param\",\"args - {@link PrepareTransactionRequestParameters}\"],[\"returns\",\"The transaction request. {@link PrepareTransactionRequestReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\"]],\"start\":86,\"length\":25,\"target\":\"prepareTransactionRequest\",\"line\":2,\"character\":35},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` & (`0x${string}` | Account | null | undefined)\",\"start\":116,\"length\":7,\"target\":\"account\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":127,\"length\":2,\"target\":\"to\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) value: 1000000000000000000n\",\"start\":179,\"length\":5,\"target\":\"value\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"const signature: `0x02${string}` | `0x01${string}` | `0x03${string}` | `0x04${string}` | TransactionSerializedLegacy\",\"start\":217,\"length\":9,\"target\":\"signature\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":235,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTransaction: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n} | ... 3 more ... | {\\n    ...;\\n}>(args: never) => Promise<...>\",\"docs\":\"Signs a transaction.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/signTransaction\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\\n  - Local Accounts: Signs locally. No JSON-RPC request.\",\"tags\":[[\"param\",\"args - {@link SignTransactionParameters}\"],[\"returns\",\"The signed message. {@link SignTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst request = await client.prepareTransactionRequest({\\n  to: '0x0000000000000000000000000000000000000000',\\n  value: 1n,\\n})\\nconst signature = await client.signTransaction(request)\"]],\"start\":248,\"length\":15,\"target\":\"signTransaction\",\"line\":8,\"character\":37},{\"type\":\"hover\",\"text\":\"const request: {\\n    account?: undefined | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 10 more ...;\\n        serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n    };\\n    ... 17 more ...;\\n    maxPriorityFeePerGas: never;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n} | {\\n    ...;\\n}\",\"start\":264,\"length\":7,\"target\":\"request\",\"line\":8,\"character\":53},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":471,\"length\":4,\"target\":\"hash\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":484,\"length\":12,\"target\":\"walletClient\",\"line\":11,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendRawTransaction: (args: SendRawTransactionParameters) => Promise<SendRawTransactionReturnType>\",\"docs\":\"Sends a **signed** transaction to the network\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\\n- JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendRawTransactionParameters}\"],[\"returns\",\"The transaction hash. {@link SendRawTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { sendRawTransaction } from 'viem/wallet'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst hash = await client.sendRawTransaction({\\n  serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\\n})\"]],\"start\":497,\"length\":18,\"target\":\"sendRawTransaction\",\"line\":11,\"character\":32},{\"type\":\"hover\",\"text\":\"const signature: `0x02${string}` | `0x01${string}` | `0x03${string}` | `0x04${string}` | TransactionSerializedLegacy\",\"start\":516,\"length\":9,\"target\":\"signature\",\"line\":11,\"character\":51}],\"tags\":[]}}"
