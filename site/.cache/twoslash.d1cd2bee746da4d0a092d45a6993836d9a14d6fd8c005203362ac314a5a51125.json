"{\"value\":{\"code\":\"import { parseAbi, parseEther } from 'viem'\\nimport { client } from './config'\\n\\nconst abi = parseAbi([\\n  'function approve(address, uint256) returns (bool)',\\n  'function transferFrom(address, address, uint256) returns (bool)',\\n])\\n \\nconst result = await client.simulateBlocks({ // [!code focus:99]\\n  blocks: [{\\n    calls: [\\n      {\\n        from: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        value: parseEther('1')\\n      },\\n      {\\n        from: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n        abi,\\n        functionName: 'approve',\\n        args: [\\n          '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', \\n          100n\\n        ],\\n      },\\n      {\\n        from: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n        abi,\\n        functionName: 'transferFrom',\\n        args: [\\n          '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n          '0x0000000000000000000000000000000000000000',\\n          100n\\n        ],\\n      },\\n    ],\\n  }]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":19,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":19},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":53,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":85,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]>(signatures: [\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":91,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const result: SimulateBlocksReturnType<readonly [{\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [...];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {\\n    ...;\\n}]>\",\"start\":237,\"length\":6,\"target\":\"result\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":252,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) simulateBlocks: <readonly [{\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [...];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {\\n    ...;\\n}]>(args: SimulateBlocksParameters<...>) => Promise<...>\",\"docs\":\"Simulates a set of calls on block(s) with optional block and state overrides.\",\"tags\":[[\"example\",\"```ts\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst result = await client.simulateBlocks({\\n  blocks: [{\\n    blockOverrides: {\\n      number: 69420n,\\n    },\\n    calls: [{\\n      {\\n        account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        data: '0xdeadbeef',\\n        to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      },\\n      {\\n        account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        value: parseEther('1'),\\n      },\\n    }],\\n    stateOverrides: [{\\n      address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n      balance: parseEther('10'),\\n    }],\\n  }]\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link SimulateParameters }\"],[\"returns\",\"Simulated blocks. {@link SimulateReturnType }\"]],\"start\":259,\"length\":14,\"target\":\"simulateBlocks\",\"line\":8,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) blocks: readonly {\\n    blockOverrides?: BlockOverrides | undefined;\\n    calls: readonly [Prettify<Call<{\\n        readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }, CallExtraProperties>>, Prettify<...>, Prettify<...>];\\n    stateOverrides?: StateOverride | undefined;\\n}[]\",\"docs\":\"Blocks to simulate.\",\"start\":298,\"length\":6,\"target\":\"blocks\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, CallExtraProperties>>, Prettify<...>, Prettify<...>]\",\"docs\":\"Calls to execute.\",\"start\":313,\"length\":5,\"target\":\"calls\",\"line\":10,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\"\",\"start\":338,\"length\":4,\"target\":\"from\",\"line\":12,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":398,\"length\":2,\"target\":\"to\",\"line\":13,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":456,\"length\":5,\"target\":\"value\",\"line\":14,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":463,\"length\":10,\"target\":\"parseEther\",\"line\":14,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\"\",\"start\":504,\"length\":4,\"target\":\"from\",\"line\":17,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\"\",\"start\":564,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":622,\"length\":3,\"target\":\"abi\",\"line\":19,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\"\",\"start\":635,\"length\":12,\"target\":\"functionName\",\"line\":20,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", bigint]\",\"start\":668,\"length\":4,\"target\":\"args\",\"line\":21,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\"\",\"start\":784,\"length\":4,\"target\":\"from\",\"line\":27,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\"\",\"start\":844,\"length\":2,\"target\":\"to\",\"line\":28,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":902,\"length\":3,\"target\":\"abi\",\"line\":29,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"transferFrom\\\"\",\"start\":915,\"length\":12,\"target\":\"functionName\",\"line\":30,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", \\\"0x0000000000000000000000000000000000000000\\\", bigint]\",\"start\":953,\"length\":4,\"target\":\"args\",\"line\":31,\"character\":8}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,431]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":196,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":392,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseAbi, parseEther } from 'viem'\\nimport { client } from './config'\\n\\nconst abi = parseAbi([\\n  'function approve(address, uint256) returns (bool)',\\n  'function transferFrom(address, address, uint256) returns (bool)',\\n])\\n \\nconst result = await client.simulateBlocks({ // [!code focus:99]\\n  blocks: [{\\n    calls: [\\n      {\\n        from: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        value: parseEther('1')\\n      },\\n      {\\n        from: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n        abi,\\n        functionName: 'approve',\\n        args: [\\n          '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', \\n          100n\\n        ],\\n      },\\n      {\\n        from: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n        abi,\\n        functionName: 'transferFrom',\\n        args: [\\n          '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n          '0x0000000000000000000000000000000000000000',\\n          100n\\n        ],\\n      },\\n    ],\\n  }]\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":19,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":19},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":53,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":85,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]>(signatures: [\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":91,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const result: SimulateBlocksReturnType<readonly [{\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [...];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {\\n    ...;\\n}]>\",\"start\":237,\"length\":6,\"target\":\"result\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":252,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) simulateBlocks: <readonly [{\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [...];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {\\n    ...;\\n}]>(args: SimulateBlocksParameters<...>) => Promise<...>\",\"docs\":\"Simulates a set of calls on block(s) with optional block and state overrides.\",\"tags\":[[\"example\",\"```ts\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst result = await client.simulateBlocks({\\n  blocks: [{\\n    blockOverrides: {\\n      number: 69420n,\\n    },\\n    calls: [{\\n      {\\n        account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        data: '0xdeadbeef',\\n        to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      },\\n      {\\n        account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n        to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        value: parseEther('1'),\\n      },\\n    }],\\n    stateOverrides: [{\\n      address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n      balance: parseEther('10'),\\n    }],\\n  }]\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link SimulateParameters }\"],[\"returns\",\"Simulated blocks. {@link SimulateReturnType }\"]],\"start\":259,\"length\":14,\"target\":\"simulateBlocks\",\"line\":8,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) blocks: readonly {\\n    blockOverrides?: BlockOverrides | undefined;\\n    calls: readonly [Prettify<Call<{\\n        readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }, CallExtraProperties>>, Prettify<...>, Prettify<...>];\\n    stateOverrides?: StateOverride | undefined;\\n}[]\",\"docs\":\"Blocks to simulate.\",\"start\":298,\"length\":6,\"target\":\"blocks\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\";\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, CallExtraProperties>>, Prettify<...>, Prettify<...>]\",\"docs\":\"Calls to execute.\",\"start\":313,\"length\":5,\"target\":\"calls\",\"line\":10,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\"\",\"start\":338,\"length\":4,\"target\":\"from\",\"line\":12,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":398,\"length\":2,\"target\":\"to\",\"line\":13,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":456,\"length\":5,\"target\":\"value\",\"line\":14,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":463,\"length\":10,\"target\":\"parseEther\",\"line\":14,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\"\",\"start\":504,\"length\":4,\"target\":\"from\",\"line\":17,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\"\",\"start\":564,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":622,\"length\":3,\"target\":\"abi\",\"line\":19,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\"\",\"start\":635,\"length\":12,\"target\":\"functionName\",\"line\":20,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", bigint]\",\"start\":668,\"length\":4,\"target\":\"args\",\"line\":21,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) from: \\\"0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929\\\"\",\"start\":784,\"length\":4,\"target\":\"from\",\"line\":27,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\"\",\"start\":844,\"length\":2,\"target\":\"to\",\"line\":28,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":902,\"length\":3,\"target\":\"abi\",\"line\":29,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"transferFrom\\\"\",\"start\":915,\"length\":12,\"target\":\"functionName\",\"line\":30,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) args: [\\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\", \\\"0x0000000000000000000000000000000000000000\\\", bigint]\",\"start\":953,\"length\":4,\"target\":\"args\",\"line\":31,\"character\":8}],\"tags\":[]}}"
