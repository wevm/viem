"{\"value\":{\"mdx\":\"# signMessage (Local Account) [Signs a message with the Account's private key.]\\n\\nCalculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message) + message))`.\\n\\nWith the calculated signature, you can:\\n\\n- use [`verifyMessage`](/docs/utilities/verifyMessage) to verify the signature,\\n- use [`recoverMessageAddress`](/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\\n\\n## Usage\\n\\n```ts twoslash\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst account = privateKeyToAccount('0x...')\\n\\nconst signature = await account.signMessage({\\n  // Hex data representation of message.\\n  message: { raw: '0x68656c6c6f20776f726c64' },\\n})\\n// @log: Output: \\\"0xa461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b\\\"\\n```\\n\\n## Returns\\n\\n[`Hex`](/docs/glossary/types#hex)\\n\\nThe signed message.\\n\\n## Parameters\\n\\n### message\\n\\n- **Type:** `string | { raw: Hex | ByteArray }`\\n\\nMessage to sign.\\n\\nBy default, viem signs the UTF-8 representation of the message.\\n\\n```ts twoslash\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst account = privateKeyToAccount('0x...')\\n// ---cut---\\nconst signature = await account.signMessage({\\n  message: 'hello world', // [!code focus:1]\\n})\\n```\\n\\nTo sign the data representation of the message, you can use the `raw` attribute.\\n\\n```ts twoslash\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst account = privateKeyToAccount('0x...')\\n// ---cut---\\nconst signature = await account.signMessage({\\n  message: { raw: '0x68656c6c6f20776f726c64' }, // [!code focus:1]\\n})\\n```\\n\",\"document\":[{\"href\":\"/docs/accounts/local/signMessage#signmessage-local-account\",\"html\":\"<div role=\\\"doc-subtitle\\\">Signs a message with the Account&#x27;s private key.</div></header>\\n<p>Calculates an Ethereum-specific signature in <a href=\\\"https://eips.ethereum.org/EIPS/eip-191\\\">EIP-191 format</a>: <code>keccak256(&quot;\\\\x19Ethereum Signed Message:\\\\n&quot; + len(message) + message))</code>.</p>\\n<p>With the calculated signature, you can:</p>\\n<ul>\\n<li>use <a href=\\\"/docs/utilities/verifyMessage\\\"><code>verifyMessage</code></a> to verify the signature,</li>\\n<li>use <a href=\\\"/docs/utilities/recoverMessageAddress\\\"><code>recoverMessageAddress</code></a> to recover the signing address from a signature.</li>\\n</ul>\\n\",\"id\":\"pages/docs/accounts/local/signMessage.md#signmessage-local-account\",\"isPage\":true,\"text\":\"Signs a message with the Account&#x27;s private key.\\nCalculates an Ethereum-specific signature in EIP-191 format: keccak256(&quot;\\\\x19Ethereum Signed Message:\\\\n&quot; + len(message) + message)).\\nWith the calculated signature, you can:\\n\\nuse verifyMessage to verify the signature,\\nuse recoverMessageAddress to recover the signing address from a signature.\\n\\n\",\"title\":\"signMessage (Local Account)\",\"titles\":[]},{\"href\":\"/docs/accounts/local/signMessage#usage\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> signature</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> account.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Hex data representation of message.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: { raw: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x68656c6c6f20776f726c64&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @log: Output: &quot;0xa461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b&quot;</span></span></code></pre>\\n\",\"id\":\"pages/docs/accounts/local/signMessage.md#usage\",\"isPage\":false,\"text\":\"\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nconst account = privateKeyToAccount(&#x27;0x...&#x27;)\\n \\nconst signature = await account.signMessage({\\n  // Hex data representation of message.\\n  message: { raw: &#x27;0x68656c6c6f20776f726c64&#x27; },\\n})\\n// @log: Output: &quot;0xa461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b&quot;\\n\",\"title\":\"Usage\",\"titles\":[\"signMessage (Local Account)\"]},{\"href\":\"/docs/accounts/local/signMessage#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></p>\\n<p>The signed message.</p>\\n\",\"id\":\"pages/docs/accounts/local/signMessage.md#returns\",\"isPage\":false,\"text\":\"\\nHex\\nThe signed message.\\n\",\"title\":\"Returns\",\"titles\":[\"signMessage (Local Account)\"]},{\"href\":\"/docs/accounts/local/signMessage#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/accounts/local/signMessage.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"signMessage (Local Account)\"]},{\"href\":\"/docs/accounts/local/signMessage#message\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string | { raw: Hex | ByteArray }</code></li>\\n</ul>\\n<p>Message to sign.</p>\\n<p>By default, viem signs the UTF-8 representation of the message.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> signature</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> account.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p>To sign the data representation of the message, you can use the <code>raw</code> attribute.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> signature</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> account.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: { raw: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x68656c6c6f20776f726c64&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/accounts/local/signMessage.md#message\",\"isPage\":false,\"text\":\"\\n\\nType: string | { raw: Hex | ByteArray }\\n\\nMessage to sign.\\nBy default, viem signs the UTF-8 representation of the message.\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nconst account = privateKeyToAccount(&#x27;0x...&#x27;)\\n// ---cut---\\nconst signature = await account.signMessage({\\n  message: &#x27;hello world&#x27;, \\n})\\nTo sign the data representation of the message, you can use the raw attribute.\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nconst account = privateKeyToAccount(&#x27;0x...&#x27;)\\n// ---cut---\\nconst signature = await account.signMessage({\\n  message: { raw: &#x27;0x68656c6c6f20776f726c64&#x27; }, \\n})\",\"title\":\"message\",\"titles\":[\"signMessage (Local Account)\",\"Parameters\"]}]}}"
