"{\"value\":{\"code\":\"const block = await publicClient.getBlock({\\n  blockTag: 'safe' // [!code focus]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const block: {\\n    number: bigint;\\n    hash: `0x${string}`;\\n    nonce: `0x${string}`;\\n    logsBloom: `0x${string}`;\\n    baseFeePerGas: bigint | null;\\n    blobGasUsed: bigint;\\n    difficulty: bigint;\\n    excessBlobGas: bigint;\\n    extraData: Hex;\\n    ... 17 more ...;\\n    transactions: `0x${string}`[];\\n}\",\"start\":6,\"length\":5,\"target\":\"block\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":20,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) getBlock: <false, \\\"safe\\\">(args?: GetBlockParameters<false, \\\"safe\\\"> | undefined) => Promise<{\\n    number: bigint;\\n    hash: `0x${string}`;\\n    nonce: `0x${string}`;\\n    logsBloom: `0x${string}`;\\n    baseFeePerGas: bigint | null;\\n    ... 21 more ...;\\n    transactions: `0x${string}`[];\\n}>\",\"docs\":\"Returns information about a block at a block number, hash, or tag.\\n\\n- Docs: https://viem.sh/docs/actions/public/getBlock\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\\n- JSON-RPC Methods:\\n  - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\\n  - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\",\"tags\":[[\"param\",\"args - {@link GetBlockParameters}\"],[\"returns\",\"Information about the block. {@link GetBlockReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst block = await client.getBlock()\"]],\"start\":33,\"length\":8,\"target\":\"getBlock\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) blockTag?: BlockTag | undefined\",\"docs\":\"The block tag.\",\"tags\":[[\"default\",\"'latest'\"]],\"start\":46,\"length\":8,\"target\":\"blockTag\",\"line\":1,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst block = await publicClient.getBlock({\\n  blockTag: 'safe' // [!code focus]\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const block: {\\n    number: bigint;\\n    hash: `0x${string}`;\\n    nonce: `0x${string}`;\\n    logsBloom: `0x${string}`;\\n    baseFeePerGas: bigint | null;\\n    blobGasUsed: bigint;\\n    difficulty: bigint;\\n    excessBlobGas: bigint;\\n    extraData: Hex;\\n    ... 17 more ...;\\n    transactions: `0x${string}`[];\\n}\",\"start\":6,\"length\":5,\"target\":\"block\",\"line\":0,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":20,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) getBlock: <false, \\\"safe\\\">(args?: GetBlockParameters<false, \\\"safe\\\"> | undefined) => Promise<{\\n    number: bigint;\\n    hash: `0x${string}`;\\n    nonce: `0x${string}`;\\n    logsBloom: `0x${string}`;\\n    baseFeePerGas: bigint | null;\\n    ... 21 more ...;\\n    transactions: `0x${string}`[];\\n}>\",\"docs\":\"Returns information about a block at a block number, hash, or tag.\\n\\n- Docs: https://viem.sh/docs/actions/public/getBlock\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\\n- JSON-RPC Methods:\\n  - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\\n  - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\",\"tags\":[[\"param\",\"args - {@link GetBlockParameters}\"],[\"returns\",\"Information about the block. {@link GetBlockReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst block = await client.getBlock()\"]],\"start\":33,\"length\":8,\"target\":\"getBlock\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) blockTag?: BlockTag | undefined\",\"docs\":\"The block tag.\",\"tags\":[[\"default\",\"'latest'\"]],\"start\":46,\"length\":8,\"target\":\"blockTag\",\"line\":1,\"character\":2}],\"tags\":[]}}"
