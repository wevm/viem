"{\"value\":{\"mdx\":\"---\\ndescription: Hashes an EIP-191 message via ERC-7739 format.\\n---\\n\\n# hashMessage\\n\\nCalculates a [EIP-191](https://eips.ethereum.org/EIPS/eip-191) personal sign hash via [ERC-7739 `PersonalSign` format](https://eips.ethereum.org/EIPS/eip-7739).\\n\\n## Import\\n\\n```ts\\nimport { hashMessage } from 'viem/experimental/erc7739'\\n```\\n\\n## Usage\\n\\n```ts\\nimport { hashMessage } from 'viem/experimental/erc7739'\\n\\n// Hash a UTF-8 value.\\nhashMessage({ \\n  message: 'hello world', \\n  verifierDomain: { \\n    name: 'Smart Account', \\n    version: '1', \\n    verifyingContract: '0x1234567890abcdef1234567890abcdef12345678', \\n    chainId: 1, \\n  }, \\n}) \\n\\n// Hash a hex data value.\\nhashMessage({ \\n  message: { raw: '0x68656c6c6f20776f726c64' }, \\n  verifierDomain: { \\n    name: 'Smart Account', \\n    version: '1', \\n    verifyingContract: '0x1234567890abcdef1234567890abcdef12345678', \\n    chainId: 1, \\n  }, \\n}) \\n\\n// Hash a bytes data value.\\nhashMessage({ \\n  message: {\\n    raw: Uint8Array.from([\\n      104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100,\\n    ])\\n  }, \\n  verifierDomain: { \\n    name: 'Smart Account', \\n    version: '1', \\n    verifyingContract: '0x1234567890abcdef1234567890abcdef12345678', \\n    chainId: 1, \\n  }, \\n}) \\n```\\n\\n## Returns\\n\\n[`Hex`](/docs/glossary/types#hex)\\n\\nA signable message hash.\\n\\n## Parameters\\n\\n### message\\n\\n- **Type:** `string | { raw: Hex | ByteArray }`\\n\\nMessage to hash.\\n\\n### verifierDomain\\n\\n- **Type:** `TypedDataDomain`\\n\\nThe EIP-712 domain of the verifying contract.\\n\\n \\n\",\"document\":[{\"href\":\"/experimental/erc7739/hashMessage#hashmessage\",\"html\":\"</header>\\n<p>Calculates a <a href=\\\"https://eips.ethereum.org/EIPS/eip-191\\\">EIP-191</a> personal sign hash via <a href=\\\"https://eips.ethereum.org/EIPS/eip-7739\\\">ERC-7739 <code>PersonalSign</code> format</a>.</p>\\n\",\"id\":\"pages/experimental/erc7739/hashMessage.md#hashmessage\",\"isPage\":true,\"text\":\"\\nCalculates a EIP-191 personal sign hash via ERC-7739 PersonalSign format.\\n\",\"title\":\"hashMessage\",\"titles\":[]},{\"href\":\"/experimental/erc7739/hashMessage#import\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { hashMessage } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental/erc7739&#x27;</span></span></code></pre>\\n\",\"id\":\"pages/experimental/erc7739/hashMessage.md#import\",\"isPage\":false,\"text\":\"\\nimport { hashMessage } from &#x27;viem/experimental/erc7739&#x27;\\n\",\"title\":\"Import\",\"titles\":[\"hashMessage\"]},{\"href\":\"/experimental/erc7739/hashMessage#usage\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { hashMessage } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/experimental/erc7739&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Hash a UTF-8 value.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">hashMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  verifierDomain: { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Smart Account&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    version: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    verifyingContract: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1234567890abcdef1234567890abcdef12345678&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    chainId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Hash a hex data value.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">hashMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: { raw: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x68656c6c6f20776f726c64&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  verifierDomain: { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Smart Account&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    version: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    verifyingContract: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1234567890abcdef1234567890abcdef12345678&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    chainId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Hash a bytes data value.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">hashMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    raw: Uint8Array.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">from</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">([</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      104</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">101</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">108</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">108</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">111</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">32</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">119</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">111</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">114</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">108</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">100</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ])</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  verifierDomain: { </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Smart Account&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    version: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    verifyingContract: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1234567890abcdef1234567890abcdef12345678&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    chainId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\\n\",\"id\":\"pages/experimental/erc7739/hashMessage.md#usage\",\"isPage\":false,\"text\":\"\\nimport { hashMessage } from &#x27;viem/experimental/erc7739&#x27;\\n \\n// Hash a UTF-8 value.\\nhashMessage({ \\n  message: &#x27;hello world&#x27;, \\n  verifierDomain: { \\n    name: &#x27;Smart Account&#x27;, \\n    version: &#x27;1&#x27;, \\n    verifyingContract: &#x27;0x1234567890abcdef1234567890abcdef12345678&#x27;, \\n    chainId: 1, \\n  }, \\n}) \\n \\n// Hash a hex data value.\\nhashMessage({ \\n  message: { raw: &#x27;0x68656c6c6f20776f726c64&#x27; }, \\n  verifierDomain: { \\n    name: &#x27;Smart Account&#x27;, \\n    version: &#x27;1&#x27;, \\n    verifyingContract: &#x27;0x1234567890abcdef1234567890abcdef12345678&#x27;, \\n    chainId: 1, \\n  }, \\n}) \\n \\n// Hash a bytes data value.\\nhashMessage({ \\n  message: {\\n    raw: Uint8Array.from([\\n      104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100,\\n    ])\\n  }, \\n  verifierDomain: { \\n    name: &#x27;Smart Account&#x27;, \\n    version: &#x27;1&#x27;, \\n    verifyingContract: &#x27;0x1234567890abcdef1234567890abcdef12345678&#x27;, \\n    chainId: 1, \\n  }, \\n}) \\n\",\"title\":\"Usage\",\"titles\":[\"hashMessage\"]},{\"href\":\"/experimental/erc7739/hashMessage#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hex\\\"><code>Hex</code></a></p>\\n<p>A signable message hash.</p>\\n\",\"id\":\"pages/experimental/erc7739/hashMessage.md#returns\",\"isPage\":false,\"text\":\"\\nHex\\nA signable message hash.\\n\",\"title\":\"Returns\",\"titles\":[\"hashMessage\"]},{\"href\":\"/experimental/erc7739/hashMessage#parameters\",\"html\":\"\\n\",\"id\":\"pages/experimental/erc7739/hashMessage.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"hashMessage\"]},{\"href\":\"/experimental/erc7739/hashMessage#message\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string | { raw: Hex | ByteArray }</code></li>\\n</ul>\\n<p>Message to hash.</p>\\n\",\"id\":\"pages/experimental/erc7739/hashMessage.md#message\",\"isPage\":false,\"text\":\"\\n\\nType: string | { raw: Hex | ByteArray }\\n\\nMessage to hash.\\n\",\"title\":\"message\",\"titles\":[\"hashMessage\",\"Parameters\"]},{\"href\":\"/experimental/erc7739/hashMessage#verifierdomain\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>TypedDataDomain</code></li>\\n</ul>\\n<p>The EIP-712 domain of the verifying contract.</p>\",\"id\":\"pages/experimental/erc7739/hashMessage.md#verifierdomain\",\"isPage\":false,\"text\":\"\\n\\nType: TypedDataDomain\\n\\nThe EIP-712 domain of the verifying contract.\",\"title\":\"verifierDomain\",\"titles\":[\"hashMessage\",\"Parameters\"]}]}}"
