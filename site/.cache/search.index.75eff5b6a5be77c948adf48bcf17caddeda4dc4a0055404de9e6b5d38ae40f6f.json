"{\"value\":{\"mdx\":\"---\\noutline: deep\\ndescription: Returns the time until the withdrawal transaction can be finalized.\\n---\\n\\n# getTimeToFinalize\\n\\nReturns the time until the withdrawal transaction can be finalized. Used for the [Withdrawal](/op-stack/guides/withdrawals) flow.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { optimism } from 'viem/chains'\\nimport { account, publicClientL1, publicClientL2 } from './config'\\n\\nconst receipt = await publicClientL2.getTransactionReceipt({\\n  hash: '0x9a2f4283636ddeb9ac32382961b22c177c9e86dd3b283735c154f897b1a7ff4a',\\n})\\n\\nconst [message] = getWithdrawals(receipt)\\n\\nconst { // [!code hl]\\n  period, // [!code hl]\\n  seconds, // [!code hl]\\n  timestamp, // [!code hl]\\n} = await publicClientL1.getTimeToFinalize({ // [!code hl]\\n  withdrawalHash: message.withdrawalHash, // [!code hl]\\n  targetChain: optimism // [!code hl]\\n}) // [!code hl]\\n```\\n\\n```ts [config.ts]\\nimport { createPublicClient, custom, http } from 'viem'\\nimport { mainnet, optimism } from 'viem/chains'\\nimport { publicActionsL1 } from 'viem/op-stack'\\n\\nexport const publicClientL1 = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n}).extend(publicActionsL1())\\n\\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: custom(window.ethereum)\\n})\\n```\\n\\n:::\\n\\n## Returns\\n\\n`{ period: number, seconds: number, timestamp: number }`\\n\\n- `period` in seconds of the finalization stage (max wait time).\\n- `seconds` until the transaction can be finalized.\\n- `timestamp` of when the transaction can be finalized.\\n\\n## Parameters\\n\\n### targetChain\\n\\n- **Type:** [`Chain`](/docs/glossary/types#chain)\\n\\nThe L2 chain.\\n\\n```ts\\nconst { seconds } = await publicClientL1.getTimeToFinalize({\\n  withdrawalHash: '0x...', // [!code focus]\\n  targetChain: optimism, // [!code focus]\\n})\\n```\\n\\n### withdrawalHash\\n\\n- **Type:** `Hash`\\n\\nThe withdrawal hash.\\n\\n```ts\\nconst { seconds, timestamp } = await publicClientL1.getTimeToFinalize({ \\n  withdrawalHash: '0x...', // [!code focus]\\n  targetChain: optimism, \\n}) \\n```\\n\\n### l2OutputOracleAddress (optional)\\n\\n- **Type:** `Address`\\n- **Default:** `targetChain.contracts.l2OutputOracle[chainId].address`\\n\\nThe address of the [L2 Output Oracle contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L2OutputOracle.sol). Defaults to the L2 Output Oracle contract specified on the `targetChain`.\\n\\nIf a `l2OutputOracleAddress` is provided, the `targetChain` parameter becomes optional.\\n\\n```ts\\nconst { seconds } = await publicClientL1.getTimeToFinalize({\\n  withdrawalHash: '0x...',\\n  l2OutputOracleAddress: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed' // [!code focus]\\n  portalAddress: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed'\\n})\\n```\\n\\n### portalAddress (optional)\\n\\n- **Type:** `Address`\\n- **Default:** `targetChain.contracts.portal[chainId].address`\\n\\nThe address of the [Portal contract](https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol). Defaults to the L2 Output Oracle contract specified on the `targetChain`.\\n\\nIf a `portalAddress` is provided, the `targetChain` parameter becomes optional.\\n\\n```ts\\nconst { seconds } = await publicClientL1.getTimeToFinalize({\\n  withdrawalHash: '0x...',\\n  l2OutputOracleAddress: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\\n  portalAddress: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed' // [!code focus]\\n})\\n```\",\"document\":[{\"href\":\"/op-stack/actions/getTimeToFinalize#gettimetofinalize\",\"html\":\"</header>\\n<p>Returns the time until the withdrawal transaction can be finalized. Used for the <a href=\\\"/op-stack/guides/withdrawals\\\">Withdrawal</a> flow.</p>\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#gettimetofinalize\",\"isPage\":true,\"text\":\"\\nReturns the time until the withdrawal transaction can be finalized. Used for the Withdrawal flow.\\n\",\"title\":\"getTimeToFinalize\",\"titles\":[]},{\"href\":\"/op-stack/actions/getTimeToFinalize#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-highlighted\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, publicClientL1, publicClientL2 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> receipt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL2.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getTransactionReceipt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  hash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x9a2f4283636ddeb9ac32382961b22c177c9e86dd3b283735c154f897b1a7ff4a&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">message</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> getWithdrawals</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(receipt)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  period</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  seconds</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">  timestamp</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getTimeToFinalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalHash: message.withdrawalHash, </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism </span></span>\\n<span class=\\\"line highlighted\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, custom, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet, optimism } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicActionsL1 } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/op-stack&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">publicActionsL1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClientL2</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: optimism,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#usage\",\"isPage\":false,\"text\":\"\\nimport { optimism } from &#x27;viem/chains&#x27;\\nimport { account, publicClientL1, publicClientL2 } from &#x27;./config&#x27;\\n \\nconst receipt = await publicClientL2.getTransactionReceipt({\\n  hash: &#x27;0x9a2f4283636ddeb9ac32382961b22c177c9e86dd3b283735c154f897b1a7ff4a&#x27;,\\n})\\n \\nconst [message] = getWithdrawals(receipt)\\n \\nconst { \\n  period, \\n  seconds, \\n  timestamp, \\n} = await publicClientL1.getTimeToFinalize({ \\n  withdrawalHash: message.withdrawalHash, \\n  targetChain: optimism \\n}) import { createPublicClient, custom, http } from &#x27;viem&#x27;\\nimport { mainnet, optimism } from &#x27;viem/chains&#x27;\\nimport { publicActionsL1 } from &#x27;viem/op-stack&#x27;\\n \\nexport const publicClientL1 = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n}).extend(publicActionsL1())\\n \\nexport const publicClientL2 = createPublicClient({\\n  chain: optimism,\\n  transport: custom(window.ethereum)\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"getTimeToFinalize\"]},{\"href\":\"/op-stack/actions/getTimeToFinalize#returns\",\"html\":\"\\n<p><code>{ period: number, seconds: number, timestamp: number }</code></p>\\n<ul>\\n<li><code>period</code> in seconds of the finalization stage (max wait time).</li>\\n<li><code>seconds</code> until the transaction can be finalized.</li>\\n<li><code>timestamp</code> of when the transaction can be finalized.</li>\\n</ul>\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#returns\",\"isPage\":false,\"text\":\"\\n{ period: number, seconds: number, timestamp: number }\\n\\nperiod in seconds of the finalization stage (max wait time).\\nseconds until the transaction can be finalized.\\ntimestamp of when the transaction can be finalized.\\n\\n\",\"title\":\"Returns\",\"titles\":[\"getTimeToFinalize\"]},{\"href\":\"/op-stack/actions/getTimeToFinalize#parameters\",\"html\":\"\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"getTimeToFinalize\"]},{\"href\":\"/op-stack/actions/getTimeToFinalize#targetchain\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\"><code>Chain</code></a></li>\\n</ul>\\n<p>The L2 chain.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">seconds</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getTimeToFinalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalHash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#targetchain\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\n\\nThe L2 chain.\\nconst { seconds } = await publicClientL1.getTimeToFinalize({\\n  withdrawalHash: &#x27;0x...&#x27;, \\n  targetChain: optimism, \\n})\\n\",\"title\":\"targetChain\",\"titles\":[\"getTimeToFinalize\",\"Parameters\"]},{\"href\":\"/op-stack/actions/getTimeToFinalize#withdrawalhash\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Hash</code></li>\\n</ul>\\n<p>The withdrawal hash.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">seconds</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">timestamp</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getTimeToFinalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalHash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  targetChain: optimism, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#withdrawalhash\",\"isPage\":false,\"text\":\"\\n\\nType: Hash\\n\\nThe withdrawal hash.\\nconst { seconds, timestamp } = await publicClientL1.getTimeToFinalize({ \\n  withdrawalHash: &#x27;0x...&#x27;, \\n  targetChain: optimism, \\n}) \\n\",\"title\":\"withdrawalHash\",\"titles\":[\"getTimeToFinalize\",\"Parameters\"]},{\"href\":\"/op-stack/actions/getTimeToFinalize#l2outputoracleaddress-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n<li><strong>Default:</strong> <code>targetChain.contracts.l2OutputOracle[chainId].address</code></li>\\n</ul>\\n<p>The address of the <a href=\\\"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/L2OutputOracle.sol\\\">L2 Output Oracle contract</a>. Defaults to the L2 Output Oracle contract specified on the <code>targetChain</code>.</p>\\n<p>If a <code>l2OutputOracleAddress</code> is provided, the <code>targetChain</code> parameter becomes optional.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">seconds</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getTimeToFinalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalHash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputOracleAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  portalAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#l2outputoracleaddress-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: targetChain.contracts.l2OutputOracle[chainId].address\\n\\nThe address of the L2 Output Oracle contract. Defaults to the L2 Output Oracle contract specified on the targetChain.\\nIf a l2OutputOracleAddress is provided, the targetChain parameter becomes optional.\\nconst { seconds } = await publicClientL1.getTimeToFinalize({\\n  withdrawalHash: &#x27;0x...&#x27;,\\n  l2OutputOracleAddress: &#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;\\n  portalAddress: &#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;\\n})\\n\",\"title\":\"l2OutputOracleAddress (optional)\",\"titles\":[\"getTimeToFinalize\",\"Parameters\"]},{\"href\":\"/op-stack/actions/getTimeToFinalize#portaladdress-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Address</code></li>\\n<li><strong>Default:</strong> <code>targetChain.contracts.portal[chainId].address</code></li>\\n</ul>\\n<p>The address of the <a href=\\\"https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts-bedrock/src/L1/OptimismPortal.sol\\\">Portal contract</a>. Defaults to the L2 Output Oracle contract specified on the <code>targetChain</code>.</p>\\n<p>If a <code>portalAddress</code> is provided, the <code>targetChain</code> parameter becomes optional.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">seconds</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClientL1.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getTimeToFinalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  withdrawalHash: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  l2OutputOracleAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  portalAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/op-stack/actions/getTimeToFinalize.md#portaladdress-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: targetChain.contracts.portal[chainId].address\\n\\nThe address of the Portal contract. Defaults to the L2 Output Oracle contract specified on the targetChain.\\nIf a portalAddress is provided, the targetChain parameter becomes optional.\\nconst { seconds } = await publicClientL1.getTimeToFinalize({\\n  withdrawalHash: &#x27;0x...&#x27;,\\n  l2OutputOracleAddress: &#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;,\\n  portalAddress: &#x27;0xbEb5Fc579115071764c7423A4f12eDde41f106Ed&#x27;\\n})\",\"title\":\"portalAddress (optional)\",\"titles\":[\"getTimeToFinalize\",\"Parameters\"]}]}}"
