"{\"value\":{\"code\":\"import { http } from 'viem'\\nimport { \\n  createBundlerClient, \\n  createPaymasterClient,\\n} from 'viem/account-abstraction'\\nimport { account, client } from './config.ts'\\n\\nconst paymasterClient = createPaymasterClient({ // [!code --]\\n  transport: http('https://api.pimlico.io/v2/1/rpc?apikey={API_KEY}'), // [!code --]\\n}) // [!code --]\\n\\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  transport: http('https://api.pimlico.io/v2/1/rpc?apikey={API_KEY}'),\\n})\\n\\nconst hash = await bundlerClient.sendUserOperation({\\n  calls: [{\\n    to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n    value: parseEther('0.001')\\n  }]\\n  paymaster: paymasterClient, // [!code --]\\n  paymaster: true, // [!code ++]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":9,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function createBundlerClient<transport extends Transport, chain extends Chain | undefined = undefined, account extends SmartAccount | undefined = undefined, client extends Client | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: BundlerClientConfig<transport, chain, account, client, rpcSchema>): BundlerClient<transport, chain, account, client, rpcSchema>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":40,\"length\":19,\"target\":\"createBundlerClient\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) function createPaymasterClient<transport extends Transport, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PaymasterClientConfig<transport, rpcSchema>): PaymasterClient<transport, rpcSchema>\\nimport createPaymasterClient\",\"docs\":\"Creates a Paymaster Client.\\n\\n- Docs: https://viem.sh/account-abstraction/clients/paymaster\",\"tags\":[[\"param\",\"config - {@link PaymasterClientConfig}\"],[\"returns\",\"A Paymaster Client. {@link PaymasterClient}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\"]],\"start\":64,\"length\":21,\"target\":\"createPaymasterClient\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\\nimport account\",\"start\":130,\"length\":7,\"target\":\"account\",\"line\":5,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":139,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":18},{\"type\":\"hover\",\"text\":\"const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":174,\"length\":15,\"target\":\"paymasterClient\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPaymasterClient<HttpTransport<undefined, false>, undefined>(parameters: {\\n    cacheTime?: number | undefined | undefined;\\n    key?: string | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    pollingInterval?: number | undefined | undefined;\\n    transport: HttpTransport<...>;\\n    rpcSchema?: undefined;\\n}): {\\n    ...;\\n}\\nimport createPaymasterClient\",\"docs\":\"Creates a Paymaster Client.\\n\\n- Docs: https://viem.sh/account-abstraction/clients/paymaster\",\"tags\":[[\"param\",\"config - {@link PaymasterClientConfig}\"],[\"returns\",\"A Paymaster Client. {@link PaymasterClient}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\"]],\"start\":192,\"length\":21,\"target\":\"createPaymasterClient\",\"line\":7,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":232,\"length\":9,\"target\":\"transport\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":243,\"length\":4,\"target\":\"http\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\",\"start\":339,\"length\":13,\"target\":\"bundlerClient\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createBundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        ...;\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    ...;\\n}, undefined>(parameters: BundlerClientConfig<...>): BundlerClient<...>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":355,\"length\":19,\"target\":\"createBundlerClient\",\"line\":11,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":379,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) client?: Client | {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n} | undefined\",\"docs\":\"Client that points to an Execution RPC URL.\",\"start\":390,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":400,\"length\":9,\"target\":\"transport\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":411,\"length\":4,\"target\":\"http\",\"line\":14,\"character\":13},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":479,\"length\":4,\"target\":\"hash\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\",\"start\":492,\"length\":13,\"target\":\"bundlerClient\",\"line\":17,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendUserOperation: <[{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: any;\\n}], undefined>(parameters: SendUserOperationParameters<{\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, undefined, [...]>) => Promise<SendUserOperationReturnType>\",\"docs\":\"Broadcasts a User Operation to the Bundler.\\n\\n- Docs: https://viem.sh/actions/bundler/sendUserOperation\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendUserOperationParameters}\"],[\"returns\",\"The User Operation hash. {@link SendUserOperationReturnType}\"],[\"example\",\"import { createBundlerClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { toSmartAccount } from 'viem/accounts'\\n\\nconst account = toSmartAccount({ ... })\\n\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst values = await bundlerClient.sendUserOperation({\\n  account,\\n  calls: [{ to: '0x...', value: parseEther('1') }],\\n})\"]],\"start\":506,\"length\":17,\"target\":\"sendUserOperation\",\"line\":17,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: any;\\n}, {}>>]\",\"start\":528,\"length\":5,\"target\":\"calls\",\"line\":18,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\"\",\"start\":542,\"length\":2,\"target\":\"to\",\"line\":19,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":596,\"length\":5,\"target\":\"value\",\"line\":20,\"character\":4},{\"type\":\"hover\",\"text\":\"any\",\"start\":603,\"length\":10,\"target\":\"parseEther\",\"line\":20,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) paymaster: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":630,\"length\":9,\"target\":\"paymaster\",\"line\":22,\"character\":2},{\"type\":\"hover\",\"text\":\"const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":641,\"length\":15,\"target\":\"paymasterClient\",\"line\":22,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) paymaster: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":674,\"length\":9,\"target\":\"paymaster\",\"line\":23,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1029]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":25,\"end\":38},{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":520,\"end\":533}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\n\\n// @noErrors\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' \\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst owner = privateKeyToAccount('0x...')\\n\\nexport const account = await toCoinbaseSmartAccount({ \\n  client, \\n  owners: [owner]\\n}) \\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":495,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\n\\n// @noErrors\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' \\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst owner = privateKeyToAccount('0x...')\\n\\nexport const account = await toCoinbaseSmartAccount({ \\n  client, \\n  owners: [owner]\\n}) \\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":990,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { http } from 'viem'\\nimport { \\n  createBundlerClient, \\n  createPaymasterClient,\\n} from 'viem/account-abstraction'\\nimport { account, client } from './config.ts'\\n\\nconst paymasterClient = createPaymasterClient({ // [!code --]\\n  transport: http('https://api.pimlico.io/v2/1/rpc?apikey={API_KEY}'), // [!code --]\\n}) // [!code --]\\n\\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  transport: http('https://api.pimlico.io/v2/1/rpc?apikey={API_KEY}'),\\n})\\n\\nconst hash = await bundlerClient.sendUserOperation({\\n  calls: [{\\n    to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n    value: parseEther('0.001')\\n  }]\\n  paymaster: paymasterClient, // [!code --]\\n  paymaster: true, // [!code ++]\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":9,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function createBundlerClient<transport extends Transport, chain extends Chain | undefined = undefined, account extends SmartAccount | undefined = undefined, client extends Client | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: BundlerClientConfig<transport, chain, account, client, rpcSchema>): BundlerClient<transport, chain, account, client, rpcSchema>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":40,\"length\":19,\"target\":\"createBundlerClient\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) function createPaymasterClient<transport extends Transport, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PaymasterClientConfig<transport, rpcSchema>): PaymasterClient<transport, rpcSchema>\\nimport createPaymasterClient\",\"docs\":\"Creates a Paymaster Client.\\n\\n- Docs: https://viem.sh/account-abstraction/clients/paymaster\",\"tags\":[[\"param\",\"config - {@link PaymasterClientConfig}\"],[\"returns\",\"A Paymaster Client. {@link PaymasterClient}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\"]],\"start\":64,\"length\":21,\"target\":\"createPaymasterClient\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\\nimport account\",\"start\":130,\"length\":7,\"target\":\"account\",\"line\":5,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":139,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":18},{\"type\":\"hover\",\"text\":\"const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":174,\"length\":15,\"target\":\"paymasterClient\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPaymasterClient<HttpTransport<undefined, false>, undefined>(parameters: {\\n    cacheTime?: number | undefined | undefined;\\n    key?: string | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    pollingInterval?: number | undefined | undefined;\\n    transport: HttpTransport<...>;\\n    rpcSchema?: undefined;\\n}): {\\n    ...;\\n}\\nimport createPaymasterClient\",\"docs\":\"Creates a Paymaster Client.\\n\\n- Docs: https://viem.sh/account-abstraction/clients/paymaster\",\"tags\":[[\"param\",\"config - {@link PaymasterClientConfig}\"],[\"returns\",\"A Paymaster Client. {@link PaymasterClient}\"],[\"example\",\"import { http } from 'viem'\\nimport { createPaymasterClient } from 'viem/account-abstraction'\\n\\nconst paymasterClient = createPaymasterClient({\\n  transport: http('https://...'),\\n})\"]],\"start\":192,\"length\":21,\"target\":\"createPaymasterClient\",\"line\":7,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":232,\"length\":9,\"target\":\"transport\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":243,\"length\":4,\"target\":\"http\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\",\"start\":339,\"length\":13,\"target\":\"bundlerClient\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createBundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        ...;\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    ...;\\n}, undefined>(parameters: BundlerClientConfig<...>): BundlerClient<...>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":355,\"length\":19,\"target\":\"createBundlerClient\",\"line\":11,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":379,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) client?: Client | {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n} | undefined\",\"docs\":\"Client that points to an Execution RPC URL.\",\"start\":390,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":400,\"length\":9,\"target\":\"transport\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":411,\"length\":4,\"target\":\"http\",\"line\":14,\"character\":13},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":479,\"length\":4,\"target\":\"hash\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\",\"start\":492,\"length\":13,\"target\":\"bundlerClient\",\"line\":17,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendUserOperation: <[{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: any;\\n}], undefined>(parameters: SendUserOperationParameters<{\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, undefined, [...]>) => Promise<SendUserOperationReturnType>\",\"docs\":\"Broadcasts a User Operation to the Bundler.\\n\\n- Docs: https://viem.sh/actions/bundler/sendUserOperation\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SendUserOperationParameters}\"],[\"returns\",\"The User Operation hash. {@link SendUserOperationReturnType}\"],[\"example\",\"import { createBundlerClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { toSmartAccount } from 'viem/accounts'\\n\\nconst account = toSmartAccount({ ... })\\n\\nconst bundlerClient = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst values = await bundlerClient.sendUserOperation({\\n  account,\\n  calls: [{ to: '0x...', value: parseEther('1') }],\\n})\"]],\"start\":506,\"length\":17,\"target\":\"sendUserOperation\",\"line\":17,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: any;\\n}, {}>>]\",\"start\":528,\"length\":5,\"target\":\"calls\",\"line\":18,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\"\",\"start\":542,\"length\":2,\"target\":\"to\",\"line\":19,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":596,\"length\":5,\"target\":\"value\",\"line\":20,\"character\":4},{\"type\":\"hover\",\"text\":\"any\",\"start\":603,\"length\":10,\"target\":\"parseEther\",\"line\":20,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) paymaster: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":630,\"length\":9,\"target\":\"paymaster\",\"line\":22,\"character\":2},{\"type\":\"hover\",\"text\":\"const paymasterClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":641,\"length\":15,\"target\":\"paymasterClient\",\"line\":22,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) paymaster: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 12 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":674,\"length\":9,\"target\":\"paymaster\",\"line\":23,\"character\":2}],\"tags\":[]}}"
