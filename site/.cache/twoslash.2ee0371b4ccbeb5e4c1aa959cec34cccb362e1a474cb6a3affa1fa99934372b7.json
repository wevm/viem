"{\"value\":{\"code\":\"import { privateKeyToAccount } from 'viem/accounts'\\nimport { walletClient } from './client'\\n\\nconst eoa = privateKeyToAccount('0x...')\\n \\nconst authorization = await walletClient.signAuthorization({ // [!code focus]\\n  account: eoa, // [!code focus]\\n  contractAddress: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2', // [!code focus]\\n}) // [!code focus]\\n\\n\\n\\n\\n\\n\\n\\n\\nconst hash = await walletClient.sendTransaction({\\n  authorizationList: [authorization],\\n  data: '0xdeadbeef',\\n  to: eoa.address,\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":9,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":61,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":99,\"length\":3,\"target\":\"eoa\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":105,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":142,\"length\":13,\"target\":\"authorization\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":164,\"length\":12,\"target\":\"walletClient\",\"line\":5,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":177,\"length\":17,\"target\":\"signAuthorization\",\"line\":5,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"start\":216,\"length\":7,\"target\":\"account\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":225,\"length\":3,\"target\":\"eoa\",\"line\":6,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) contractAddress?: `0x${string}` | undefined\",\"docs\":\"Address of the contract to delegate to.\",\"tags\":[[\"alias\",\"`address`\"]],\"start\":249,\"length\":15,\"target\":\"contractAddress\",\"line\":7,\"character\":2},{\"type\":\"tag\",\"name\":\"log\",\"start\":349,\"length\":0,\"text\":\"{\",\"line\":9,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":350,\"length\":0,\"text\":\"  chainId: 1,\",\"line\":10,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":351,\"length\":0,\"text\":\"  contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\",\"line\":11,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":352,\"length\":0,\"text\":\"  nonce: 1,\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":353,\"length\":0,\"text\":\"  r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\",\"line\":13,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":354,\"length\":0,\"text\":\"  s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\",\"line\":14,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":355,\"length\":0,\"text\":\"  yParity: 0,\",\"line\":15,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":356,\"length\":0,\"text\":\"}\",\"line\":16,\"character\":0},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":363,\"length\":4,\"target\":\"hash\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":376,\"length\":12,\"target\":\"walletClient\",\"line\":17,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}, undefined>(args: SendTransactionParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":389,\"length\":15,\"target\":\"sendTransaction\",\"line\":17,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: readonly [SignAuthorizationReturnType]\",\"start\":409,\"length\":17,\"target\":\"authorizationList\",\"line\":18,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":429,\"length\":13,\"target\":\"authorization\",\"line\":18,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) data: \\\"0xdeadbeef\\\"\",\"start\":447,\"length\":4,\"target\":\"data\",\"line\":19,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":469,\"length\":2,\"target\":\"to\",\"line\":20,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":473,\"length\":3,\"target\":\"eoa\",\"line\":20,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":477,\"length\":7,\"target\":\"address\",\"line\":20,\"character\":10}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[1347,1358],[1323,1346],[1238,1322],[1153,1237],[1131,1152],[1056,1130],[1032,1055],[1020,1031],[0,671]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"{\",\"start\":1020,\"end\":1031},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  chainId: 1,\",\"start\":1032,\"end\":1055},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\",\"start\":1056,\"end\":1130},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  nonce: 1,\",\"start\":1131,\"end\":1152},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\",\"start\":1153,\"end\":1237},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\",\"start\":1238,\"end\":1322},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"  yParity: 0,\",\"start\":1323,\"end\":1346},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"}\",\"start\":1347,\"end\":1358}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst relay = privateKeyToAccount('0x...')\\n\\nexport const walletClient = createWalletClient({\\n  account: relay,\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":316,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst relay = privateKeyToAccount('0x...')\\n\\nexport const walletClient = createWalletClient({\\n  account: relay,\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":632,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { walletClient } from './client'\\n\\nconst eoa = privateKeyToAccount('0x...')\\n \\nconst authorization = await walletClient.signAuthorization({ // [!code focus]\\n  account: eoa, // [!code focus]\\n  contractAddress: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2', // [!code focus]\\n}) // [!code focus]\\n// @log: {\\n\\n// @log:   chainId: 1,\\n\\n// @log:   contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\\n\\n// @log:   nonce: 1,\\n\\n// @log:   r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\\n\\n// @log:   s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\\n\\n// @log:   yParity: 0,\\n\\n// @log: }\\n\\nconst hash = await walletClient.sendTransaction({\\n  authorizationList: [authorization],\\n  data: '0xdeadbeef',\\n  to: eoa.address,\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":9,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":61,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":99,\"length\":3,\"target\":\"eoa\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":105,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":142,\"length\":13,\"target\":\"authorization\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":164,\"length\":12,\"target\":\"walletClient\",\"line\":5,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { eip7702Actions } from 'viem/experimental'\\n\\nconst client = createClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(eip7702Actions())\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":177,\"length\":17,\"target\":\"signAuthorization\",\"line\":5,\"character\":41},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"start\":216,\"length\":7,\"target\":\"account\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":225,\"length\":3,\"target\":\"eoa\",\"line\":6,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) contractAddress?: `0x${string}` | undefined\",\"docs\":\"Address of the contract to delegate to.\",\"tags\":[[\"alias\",\"`address`\"]],\"start\":249,\"length\":15,\"target\":\"contractAddress\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":363,\"length\":4,\"target\":\"hash\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        ... 6 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 29 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":376,\"length\":12,\"target\":\"walletClient\",\"line\":17,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <{\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}, undefined>(args: SendTransactionParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    readonly authorizationList: readonly [SignAuthorizationReturnType];\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: `0x${string}`;\\n}>) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":389,\"length\":15,\"target\":\"sendTransaction\",\"line\":17,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) authorizationList: readonly [SignAuthorizationReturnType]\",\"start\":409,\"length\":17,\"target\":\"authorizationList\",\"line\":18,\"character\":2},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":429,\"length\":13,\"target\":\"authorization\",\"line\":18,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) data: \\\"0xdeadbeef\\\"\",\"start\":447,\"length\":4,\"target\":\"data\",\"line\":19,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":469,\"length\":2,\"target\":\"to\",\"line\":20,\"character\":2},{\"type\":\"hover\",\"text\":\"const eoa: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":473,\"length\":3,\"target\":\"eoa\",\"line\":20,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":477,\"length\":7,\"target\":\"address\",\"line\":20,\"character\":10}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":349,\"length\":0,\"text\":\"{\",\"line\":9,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":350,\"length\":0,\"text\":\"  chainId: 1,\",\"line\":10,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":351,\"length\":0,\"text\":\"  contractAddress: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\",\",\"line\":11,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":352,\"length\":0,\"text\":\"  nonce: 1,\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":353,\"length\":0,\"text\":\"  r: \\\"0xf507fb8fa33ffd05a7f26c980bbb8271aa113affc8f192feba87abe26549bda1\\\",\",\"line\":13,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":354,\"length\":0,\"text\":\"  s: \\\"0x1b2687608968ecb67230bbf7944199560fa2b3cffe9cc2b1c024e1c8f86a9e08\\\",\",\"line\":14,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":355,\"length\":0,\"text\":\"  yParity: 0,\",\"line\":15,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":356,\"length\":0,\"text\":\"}\",\"line\":16,\"character\":0}]}}"
