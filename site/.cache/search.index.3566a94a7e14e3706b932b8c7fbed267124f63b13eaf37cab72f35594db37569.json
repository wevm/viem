"{\"value\":{\"mdx\":\"---\\ndescription: Creates, signs, and sends a new transaction to the network, with EIP712 transaction support.\\n---\\n\\n# sendTransaction\\n\\nCreates, signs, and sends a new transaction to the network, with EIP712 transaction support.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { account, walletClient } from './config'\\n\\nconst hash = await walletClient.sendTransaction({ // [!code focus:99]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n// '0x...'\\n```\\n\\n```ts [config.ts]\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { zksync } from 'viem/chains'\\nimport { eip712Actions } from 'viem/zksync'\\n\\nexport const walletClient = createWalletClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(eip712WalletActions())\\n\\n// JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n```\\n\\n:::\\n\\n### Account Hoisting\\n\\nIf you do not wish to pass an `account` to every `sendTransaction`, you can also hoist the Account on the Wallet Client (see `config.ts`).\\n\\n[Learn more](/docs/clients/wallet#account).\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { walletClient } from './config'\\n \\nconst hash = await walletClient.sendTransaction({ // [!code focus:99]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n// '0x...'\\n```\\n\\n```ts [config.ts (JSON-RPC Account)]\\nimport { createWalletClient, custom } from 'viem'\\nimport { eip712Actions } from 'viem/zksync'\\n\\n// Retrieve Account from an EIP-712 Provider. // [!code focus]\\nconst [account] = await window.ethereum.request({  // [!code focus]\\n  method: 'eth_requestAccounts' // [!code focus]\\n}) // [!code focus]\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum) // [!code focus]\\n}).extend(eip712WalletActions())\\n```\\n\\n```ts [config.ts (Local Account)]\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { eip712Actions } from 'viem/zksync'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'), // [!code focus]\\n  transport: custom(window.ethereum)\\n}).extend(eip712WalletActions())\\n```\\n\\n:::\\n\\n## Returns\\n\\n[`Hash`](/docs/glossary/types#hash)\\n\\nThe [Transaction](/docs/glossary/terms#transaction) hash.\\n\\n## Parameters\\n\\n### account\\n\\n- **Type:** `Account | Address`\\n\\nThe Account to send the transaction from.\\n\\nAccepts a [JSON-RPC Account](/docs/clients/wallet#json-rpc-accounts) or [Local Account (Private Key, etc)](/docs/clients/wallet#local-accounts-private-key-mnemonic-etc).\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### to\\n\\n- **Type:** `0x${string}`\\n\\nThe transaction recipient or contract address.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n  value: 1000000000000000000n,\\n  nonce: 69\\n})\\n```\\n\\n### accessList (optional)\\n\\n- **Type:** [`AccessList`](/docs/glossary/types#accesslist)\\n\\nThe access list.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  accessList: [ // [!code focus:6]\\n    {\\n      address: '0x1',\\n      storageKeys: ['0x1'],\\n    },\\n  ],\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n})\\n```\\n\\n### chain (optional)\\n\\n- **Type:** [`Chain`](/docs/glossary/types#chain)\\n- **Default:** `walletClient.chain`\\n\\nThe target chain. If there is a mismatch between the wallet's current chain & the target chain, an error will be thrown.\\n\\nThe chain is also used to infer its request type (e.g. the Celo chain has a `gatewayFee` that you can pass through to `sendTransaction`).\\n\\n```ts\\nimport { zksync } from 'viem/chains' // [!code focus]\\n\\nconst hash = await walletClient.sendTransaction({\\n  chain: zksync, // [!code focus]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### data (optional)\\n\\n- **Type:** `0x${string}`\\n\\nA contract hashed method call with encoded args.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // [!code focus]\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### gasPrice (optional)\\n\\n- **Type:** `bigint`\\n\\nThe price (in wei) to pay per gas. Only applies to [Legacy Transactions](/docs/glossary/terms#legacy-transaction).\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  gasPrice: parseGwei('20'), // [!code focus]\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### nonce (optional)\\n\\n- **Type:** `number`\\n\\nUnique number identifying this transaction.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n  nonce: 69 // [!code focus]\\n})\\n```\\n\\n### value (optional)\\n\\n- **Type:** `bigint`\\n\\nValue in wei sent with this transaction.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: parseEther('1'), // [!code focus]\\n  nonce: 69\\n})\\n```\\n\\n### gasPerPubdata (optional)\\n\\n- **Type:** `bigint`\\n\\nThe amount of gas for publishing one byte of data on Ethereum.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  gasPerPubdata: 50000, // [!code focus]\\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### factoryDeps (optional)\\n\\n- **Type:** `[0x${string}]`\\n\\nContains bytecode of the deployed contract.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  factoryDeps: ['0xcde...'], // [!code focus]\\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### paymaster (optional)\\n\\n- **Type:** `Account | Address`\\n\\nAddress of the paymaster account that will pay the fees. The `paymasterInput` field is required with this one.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  paymaster: '0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021', // [!code focus]\\n  paymasterInput: '0x8c5a...' // [!code focus]\\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n```\\n\\n### paymasterInput (optional)\\n\\n- **Type:** `0x${string}`\\n\\nInput data to the paymaster. The `paymaster` field is required with this one.\\n\\n```ts\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  paymaster: '0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021', // [!code focus]\\n  paymasterInput: '0x8c5a...' // [!code focus]\\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n```\",\"document\":[{\"href\":\"/zksync/actions/sendTransaction#sendtransaction\",\"html\":\"</header>\\n<p>Creates, signs, and sends a new transaction to the network, with EIP712 transaction support.</p>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#sendtransaction\",\"isPage\":true,\"text\":\"\\nCreates, signs, and sends a new transaction to the network, with EIP712 transaction support.\\n\",\"title\":\"sendTransaction\",\"titles\":[]},{\"href\":\"/zksync/actions/sendTransaction#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, walletClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x...&#x27;</span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { zksync } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip712Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: zksync,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip712WalletActions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// JSON-RPC Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Local Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#usage\",\"isPage\":false,\"text\":\"\\nimport { account, walletClient } from &#x27;./config&#x27;\\n \\nconst hash = await walletClient.sendTransaction({ \\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n// &#x27;0x...&#x27;import { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { zksync } from &#x27;viem/chains&#x27;\\nimport { eip712Actions } from &#x27;viem/zksync&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  chain: zksync,\\n  transport: custom(window.ethereum)\\n}).extend(eip712WalletActions())\\n \\n// JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n\",\"title\":\"Usage\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/zksync/actions/sendTransaction#account-hoisting\",\"html\":\"\\n<p>If you do not wish to pass an <code>account</code> to every <code>sendTransaction</code>, you can also hoist the Account on the Wallet Client (see <code>config.ts</code>).</p>\\n<p><a href=\\\"/docs/clients/wallet#account\\\">Learn more</a>.</p>\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { walletClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./config&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x...&#x27;</span></span></code></pre></div><div data-title=\\\"config.ts (JSON-RPC Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (JSON-RPC Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip712Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Retrieve Account from an EIP-712 Provider. </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.ethereum.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({  </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  method: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eth_requestAccounts&#x27;</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum) </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip712WalletActions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div><div data-title=\\\"config.ts (Local Account)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts (Local Account)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { eip712Actions } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/zksync&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}).</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">extend</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">eip712WalletActions</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">())</span></span></code></pre></div></div>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#account-hoisting\",\"isPage\":false,\"text\":\"\\nIf you do not wish to pass an account to every sendTransaction, you can also hoist the Account on the Wallet Client (see config.ts).\\nLearn more.\\nimport { walletClient } from &#x27;./config&#x27;\\n \\nconst hash = await walletClient.sendTransaction({ \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n// &#x27;0x...&#x27;import { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { eip712Actions } from &#x27;viem/zksync&#x27;\\n \\n// Retrieve Account from an EIP-712 Provider. \\nconst [account] = await window.ethereum.request({  \\n  method: &#x27;eth_requestAccounts&#x27;\\n}) \\n \\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum) \\n}).extend(eip712WalletActions())import { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\nimport { eip712Actions } from &#x27;viem/zksync&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount(&#x27;0x...&#x27;), \\n  transport: custom(window.ethereum)\\n}).extend(eip712WalletActions())\\n\",\"title\":\"Account Hoisting\",\"titles\":[\"sendTransaction\",\"Usage\"]},{\"href\":\"/zksync/actions/sendTransaction#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#hash\\\"><code>Hash</code></a></p>\\n<p>The <a href=\\\"/docs/glossary/terms#transaction\\\">Transaction</a> hash.</p>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#returns\",\"isPage\":false,\"text\":\"\\nHash\\nThe Transaction hash.\\n\",\"title\":\"Returns\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/zksync/actions/sendTransaction#parameters\",\"html\":\"\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"sendTransaction\"]},{\"href\":\"/zksync/actions/sendTransaction#account\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address</code></li>\\n</ul>\\n<p>The Account to send the transaction from.</p>\\n<p>Accepts a <a href=\\\"/docs/clients/wallet#json-rpc-accounts\\\">JSON-RPC Account</a> or <a href=\\\"/docs/clients/wallet#local-accounts-private-key-mnemonic-etc\\\">Local Account (Private Key, etc)</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#account\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address\\n\\nThe Account to send the transaction from.\\nAccepts a JSON-RPC Account or Local Account (Private Key, etc).\\nconst hash = await walletClient.sendTransaction({\\n  account: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;, \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"account\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#to\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>0x${string}</code></li>\\n</ul>\\n<p>The transaction recipient or contract address.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#to\",\"isPage\":false,\"text\":\"\\n\\nType: 0x${string}\\n\\nThe transaction recipient or contract address.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;, \\n  value: 1000000000000000000n,\\n  nonce: 69\\n})\\n\",\"title\":\"to\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#accesslist-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#accesslist\\\"><code>AccessList</code></a></li>\\n</ul>\\n<p>The access list.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  accessList: [ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      storageKeys: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#accesslist-optional\",\"isPage\":false,\"text\":\"\\n\\nType: AccessList\\n\\nThe access list.\\nconst hash = await walletClient.sendTransaction({\\n  accessList: [ \\n    {\\n      address: &#x27;0x1&#x27;,\\n      storageKeys: [&#x27;0x1&#x27;],\\n    },\\n  ],\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n})\\n\",\"title\":\"accessList (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#chain-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#chain\\\"><code>Chain</code></a></li>\\n<li><strong>Default:</strong> <code>walletClient.chain</code></li>\\n</ul>\\n<p>The target chain. If there is a mismatch between the wallet&#x27;s current chain &amp; the target chain, an error will be thrown.</p>\\n<p>The chain is also used to infer its request type (e.g. the Celo chain has a <code>gatewayFee</code> that you can pass through to <code>sendTransaction</code>).</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { zksync } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: zksync, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#chain-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Chain\\nDefault: walletClient.chain\\n\\nThe target chain. If there is a mismatch between the wallet&#x27;s current chain &amp; the target chain, an error will be thrown.\\nThe chain is also used to infer its request type (e.g. the Celo chain has a gatewayFee that you can pass through to sendTransaction).\\nimport { zksync } from &#x27;viem/chains&#x27;\\n \\nconst hash = await walletClient.sendTransaction({\\n  chain: zksync, \\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"chain (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#data-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>0x${string}</code></li>\\n</ul>\\n<p>A contract hashed method call with encoded args.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  data: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#data-optional\",\"isPage\":false,\"text\":\"\\n\\nType: 0x${string}\\n\\nA contract hashed method call with encoded args.\\nconst hash = await walletClient.sendTransaction({\\n  data: &#x27;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#x27;, \\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"data (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#gasprice-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The price (in wei) to pay per gas. Only applies to <a href=\\\"/docs/glossary/terms#legacy-transaction\\\">Legacy Transactions</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gasPrice: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseGwei</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;20&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#gasprice-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe price (in wei) to pay per gas. Only applies to Legacy Transactions.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  gasPrice: parseGwei(&#x27;20&#x27;), \\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"gasPrice (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#nonce-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Unique number identifying this transaction.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#nonce-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nUnique number identifying this transaction.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: 1000000000000000000n,\\n  nonce: 69\\n})\\n\",\"title\":\"nonce (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#value-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Value in wei sent with this transaction.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">parseEther</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#value-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nValue in wei sent with this transaction.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  value: parseEther(&#x27;1&#x27;), \\n  nonce: 69\\n})\\n\",\"title\":\"value (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#gasperpubdata-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>The amount of gas for publishing one byte of data on Ethereum.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  gasPerPubdata: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">50000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#gasperpubdata-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nThe amount of gas for publishing one byte of data on Ethereum.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  gasPerPubdata: 50000, \\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"gasPerPubdata (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#factorydeps-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>[0x${string}]</code></li>\\n</ul>\\n<p>Contains bytecode of the deployed contract.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  factoryDeps: [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xcde...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#factorydeps-optional\",\"isPage\":false,\"text\":\"\\n\\nType: [0x${string}]\\n\\nContains bytecode of the deployed contract.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  factoryDeps: [&#x27;0xcde...&#x27;], \\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"factoryDeps (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#paymaster-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Account | Address</code></li>\\n</ul>\\n<p>Address of the paymaster account that will pay the fees. The <code>paymasterInput</code> field is required with this one.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymasterInput: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x8c5a...&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/zksync/actions/sendTransaction.md#paymaster-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Account | Address\\n\\nAddress of the paymaster account that will pay the fees. The paymasterInput field is required with this one.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  paymaster: &#x27;0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021&#x27;, \\n  paymasterInput: &#x27;0x8c5a...&#x27;\\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\\n\",\"title\":\"paymaster (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]},{\"href\":\"/zksync/actions/sendTransaction#paymasterinput-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>0x${string}</code></li>\\n</ul>\\n<p>Input data to the paymaster. The <code>paymaster</code> field is required with this one.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> hash</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">sendTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  to: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymaster: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  paymasterInput: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x8c5a...&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">69</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  value: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1000000000000000000</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/zksync/actions/sendTransaction.md#paymasterinput-optional\",\"isPage\":false,\"text\":\"\\n\\nType: 0x${string}\\n\\nInput data to the paymaster. The paymaster field is required with this one.\\nconst hash = await walletClient.sendTransaction({\\n  account,\\n  to: &#x27;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#x27;,\\n  paymaster: &#x27;0x4B5DF730c2e6b28E17013A1485E5d9BC41Efe021&#x27;, \\n  paymasterInput: &#x27;0x8c5a...&#x27;\\n  nonce: 69,\\n  value: 1000000000000000000n\\n})\",\"title\":\"paymasterInput (optional)\",\"titles\":[\"sendTransaction\",\"Parameters\"]}]}}"
