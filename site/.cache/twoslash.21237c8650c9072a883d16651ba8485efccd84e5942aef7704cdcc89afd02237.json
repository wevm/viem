"{\"value\":{\"code\":\"import { parseEther } from 'viem'\\nimport { account, walletClient } from './config'\\n \\nconst result = await walletClient.grantPermissions({\\n  account,\\n  expiry: 1716846083638, // [!code focus]\\n  permissions: [\\n    {\\n      type: 'native-token-transfer',\\n      data: {\\n        ticker: 'ETH',\\n      },\\n      policies: [\\n        {\\n          type: 'token-allowance',\\n          data: {\\n            allowance: parseEther('1'),\\n          },\\n        },\\n      ],\\n    },\\n  ],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":43,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":52,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"const result: GrantPermissionsReturnType\",\"start\":91,\"length\":6,\"target\":\"result\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":106,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) grantPermissions: (parameters: GrantPermissionsParameters) => Promise<GrantPermissionsReturnType>\",\"docs\":\"Request permissions from a wallet to perform actions on behalf of a user.\\n\\n- Docs: https://viem.sh/experimental/erc7715/grantPermissions\",\"tags\":[[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7715Actions } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n}).extend(erc7715Actions())\\n\\nconst result = await client.grantPermissions({\\n  expiry: 1716846083638,\\n  permissions: [\\n    {\\n      type: 'contract-call',\\n      data: {\\n        address: '0x0000000000000000000000000000000000000000',\\n      },\\n    },\\n    {\\n      type: 'native-token-limit',\\n      data: {\\n        amount: 69420n,\\n      },\\n      required: true,\\n    },\\n  ],\\n})\"]],\"start\":119,\"length\":16,\"target\":\"grantPermissions\",\"line\":3,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"docs\":\"Account to assign the permissions to.\",\"start\":140,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) expiry: number\",\"docs\":\"Timestamp (in seconds) that specifies the time by which this session MUST expire.\",\"start\":151,\"length\":6,\"target\":\"expiry\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) permissions: readonly Permission[]\",\"docs\":\"Set of permissions to grant to the user.\",\"start\":193,\"length\":11,\"target\":\"permissions\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) type: \\\"native-token-transfer\\\"\",\"start\":220,\"length\":4,\"target\":\"type\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) data: {\\n    ticker: string;\\n}\",\"start\":257,\"length\":4,\"target\":\"data\",\"line\":9,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) ticker: string\",\"docs\":\"Native token ticker (e.g. ETH).\",\"start\":273,\"length\":6,\"target\":\"ticker\",\"line\":10,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) policies: readonly Policy<bigint>[]\",\"docs\":\"Set of policies for the permission.\",\"start\":303,\"length\":8,\"target\":\"policies\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) type: \\\"token-allowance\\\"\",\"start\":335,\"length\":4,\"target\":\"type\",\"line\":14,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) data: {\\n    allowance: bigint;\\n}\",\"start\":370,\"length\":4,\"target\":\"data\",\"line\":15,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) allowance: bigint\",\"docs\":\"Token allowance (in wei).\",\"start\":390,\"length\":9,\"target\":\"allowance\",\"line\":16,\"character\":12},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":401,\"length\":10,\"target\":\"parseEther\",\"line\":16,\"character\":23}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,443]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { walletActionsErc7715 } from 'viem/experimental'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n}).extend(walletActionsErc7715())\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":404,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseEther } from 'viem'\\nimport { account, walletClient } from './config'\\n \\nconst result = await walletClient.grantPermissions({\\n  account,\\n  expiry: 1716846083638, // [!code focus]\\n  permissions: [\\n    {\\n      type: 'native-token-transfer',\\n      data: {\\n        ticker: 'ETH',\\n      },\\n      policies: [\\n        {\\n          type: 'token-allowance',\\n          data: {\\n            allowance: parseEther('1'),\\n          },\\n        },\\n      ],\\n    },\\n  ],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":43,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":52,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"const result: GrantPermissionsReturnType\",\"start\":91,\"length\":6,\"target\":\"result\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":106,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) grantPermissions: (parameters: GrantPermissionsParameters) => Promise<GrantPermissionsReturnType>\",\"docs\":\"Request permissions from a wallet to perform actions on behalf of a user.\\n\\n- Docs: https://viem.sh/experimental/erc7715/grantPermissions\",\"tags\":[[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7715Actions } from 'viem/experimental'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n}).extend(erc7715Actions())\\n\\nconst result = await client.grantPermissions({\\n  expiry: 1716846083638,\\n  permissions: [\\n    {\\n      type: 'contract-call',\\n      data: {\\n        address: '0x0000000000000000000000000000000000000000',\\n      },\\n    },\\n    {\\n      type: 'native-token-limit',\\n      data: {\\n        amount: 69420n,\\n      },\\n      required: true,\\n    },\\n  ],\\n})\"]],\"start\":119,\"length\":16,\"target\":\"grantPermissions\",\"line\":3,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"docs\":\"Account to assign the permissions to.\",\"start\":140,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) expiry: number\",\"docs\":\"Timestamp (in seconds) that specifies the time by which this session MUST expire.\",\"start\":151,\"length\":6,\"target\":\"expiry\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) permissions: readonly Permission[]\",\"docs\":\"Set of permissions to grant to the user.\",\"start\":193,\"length\":11,\"target\":\"permissions\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) type: \\\"native-token-transfer\\\"\",\"start\":220,\"length\":4,\"target\":\"type\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) data: {\\n    ticker: string;\\n}\",\"start\":257,\"length\":4,\"target\":\"data\",\"line\":9,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) ticker: string\",\"docs\":\"Native token ticker (e.g. ETH).\",\"start\":273,\"length\":6,\"target\":\"ticker\",\"line\":10,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) policies: readonly Policy<bigint>[]\",\"docs\":\"Set of policies for the permission.\",\"start\":303,\"length\":8,\"target\":\"policies\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) type: \\\"token-allowance\\\"\",\"start\":335,\"length\":4,\"target\":\"type\",\"line\":14,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) data: {\\n    allowance: bigint;\\n}\",\"start\":370,\"length\":4,\"target\":\"data\",\"line\":15,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) allowance: bigint\",\"docs\":\"Token allowance (in wei).\",\"start\":390,\"length\":9,\"target\":\"allowance\",\"line\":16,\"character\":12},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":401,\"length\":10,\"target\":\"parseEther\",\"line\":16,\"character\":23}],\"tags\":[]}}"
