"{\"value\":{\"code\":\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { client, owner } from './config.js'\\nimport { domain, types } from './data.js'\\n\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [owner],\\n})\\n\\nconst signature = await account.signTypedData({ // [!code focus]\\n  domain, // [!code focus]\\n  types, // [!code focus]\\n  primaryType: 'Mail', // [!code focus]\\n  message: { // [!code focus]\\n    from: { // [!code focus]\\n      name: 'Cow', // [!code focus]\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826', // [!code focus]\\n    }, // [!code focus]\\n    to: { // [!code focus]\\n      name: 'Bob', // [!code focus]\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB', // [!code focus]\\n    }, // [!code focus]\\n    contents: 'Hello, Bob!', // [!code focus]\\n  }, // [!code focus]\\n}) // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":9,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":75,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":83,\"length\":5,\"target\":\"owner\",\"line\":1,\"character\":17},{\"type\":\"hover\",\"text\":\"(alias) const domain: {\\n    readonly name: \\\"Ether Mail\\\";\\n    readonly version: \\\"1\\\";\\n    readonly chainId: 1;\\n    readonly verifyingContract: \\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\";\\n}\\nimport domain\",\"start\":119,\"length\":6,\"target\":\"domain\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const types: {\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}\\nimport types\",\"start\":127,\"length\":5,\"target\":\"types\",\"line\":2,\"character\":17},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":159,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":175,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":4,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client: Client\",\"start\":202,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: readonly (`0x${string}` | OneOf<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} | WebAuthnAccount>)[]\",\"start\":212,\"length\":6,\"target\":\"owners\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":221,\"length\":5,\"target\":\"owner\",\"line\":6,\"character\":11},{\"type\":\"hover\",\"text\":\"const signature: `0x${string}`\",\"start\":239,\"length\":9,\"target\":\"signature\",\"line\":9,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":257,\"length\":7,\"target\":\"account\",\"line\":9,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTypedData: <{\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}, \\\"Mail\\\">(parameters: MessageDefinition<...>) => Promise<Hex>\",\"docs\":\"Signs [EIP-712 Typed Data](https://eips.ethereum.org/EIPS/eip-712).\",\"tags\":[[\"example\",\"```ts\\nconst signature = await account.signTypedData({\\n  domain,\\n  types,\\n  primaryType: 'Mail',\\n  message,\\n})\\n```\"]],\"start\":265,\"length\":13,\"target\":\"signTypedData\",\"line\":9,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) domain?: {\\n    chainId?: number | bigint | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    salt?: `0x${string}` | undefined;\\n    verifyingContract?: `0x${string}` | undefined;\\n    version?: string | undefined | undefined;\\n} | undefined\",\"start\":300,\"length\":6,\"target\":\"domain\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) types: {\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}\",\"start\":327,\"length\":5,\"target\":\"types\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) primaryType: \\\"Person\\\" | \\\"Mail\\\"\",\"start\":353,\"length\":11,\"target\":\"primaryType\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: {\\n    from: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    to: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    contents: string;\\n}\",\"start\":393,\"length\":7,\"target\":\"message\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":425,\"length\":4,\"target\":\"from\",\"line\":14,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":456,\"length\":4,\"target\":\"name\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":492,\"length\":6,\"target\":\"wallet\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":591,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":620,\"length\":4,\"target\":\"name\",\"line\":19,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":656,\"length\":6,\"target\":\"wallet\",\"line\":20,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) contents: string\",\"start\":755,\"length\":8,\"target\":\"contents\",\"line\":22,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,864]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { http, createPublicClient } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":300,\"filename\":\"data.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/data.ts\",\"content\":\"// @filename: data.ts\\n\\n// All properties on a domain are optional\\nexport const domain = {\\n  name: 'Ether Mail',\\n  version: '1',\\n  chainId: 1,\\n  verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\\n} as const\\n \\n// The named list of all type definitions\\nexport const types = {\\n  Person: [\\n    { name: 'name', type: 'string' },\\n    { name: 'wallet', type: 'address' },\\n  ],\\n  Mail: [\\n    { name: 'from', type: 'Person' },\\n    { name: 'to', type: 'Person' },\\n    { name: 'contents', type: 'string' },\\n  ],\\n} as const\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":825,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { client, owner } from './config.js'\\nimport { domain, types } from './data.js'\\n\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [owner],\\n})\\n\\nconst signature = await account.signTypedData({ // [!code focus]\\n  domain, // [!code focus]\\n  types, // [!code focus]\\n  primaryType: 'Mail', // [!code focus]\\n  message: { // [!code focus]\\n    from: { // [!code focus]\\n      name: 'Cow', // [!code focus]\\n      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826', // [!code focus]\\n    }, // [!code focus]\\n    to: { // [!code focus]\\n      name: 'Bob', // [!code focus]\\n      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB', // [!code focus]\\n    }, // [!code focus]\\n    contents: 'Hello, Bob!', // [!code focus]\\n  }, // [!code focus]\\n}) // [!code focus]\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":9,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":75,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":83,\"length\":5,\"target\":\"owner\",\"line\":1,\"character\":17},{\"type\":\"hover\",\"text\":\"(alias) const domain: {\\n    readonly name: \\\"Ether Mail\\\";\\n    readonly version: \\\"1\\\";\\n    readonly chainId: 1;\\n    readonly verifyingContract: \\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\";\\n}\\nimport domain\",\"start\":119,\"length\":6,\"target\":\"domain\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const types: {\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}\\nimport types\",\"start\":127,\"length\":5,\"target\":\"types\",\"line\":2,\"character\":17},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":159,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":175,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":4,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client: Client\",\"start\":202,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: readonly (`0x${string}` | OneOf<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} | WebAuthnAccount>)[]\",\"start\":212,\"length\":6,\"target\":\"owners\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport owner\",\"start\":221,\"length\":5,\"target\":\"owner\",\"line\":6,\"character\":11},{\"type\":\"hover\",\"text\":\"const signature: `0x${string}`\",\"start\":239,\"length\":9,\"target\":\"signature\",\"line\":9,\"character\":6},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":257,\"length\":7,\"target\":\"account\",\"line\":9,\"character\":24},{\"type\":\"hover\",\"text\":\"(property) signTypedData: <{\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}, \\\"Mail\\\">(parameters: MessageDefinition<...>) => Promise<Hex>\",\"docs\":\"Signs [EIP-712 Typed Data](https://eips.ethereum.org/EIPS/eip-712).\",\"tags\":[[\"example\",\"```ts\\nconst signature = await account.signTypedData({\\n  domain,\\n  types,\\n  primaryType: 'Mail',\\n  message,\\n})\\n```\"]],\"start\":265,\"length\":13,\"target\":\"signTypedData\",\"line\":9,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) domain?: {\\n    chainId?: number | bigint | undefined | undefined;\\n    name?: string | undefined | undefined;\\n    salt?: `0x${string}` | undefined;\\n    verifyingContract?: `0x${string}` | undefined;\\n    version?: string | undefined | undefined;\\n} | undefined\",\"start\":300,\"length\":6,\"target\":\"domain\",\"line\":10,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) types: {\\n    readonly Person: readonly [{\\n        readonly name: \\\"name\\\";\\n        readonly type: \\\"string\\\";\\n    }, {\\n        readonly name: \\\"wallet\\\";\\n        readonly type: \\\"address\\\";\\n    }];\\n    readonly Mail: readonly [{\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"Person\\\";\\n    }, {\\n        ...;\\n    }, {\\n        ...;\\n    }];\\n}\",\"start\":327,\"length\":5,\"target\":\"types\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) primaryType: \\\"Person\\\" | \\\"Mail\\\"\",\"start\":353,\"length\":11,\"target\":\"primaryType\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: {\\n    from: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    to: {\\n        name: string;\\n        wallet: `0x${string}`;\\n    };\\n    contents: string;\\n}\",\"start\":393,\"length\":7,\"target\":\"message\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":425,\"length\":4,\"target\":\"from\",\"line\":14,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":456,\"length\":4,\"target\":\"name\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":492,\"length\":6,\"target\":\"wallet\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: {\\n    name: string;\\n    wallet: `0x${string}`;\\n}\",\"start\":591,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) name: string\",\"start\":620,\"length\":4,\"target\":\"name\",\"line\":19,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) wallet: `0x${string}`\",\"start\":656,\"length\":6,\"target\":\"wallet\",\"line\":20,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) contents: string\",\"start\":755,\"length\":8,\"target\":\"contents\",\"line\":22,\"character\":4}],\"tags\":[]}}"
