"{\"value\":{\"code\":\"import { createTestClient, http, publicActions, walletActions } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\\n  .extend(publicActions) // [!code hl]\\n  .extend(walletActions) // [!code hl]\\n\\nconst blockNumber = await client.getBlockNumber() // Public Action\\nconst hash = await client.sendTransaction({ ... }) // Wallet Action\\nconst mine = await client.mine({ blocks: 1 }) // Test Action\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createTestClient<mode extends \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\", transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: TestClientConfig<mode, transport, chain, accountOrAddress, rpcSchema>): TestClient<mode, transport, chain, ParseAccount<accountOrAddress>, true, rpcSchema>\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":16,\"target\":\"createTestClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":27,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":27},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":33,\"length\":13,\"target\":\"publicActions\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":48,\"length\":13,\"target\":\"walletActions\",\"line\":0,\"character\":48},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":85,\"length\":7,\"target\":\"foundry\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":121,\"length\":6,\"target\":\"client\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createTestClient<\\\"anvil\\\", HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":130,\"length\":16,\"target\":\"createTestClient\",\"line\":3,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":151,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":158,\"length\":7,\"target\":\"foundry\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) mode: \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\"\",\"docs\":\"Mode of the test client.\",\"start\":169,\"length\":4,\"target\":\"mode\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":186,\"length\":9,\"target\":\"transport\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":197,\"length\":4,\"target\":\"http\",\"line\":6,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) extend: <PublicActions<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined>>(fn: (client: Client<...>) => PublicActions<...>) => Client<...>\",\"start\":212,\"length\":6,\"target\":\"extend\",\"line\":8,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":219,\"length\":13,\"target\":\"publicActions\",\"line\":8,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) extend: <WalletActions<{\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined>>(fn: (client: Client<...>) => WalletActions<...>) => Client<...>\",\"start\":251,\"length\":6,\"target\":\"extend\",\"line\":9,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":258,\"length\":13,\"target\":\"walletActions\",\"line\":9,\"character\":10},{\"type\":\"hover\",\"text\":\"const blockNumber: bigint\",\"start\":294,\"length\":11,\"target\":\"blockNumber\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":314,\"length\":6,\"target\":\"client\",\"line\":11,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) getBlockNumber: (args?: GetBlockNumberParameters | undefined) => Promise<GetBlockNumberReturnType>\",\"docs\":\"Returns the number of the most recent block seen.\\n\\n- Docs: https://viem.sh/docs/actions/public/getBlockNumber\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\\n- JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\",\"tags\":[[\"param\",\"args - {@link GetBlockNumberParameters}\"],[\"returns\",\"The number of the block. {@link GetBlockNumberReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst blockNumber = await client.getBlockNumber()\\n// 69420n\"]],\"start\":321,\"length\":14,\"target\":\"getBlockNumber\",\"line\":11,\"character\":33},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":361,\"length\":4,\"target\":\"hash\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":374,\"length\":6,\"target\":\"client\",\"line\":12,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <any, undefined>(args: any) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":381,\"length\":15,\"target\":\"sendTransaction\",\"line\":12,\"character\":26},{\"type\":\"hover\",\"text\":\"const mine: void\",\"start\":429,\"length\":4,\"target\":\"mine\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":442,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) mine: (args: MineParameters) => Promise<void>\",\"docs\":\"Mine a specified number of blocks.\\n\\n- Docs: https://viem.sh/docs/actions/test/mine\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"args – {@link MineParameters}\"],[\"example\",\"import { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: 'foundry',\\n  transport: http(),\\n})\\nawait client.mine({ blocks: 1 })\"]],\"start\":449,\"length\":4,\"target\":\"mine\",\"line\":13,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) blocks: number\",\"docs\":\"Number of blocks to mine.\",\"start\":456,\"length\":6,\"target\":\"blocks\",\"line\":13,\"character\":33}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,13]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":0,\"end\":13}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"// @noErrors\\nimport { createTestClient, http, publicActions, walletActions } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  chain: foundry,\\n  mode: 'anvil',\\n  transport: http(), \\n})\\n  .extend(publicActions) // [!code hl]\\n  .extend(walletActions) // [!code hl]\\n\\nconst blockNumber = await client.getBlockNumber() // Public Action\\nconst hash = await client.sendTransaction({ ... }) // Wallet Action\\nconst mine = await client.mine({ blocks: 1 }) // Test Action\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createTestClient<mode extends \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\", transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: TestClientConfig<mode, transport, chain, accountOrAddress, rpcSchema>): TestClient<mode, transport, chain, ParseAccount<accountOrAddress>, true, rpcSchema>\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":16,\"target\":\"createTestClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":27,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":27},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":33,\"length\":13,\"target\":\"publicActions\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":48,\"length\":13,\"target\":\"walletActions\",\"line\":0,\"character\":48},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":85,\"length\":7,\"target\":\"foundry\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":121,\"length\":6,\"target\":\"client\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createTestClient<\\\"anvil\\\", HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createTestClient\",\"docs\":\"Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/test\\n\\nA Test Client is an interface to \\\"test\\\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\",\"tags\":[[\"param\",\"config - {@link TestClientConfig}\"],[\"returns\",\"A Test Client. {@link TestClient}\"],[\"example\",\"import { createTestClient, custom } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: foundry,\\n  transport: http(),\\n})\"]],\"start\":130,\"length\":16,\"target\":\"createTestClient\",\"line\":3,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":151,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const foundry: {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport foundry\",\"start\":158,\"length\":7,\"target\":\"foundry\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) mode: \\\"anvil\\\" | \\\"hardhat\\\" | \\\"ganache\\\"\",\"docs\":\"Mode of the test client.\",\"start\":169,\"length\":4,\"target\":\"mode\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":186,\"length\":9,\"target\":\"transport\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":197,\"length\":4,\"target\":\"http\",\"line\":6,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) extend: <PublicActions<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined>>(fn: (client: Client<...>) => PublicActions<...>) => Client<...>\",\"start\":212,\"length\":6,\"target\":\"extend\",\"line\":8,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function publicActions<transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): PublicActions<transport, chain, account>\\nimport publicActions\",\"start\":219,\"length\":13,\"target\":\"publicActions\",\"line\":8,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) extend: <WalletActions<{\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined>>(fn: (client: Client<...>) => WalletActions<...>) => Client<...>\",\"start\":251,\"length\":6,\"target\":\"extend\",\"line\":9,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) function walletActions<transport extends Transport, chain extends Chain | undefined = Chain | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>): WalletActions<chain, account>\\nimport walletActions\",\"start\":258,\"length\":13,\"target\":\"walletActions\",\"line\":9,\"character\":10},{\"type\":\"hover\",\"text\":\"const blockNumber: bigint\",\"start\":294,\"length\":11,\"target\":\"blockNumber\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":314,\"length\":6,\"target\":\"client\",\"line\":11,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) getBlockNumber: (args?: GetBlockNumberParameters | undefined) => Promise<GetBlockNumberReturnType>\",\"docs\":\"Returns the number of the most recent block seen.\\n\\n- Docs: https://viem.sh/docs/actions/public/getBlockNumber\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\\n- JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\",\"tags\":[[\"param\",\"args - {@link GetBlockNumberParameters}\"],[\"returns\",\"The number of the block. {@link GetBlockNumberReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst blockNumber = await client.getBlockNumber()\\n// 69420n\"]],\"start\":321,\"length\":14,\"target\":\"getBlockNumber\",\"line\":11,\"character\":33},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":361,\"length\":4,\"target\":\"hash\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":374,\"length\":6,\"target\":\"client\",\"line\":12,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) sendTransaction: <any, undefined>(args: any) => Promise<SendTransactionReturnType>\",\"docs\":\"Creates, signs, and sends a new transaction to the network.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendTransaction\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\\n- JSON-RPC Methods:\\n  - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\\n  - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\",\"tags\":[[\"param\",\"args - {@link SendTransactionParameters}\"],[\"returns\",\"The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.sendTransaction({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst hash = await client.sendTransaction({\\n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n  value: 1000000000000000000n,\\n})\"]],\"start\":381,\"length\":15,\"target\":\"sendTransaction\",\"line\":12,\"character\":26},{\"type\":\"hover\",\"text\":\"const mine: void\",\"start\":429,\"length\":4,\"target\":\"mine\",\"line\":13,\"character\":6},{\"type\":\"hover\",\"text\":\"const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers?: {\\n        [key: string]: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n        default: {\\n            name: string;\\n            url: string;\\n            apiUrl?: string | undefined;\\n        };\\n    } | undefined;\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, TestRpcSchema<...>, {\\n    ...;\\n} & ... 2 more ... & TestActions>\",\"start\":442,\"length\":6,\"target\":\"client\",\"line\":13,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) mine: (args: MineParameters) => Promise<void>\",\"docs\":\"Mine a specified number of blocks.\\n\\n- Docs: https://viem.sh/docs/actions/test/mine\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"args – {@link MineParameters}\"],[\"example\",\"import { createTestClient, http } from 'viem'\\nimport { foundry } from 'viem/chains'\\n\\nconst client = createTestClient({\\n  mode: 'anvil',\\n  chain: 'foundry',\\n  transport: http(),\\n})\\nawait client.mine({ blocks: 1 })\"]],\"start\":449,\"length\":4,\"target\":\"mine\",\"line\":13,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) blocks: number\",\"docs\":\"Number of blocks to mine.\",\"start\":456,\"length\":6,\"target\":\"blocks\",\"line\":13,\"character\":33}],\"tags\":[]}}"
