"{\"value\":{\"code\":\"import { account, walletClient, publicClient } from './client'\\nimport { message } from './message'\\n\\nconst signature = await walletClient.signMessage({ account, message })\\n// [!code focus:99]\\nconst valid = await publicClient.verifySiweMessage({\\n  message,\\n  signature,\\n})\\n\",\"nodes\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":271,\"length\":0,\"text\":\"true\",\"line\":10,\"character\":0}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[1770,1784],[0,1499]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ JSON-RPC Account\",\"start\":381,\"end\":409},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ Local Account\",\"start\":469,\"end\":494},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ JSON-RPC Account\",\"start\":1295,\"end\":1323},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↓ Local Account\",\"start\":1383,\"end\":1408},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"true\",\"start\":1770,\"end\":1784}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"message.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/message.ts\",\"content\":\"// @filename: message.ts\\n\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":26,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum!)\\n})\\n\\n// @log: ↓ JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n\\n// @log: ↓ Local Account\\n\\n// export const account = privateKeyToAccount(...)\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":546,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\n// ---cut---\\nimport { createSiweMessage, generateSiweNonce } from 'viem/siwe'\\nimport { mainnet } from 'viem/chains'\\nimport { account } from './client'\\n\\nexport const message = createSiweMessage({\\n  address: account.address,\\n  chainId: mainnet.id,\\n  domain: 'example.com',\\n  nonce: generateSiweNonce(),\\n  uri: 'https://example.com/path',\\n  version: '1',\\n})\\n\",\"extension\":\"js\",\"supportLsp\":true},{\"offset\":940,\"filename\":\"client.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/client.ts\",\"content\":\"// @filename: client.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum!)\\n})\\n\\n// @log: ↓ JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n\\n// @log: ↓ Local Account\\n\\n// export const account = privateKeyToAccount(...)\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1460,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { account, walletClient, publicClient } from './client'\\nimport { message } from './message'\\n\\nconst signature = await walletClient.signMessage({ account, message })\\n// [!code focus:99]\\nconst valid = await publicClient.verifySiweMessage({\\n  message,\\n  signature,\\n})\\n// @log: true\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":271,\"length\":0,\"text\":\"true\",\"line\":10,\"character\":0}]}}"
