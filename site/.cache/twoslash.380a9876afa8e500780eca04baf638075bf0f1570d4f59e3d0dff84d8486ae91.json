"{\"value\":{\"code\":\"import { parseEther } from 'viem'\\nimport { bundlerClient, publicClient } from './config'\\nimport { wagmiAbi } from './abi' // [!code focus]\\n\\nconst userOperation = await bundlerClient.prepareUserOperation({ // [!code focus:7]\\n  calls: [{\\n    abi: wagmiAbi,\\n    functionName: 'mint',\\n    to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  }],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\\nimport bundlerClient\",\"start\":43,\"length\":13,\"target\":\"bundlerClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"import publicClient\",\"start\":58,\"length\":12,\"target\":\"publicClient\",\"line\":1,\"character\":24},{\"type\":\"hover\",\"text\":\"(alias) const wagmiAbi: readonly [{\\n    readonly inputs: readonly [];\\n    readonly name: \\\"mint\\\";\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly type: \\\"function\\\";\\n}]\\nimport wagmiAbi\",\"start\":98,\"length\":8,\"target\":\"wagmiAbi\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const userOperation: {\\n    callData: Hex;\\n    paymasterAndData: `0x${string}` | undefined;\\n    sender: UserOperation[\\\"sender\\\"];\\n    factory: UserOperation[\\\"factory\\\"];\\n    ... 11 more ...;\\n    signature: UserOperation[\\\"signature\\\"];\\n} | ... 6 more ... | {\\n    ...;\\n}\",\"start\":146,\"length\":13,\"target\":\"userOperation\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\\nimport bundlerClient\",\"start\":168,\"length\":13,\"target\":\"bundlerClient\",\"line\":4,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) prepareUserOperation: <readonly unknown[], {\\n    readonly calls: [{\\n        readonly abi: readonly [{\\n            readonly inputs: readonly [];\\n            readonly name: \\\"mint\\\";\\n            readonly outputs: readonly [];\\n            readonly stateMutability: \\\"nonpayable\\\";\\n            readonly type: \\\"function\\\";\\n        }];\\n        readonly functionName: \\\"mint\\\";\\n        readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    }];\\n}, undefined>(parameters: PrepareUserOperationParameters<...>) => Promise<...>\",\"docs\":\"Prepares a User Operation and fills in missing properties.\\n\\n- Docs: https://viem.sh/actions/bundler/prepareUserOperation\",\"tags\":[[\"param\",\"args - {@link PrepareUserOperationParameters}\"],[\"returns\",\"The User Operation. {@link PrepareUserOperationReturnType}\"],[\"example\",\"import { createBundlerClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { toSmartAccount } from 'viem/accounts'\\n\\nconst account = await toSmartAccount({ ... })\\n\\nconst client = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst request = await client.prepareUserOperation({\\n  account,\\n  calls: [{ to: '0x...', value: parseEther('1') }],\\n})\"]],\"start\":182,\"length\":20,\"target\":\"prepareUserOperation\",\"line\":4,\"character\":42},{\"type\":\"hover\",\"text\":\"(property) calls: [{\\n    readonly abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"mint\\\";\\n        readonly outputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"function\\\";\\n    }];\\n    readonly functionName: \\\"mint\\\";\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n}]\",\"start\":226,\"length\":5,\"target\":\"calls\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly inputs: readonly [];\\n    readonly name: \\\"mint\\\";\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly type: \\\"function\\\";\\n}]\",\"start\":240,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const wagmiAbi: readonly [{\\n    readonly inputs: readonly [];\\n    readonly name: \\\"mint\\\";\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly type: \\\"function\\\";\\n}]\\nimport wagmiAbi\",\"start\":245,\"length\":8,\"target\":\"wagmiAbi\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"mint\\\"\",\"start\":259,\"length\":12,\"target\":\"functionName\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\"\",\"start\":285,\"length\":2,\"target\":\"to\",\"line\":8,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1943]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\\n\\nexport const bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":569,\"filename\":\"abi.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/abi.ts\",\"content\":\"// @filename: abi.ts\\nexport const wagmiAbi = [\\n  // ...\\n  {\\n    inputs: [],\\n    name: \\\"mint\\\",\\n    outputs: [],\\n    stateMutability: \\\"nonpayable\\\",\\n    type: \\\"function\\\",\\n  },\\n  // ...\\n] as const;\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":763,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\\n\\nexport const bundlerClient = createBundlerClient({\\n  account, // [!code ++]\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1346,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient, toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\\n\\nexport const bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc')\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1904,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseEther } from 'viem'\\nimport { bundlerClient, publicClient } from './config'\\nimport { wagmiAbi } from './abi' // [!code focus]\\n\\nconst userOperation = await bundlerClient.prepareUserOperation({ // [!code focus:7]\\n  calls: [{\\n    abi: wagmiAbi,\\n    functionName: 'mint',\\n    to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  }],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\\nimport bundlerClient\",\"start\":43,\"length\":13,\"target\":\"bundlerClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"import publicClient\",\"start\":58,\"length\":12,\"target\":\"publicClient\",\"line\":1,\"character\":24},{\"type\":\"hover\",\"text\":\"(alias) const wagmiAbi: readonly [{\\n    readonly inputs: readonly [];\\n    readonly name: \\\"mint\\\";\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly type: \\\"function\\\";\\n}]\\nimport wagmiAbi\",\"start\":98,\"length\":8,\"target\":\"wagmiAbi\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const userOperation: {\\n    callData: Hex;\\n    paymasterAndData: `0x${string}` | undefined;\\n    sender: UserOperation[\\\"sender\\\"];\\n    factory: UserOperation[\\\"factory\\\"];\\n    ... 11 more ...;\\n    signature: UserOperation[\\\"signature\\\"];\\n} | ... 6 more ... | {\\n    ...;\\n}\",\"start\":146,\"length\":13,\"target\":\"userOperation\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\\nimport bundlerClient\",\"start\":168,\"length\":13,\"target\":\"bundlerClient\",\"line\":4,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) prepareUserOperation: <readonly unknown[], {\\n    readonly calls: [{\\n        readonly abi: readonly [{\\n            readonly inputs: readonly [];\\n            readonly name: \\\"mint\\\";\\n            readonly outputs: readonly [];\\n            readonly stateMutability: \\\"nonpayable\\\";\\n            readonly type: \\\"function\\\";\\n        }];\\n        readonly functionName: \\\"mint\\\";\\n        readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    }];\\n}, undefined>(parameters: PrepareUserOperationParameters<...>) => Promise<...>\",\"docs\":\"Prepares a User Operation and fills in missing properties.\\n\\n- Docs: https://viem.sh/actions/bundler/prepareUserOperation\",\"tags\":[[\"param\",\"args - {@link PrepareUserOperationParameters}\"],[\"returns\",\"The User Operation. {@link PrepareUserOperationReturnType}\"],[\"example\",\"import { createBundlerClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { toSmartAccount } from 'viem/accounts'\\n\\nconst account = await toSmartAccount({ ... })\\n\\nconst client = createBundlerClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst request = await client.prepareUserOperation({\\n  account,\\n  calls: [{ to: '0x...', value: parseEther('1') }],\\n})\"]],\"start\":182,\"length\":20,\"target\":\"prepareUserOperation\",\"line\":4,\"character\":42},{\"type\":\"hover\",\"text\":\"(property) calls: [{\\n    readonly abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"mint\\\";\\n        readonly outputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"function\\\";\\n    }];\\n    readonly functionName: \\\"mint\\\";\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n}]\",\"start\":226,\"length\":5,\"target\":\"calls\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly inputs: readonly [];\\n    readonly name: \\\"mint\\\";\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly type: \\\"function\\\";\\n}]\",\"start\":240,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const wagmiAbi: readonly [{\\n    readonly inputs: readonly [];\\n    readonly name: \\\"mint\\\";\\n    readonly outputs: readonly [];\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly type: \\\"function\\\";\\n}]\\nimport wagmiAbi\",\"start\":245,\"length\":8,\"target\":\"wagmiAbi\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"mint\\\"\",\"start\":259,\"length\":12,\"target\":\"functionName\",\"line\":7,\"character\":4},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\"\",\"start\":285,\"length\":2,\"target\":\"to\",\"line\":8,\"character\":4}],\"tags\":[]}}"
