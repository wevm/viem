"{\"value\":{\"code\":\"import { parseEther } from 'viem'\\nimport { account, client } from './config'\\n \\nconst hash = await client.executeBatches({ // [!code focus:99]\\n  account,\\n  address: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n  batches: [\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('1')\\n        },\\n      ]\\n    },\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('2')\\n        },\\n        {\\n          data: '0xdeadbeef',\\n          to: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n        },\\n      ],\\n    },\\n  ],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport account\",\"start\":43,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, {\\n    ...;\\n}>\\nimport client\",\"start\":52,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":85,\"length\":4,\"target\":\"hash\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, {\\n    ...;\\n}>\\nimport client\",\"start\":98,\"length\":6,\"target\":\"client\",\"line\":3,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) executeBatches: <[{\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }];\\n}, {\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }, {\\n        ...;\\n    }];\\n}], undefined>(parameters: ExecuteBatchesParameters<...>) => Promise<ExecuteBatchesReturnType>\",\"docs\":\"Executes batches of call(s) using \\\"batch of batches\\\" mode on an [ERC-7821-compatible contract](https://eips.ethereum.org/EIPS/eip-7821).\",\"tags\":[[\"example\",\"```ts\\nimport { createClient, http, parseEther } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nconst account = privateKeyToAccount('0x...')\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\\nconst hash = await client.executeBatches({\\n  account,\\n  batches: [\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('1'),\\n        },\\n      ],\\n    },\\n    {\\n      calls: [\\n        {\\n          to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n          value: parseEther('2'),\\n        },\\n        {\\n          data: '0xdeadbeef',\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        },\\n      ],\\n    },\\n  ],\\n  to: account.address,\\n})\\n```\"],[\"example\",\"```ts\\n// Account Hoisting\\nimport { createClient, http, parseEther } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nconst account = privateKeyToAccount('0x...')\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\\nconst hash = await client.executeBatches({\\n  batches: [\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('1'),\\n        },\\n      ],\\n    },\\n    {\\n      calls: [\\n        {\\n          to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n          value: parseEther('2'),\\n        },\\n        {\\n          data: '0xdeadbeef',\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        },\\n      ],\\n    },\\n  ],\\n  to: account.address,\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link ExecuteBatchesParameters}\"],[\"returns\",\"Transaction hash. {@link ExecuteBatchesReturnType}\"]],\"start\":105,\"length\":14,\"target\":\"executeBatches\",\"line\":3,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account | null\",\"start\":144,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"docs\":\"Address that will execute the calls.\",\"start\":155,\"length\":7,\"target\":\"address\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) batches: [{\\n    calls: readonly [Prettify<Call<{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }, {}>>];\\n} & {\\n    opData?: Hex | undefined;\\n}, {\\n    ...;\\n} & {\\n    opData?: Hex | undefined;\\n}]\",\"docs\":\"Batches to execute.\",\"start\":212,\"length\":7,\"target\":\"batches\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {}>>]\",\"start\":235,\"length\":5,\"target\":\"calls\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":264,\"length\":2,\"target\":\"to\",\"line\":10,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":324,\"length\":5,\"target\":\"value\",\"line\":11,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":331,\"length\":10,\"target\":\"parseEther\",\"line\":11,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {}>>, Prettify<Call<{\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: \\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\";\\n}, {}>>]\",\"start\":385,\"length\":5,\"target\":\"calls\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":414,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":474,\"length\":5,\"target\":\"value\",\"line\":19,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":481,\"length\":10,\"target\":\"parseEther\",\"line\":19,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data?: `0x${string}` | undefined\",\"start\":528,\"length\":4,\"target\":\"data\",\"line\":22,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":558,\"length\":2,\"target\":\"to\",\"line\":23,\"character\":10}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1156]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({\\n  account,\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":376,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({\\n  account,\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":752,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1117,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseEther } from 'viem'\\nimport { account, client } from './config'\\n \\nconst hash = await client.executeBatches({ // [!code focus:99]\\n  account,\\n  address: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n  batches: [\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('1')\\n        },\\n      ]\\n    },\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('2')\\n        },\\n        {\\n          data: '0xdeadbeef',\\n          to: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n        },\\n      ],\\n    },\\n  ],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseEther\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\\nimport account\",\"start\":43,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, {\\n    ...;\\n}>\\nimport client\",\"start\":52,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":85,\"length\":4,\"target\":\"hash\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined, {\\n    ...;\\n}>\\nimport client\",\"start\":98,\"length\":6,\"target\":\"client\",\"line\":3,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) executeBatches: <[{\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }];\\n}, {\\n    readonly calls: [{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }, {\\n        ...;\\n    }];\\n}], undefined>(parameters: ExecuteBatchesParameters<...>) => Promise<ExecuteBatchesReturnType>\",\"docs\":\"Executes batches of call(s) using \\\"batch of batches\\\" mode on an [ERC-7821-compatible contract](https://eips.ethereum.org/EIPS/eip-7821).\",\"tags\":[[\"example\",\"```ts\\nimport { createClient, http, parseEther } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nconst account = privateKeyToAccount('0x...')\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\\nconst hash = await client.executeBatches({\\n  account,\\n  batches: [\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('1'),\\n        },\\n      ],\\n    },\\n    {\\n      calls: [\\n        {\\n          to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n          value: parseEther('2'),\\n        },\\n        {\\n          data: '0xdeadbeef',\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        },\\n      ],\\n    },\\n  ],\\n  to: account.address,\\n})\\n```\"],[\"example\",\"```ts\\n// Account Hoisting\\nimport { createClient, http, parseEther } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7821Actions } from 'viem/experimental'\\n\\nconst account = privateKeyToAccount('0x...')\\n\\nconst client = createClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7821Actions())\\n\\nconst hash = await client.executeBatches({\\n  batches: [\\n    {\\n      calls: [\\n        {\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n          value: parseEther('1'),\\n        },\\n      ],\\n    },\\n    {\\n      calls: [\\n        {\\n          to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n          value: parseEther('2'),\\n        },\\n        {\\n          data: '0xdeadbeef',\\n          to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n        },\\n      ],\\n    },\\n  ],\\n  to: account.address,\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link ExecuteBatchesParameters}\"],[\"returns\",\"Transaction hash. {@link ExecuteBatchesReturnType}\"]],\"start\":105,\"length\":14,\"target\":\"executeBatches\",\"line\":3,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account | null\",\"start\":144,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"docs\":\"Address that will execute the calls.\",\"start\":155,\"length\":7,\"target\":\"address\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) batches: [{\\n    calls: readonly [Prettify<Call<{\\n        readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n        readonly value: bigint;\\n    }, {}>>];\\n} & {\\n    opData?: Hex | undefined;\\n}, {\\n    ...;\\n} & {\\n    opData?: Hex | undefined;\\n}]\",\"docs\":\"Batches to execute.\",\"start\":212,\"length\":7,\"target\":\"batches\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {}>>]\",\"start\":235,\"length\":5,\"target\":\"calls\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":264,\"length\":2,\"target\":\"to\",\"line\":10,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":324,\"length\":5,\"target\":\"value\",\"line\":11,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":331,\"length\":10,\"target\":\"parseEther\",\"line\":11,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: bigint;\\n}, {}>>, Prettify<Call<{\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: \\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\";\\n}, {}>>]\",\"start\":385,\"length\":5,\"target\":\"calls\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":414,\"length\":2,\"target\":\"to\",\"line\":18,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":474,\"length\":5,\"target\":\"value\",\"line\":19,\"character\":10},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":481,\"length\":10,\"target\":\"parseEther\",\"line\":19,\"character\":17},{\"type\":\"hover\",\"text\":\"(property) data?: `0x${string}` | undefined\",\"start\":528,\"length\":4,\"target\":\"data\",\"line\":22,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":558,\"length\":2,\"target\":\"to\",\"line\":23,\"character\":10}],\"tags\":[]}}"
