"{\"value\":{\"code\":\"const { gasPrice } = await publicClient.estimateFeesPerGas({\\n  type: 'legacy' // [!code focus]\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const gasPrice: bigint\",\"docs\":\"Base fee per gas.\",\"start\":8,\"length\":8,\"target\":\"gasPrice\",\"line\":0,\"character\":8},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":27,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":27},{\"type\":\"hover\",\"text\":\"(property) estimateFeesPerGas: <undefined, \\\"legacy\\\">(args?: EstimateFeesPerGasParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, \\\"legacy\\\"> | undefined) => Promise<...>\",\"docs\":\"Returns an estimate for the fees per gas for a transaction to be included\\nin the next block.\\n\\n- Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link EstimateFeesPerGasParameters}\"],[\"returns\",\"An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst maxPriorityFeePerGas = await client.estimateFeesPerGas()\\n// { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\"]],\"start\":40,\"length\":18,\"target\":\"estimateFeesPerGas\",\"line\":0,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type?: FeeValuesType | undefined\",\"docs\":\"The type of fee values to return.\\n\\n- `legacy`: Returns the legacy gas price.\\n- `eip1559`: Returns the max fee per gas and max priority fee per gas.\",\"tags\":[[\"default\",\"'eip1559'\"]],\"start\":63,\"length\":4,\"target\":\"type\",\"line\":1,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nconst { gasPrice } = await publicClient.estimateFeesPerGas({\\n  type: 'legacy' // [!code focus]\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const gasPrice: bigint\",\"docs\":\"Base fee per gas.\",\"start\":8,\"length\":8,\"target\":\"gasPrice\",\"line\":0,\"character\":8},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":27,\"length\":12,\"target\":\"publicClient\",\"line\":0,\"character\":27},{\"type\":\"hover\",\"text\":\"(property) estimateFeesPerGas: <undefined, \\\"legacy\\\">(args?: EstimateFeesPerGasParameters<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, \\\"legacy\\\"> | undefined) => Promise<...>\",\"docs\":\"Returns an estimate for the fees per gas for a transaction to be included\\nin the next block.\\n\\n- Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link EstimateFeesPerGasParameters}\"],[\"returns\",\"An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst maxPriorityFeePerGas = await client.estimateFeesPerGas()\\n// { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\"]],\"start\":40,\"length\":18,\"target\":\"estimateFeesPerGas\",\"line\":0,\"character\":40},{\"type\":\"hover\",\"text\":\"(property) type?: FeeValuesType | undefined\",\"docs\":\"The type of fee values to return.\\n\\n- `legacy`: Returns the legacy gas price.\\n- `eip1559`: Returns the max fee per gas and max priority fee per gas.\",\"tags\":[[\"default\",\"'eip1559'\"]],\"start\":63,\"length\":4,\"target\":\"type\",\"line\":1,\"character\":2}],\"tags\":[]}}"
