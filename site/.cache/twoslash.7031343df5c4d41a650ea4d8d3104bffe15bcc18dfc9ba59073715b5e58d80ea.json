"{\"value\":{\"code\":\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' // [!code ++] // [!code focus]\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n\\nconst owner = privateKeyToAccount('0x...') // [!code ++] // [!code focus]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createPublicClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":29,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) function createBundlerClient<transport extends Transport, chain extends Chain | undefined = undefined, account extends SmartAccount | undefined = undefined, client extends Client | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: BundlerClientConfig<transport, chain, account, client, rpcSchema>): BundlerClient<transport, chain, account, client, rpcSchema>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":57,\"length\":19,\"target\":\"createBundlerClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":120,\"length\":7,\"target\":\"mainnet\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":158,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":9},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":239,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":248,\"length\":18,\"target\":\"createPublicClient\",\"line\":5,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":271,\"length\":5,\"target\":\"chain\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":278,\"length\":7,\"target\":\"mainnet\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":289,\"length\":9,\"target\":\"transport\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":300,\"length\":4,\"target\":\"http\",\"line\":7,\"character\":13},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\",\"start\":318,\"length\":13,\"target\":\"bundlerClient\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createBundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <client>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>(parameters: BundlerClientConfig<...>): BundlerClient<...>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":334,\"length\":19,\"target\":\"createBundlerClient\",\"line\":10,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client?: Client | {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n} | undefined\",\"docs\":\"Client that points to an Execution RPC URL.\",\"start\":358,\"length\":6,\"target\":\"client\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":368,\"length\":9,\"target\":\"transport\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":379,\"length\":4,\"target\":\"http\",\"line\":12,\"character\":13},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":433,\"length\":5,\"target\":\"owner\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":441,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":15,\"character\":14}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":true,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,13]],\"flagNotations\":[{\"type\":\"handbookOptions\",\"name\":\"noErrors\",\"value\":true,\"start\":0,\"end\":13}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"// @noErrors\\nimport { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts' // [!code ++] // [!code focus]\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\\n\\nconst owner = privateKeyToAccount('0x...') // [!code ++] // [!code focus]\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createPublicClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":29,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) function createBundlerClient<transport extends Transport, chain extends Chain | undefined = undefined, account extends SmartAccount | undefined = undefined, client extends Client | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: BundlerClientConfig<transport, chain, account, client, rpcSchema>): BundlerClient<transport, chain, account, client, rpcSchema>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":57,\"length\":19,\"target\":\"createBundlerClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":120,\"length\":7,\"target\":\"mainnet\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":158,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":9},{\"type\":\"hover\",\"text\":\"const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":239,\"length\":6,\"target\":\"client\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":248,\"length\":18,\"target\":\"createPublicClient\",\"line\":5,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":271,\"length\":5,\"target\":\"chain\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":278,\"length\":7,\"target\":\"mainnet\",\"line\":6,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":289,\"length\":9,\"target\":\"transport\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":300,\"length\":4,\"target\":\"http\",\"line\":7,\"character\":13},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>\",\"start\":318,\"length\":13,\"target\":\"bundlerClient\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createBundlerClient<HttpTransport<undefined, false>, undefined, undefined, {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <client>(fn: (client: Client<...>) => client) => Client<...>;\\n}, undefined>(parameters: BundlerClientConfig<...>): BundlerClient<...>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":334,\"length\":19,\"target\":\"createBundlerClient\",\"line\":10,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client?: Client | {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n} | undefined\",\"docs\":\"Client that points to an Execution RPC URL.\",\"start\":358,\"length\":6,\"target\":\"client\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":368,\"length\":9,\"target\":\"transport\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":379,\"length\":4,\"target\":\"http\",\"line\":12,\"character\":13},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":433,\"length\":5,\"target\":\"owner\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":441,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":15,\"character\":14}],\"tags\":[]}}"
