"{\"value\":{\"mdx\":\"---\\ndescription: Verifies if a signed message was generated by the provided address.\\n---\\n\\n# verifyMessage\\n\\nVerify that a message was signed by the provided address.\\n\\n:::warning[Warning]\\nThis utility can only verify a message that was signed by an Externally Owned Account (EOA).\\nTo verify messages from Contract Accounts (& EOA), use the [`publicClient.verifyMessage` Action](/docs/actions/public/verifyMessage) instead.\\n:::\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { verifyMessage } from 'viem'\\nimport { account, walletClient } from './client'\\n\\nconst signature = await walletClient.signMessage({\\n  account,\\n  message: 'hello world',\\n})\\n\\nconst valid = await verifyMessage({ // [!code focus:99]\\n  address: account.address,\\n  message: 'hello world',\\n  signature,\\n})\\n// true\\n```\\n\\n```ts [config.ts]\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum)\\n})\\n\\n// JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n```\\n\\n:::\\n\\n## Returns\\n\\n`boolean`\\n\\nWhether the provided `address` generated the `signature`.\\n\\n## Parameters\\n\\n### address\\n\\n- **Type:** [`Address`](/docs/glossary/types#address)\\n\\nThe Ethereum address that signed the original message.\\n\\n```ts\\nconst valid = await verifyMessage({\\n  address: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', // [!code focus:1]\\n  message: 'hello world',\\n  signature:\\n    '0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c',\\n})\\n```\\n\\n### message\\n\\n- **Type:** `string`\\n\\nThe message to be verified.\\n\\nBy default, viem signs the UTF-8 representation of the message.\\n\\n```ts\\nconst valid = await verifyMessage({\\n  address: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  message: 'hello world', // [!code focus:1]\\n  signature:\\n    '0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c',\\n})\\n```\\n\\nTo sign the data representation of the message, you can use the `raw` attribute.\\n\\n```ts\\nconst valid = await verifyMessage({\\n  address: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  message: { raw: '0x68656c6c6f20776f726c64' }, // [!code focus:1]\\n  signature:\\n    '0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c',\\n})\\n```\\n\\n### signature\\n\\n- **Type:** `Hex | ByteArray | Signature`\\n\\nThe signature that was generated by signing the message with the address's private key.\\n\\n```ts\\nconst valid = await verifyMessage({\\n  address: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\\n  message: 'hello world',\\n  signature: // [!code focus:2]\\n    '0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c',\\n})\\n```\\n\",\"document\":[{\"href\":\"/docs/utilities/verifyMessage#verifymessage\",\"html\":\"</header>\\n<p>Verify that a message was signed by the provided address.</p>\\n<aside data-callout=\\\"warning\\\"><strong data-callout-title=\\\"true\\\">Warning</strong><p>This utility can only verify a message that was signed by an Externally Owned Account (EOA).\\nTo verify messages from Contract Accounts (&amp; EOA), use the <a href=\\\"/docs/actions/public/verifyMessage\\\"><code>publicClient.verifyMessage</code> Action</a> instead.</p></aside>\\n\",\"id\":\"pages/docs/utilities/verifyMessage.md#verifymessage\",\"isPage\":true,\"text\":\"\\nVerify that a message was signed by the provided address.\\nWarningThis utility can only verify a message that was signed by an Externally Owned Account (EOA).\\nTo verify messages from Contract Accounts (&amp; EOA), use the publicClient.verifyMessage Action instead.\\n\",\"title\":\"verifyMessage\",\"titles\":[]},{\"href\":\"/docs/utilities/verifyMessage#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { verifyMessage } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { account, walletClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> signature</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">signMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  account,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> valid</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> verifyMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: account.address,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  signature,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// true</span></span></code></pre></div><div data-title=\\\"config.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"config.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWalletClient, custom } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> walletClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWalletClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">custom</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window.ethereum)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// JSON-RPC Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">account</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> walletClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getAddresses</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Local Account</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n\",\"id\":\"pages/docs/utilities/verifyMessage.md#usage\",\"isPage\":false,\"text\":\"\\nimport { verifyMessage } from &#x27;viem&#x27;\\nimport { account, walletClient } from &#x27;./client&#x27;\\n \\nconst signature = await walletClient.signMessage({\\n  account,\\n  message: &#x27;hello world&#x27;,\\n})\\n \\nconst valid = await verifyMessage({ \\n  address: account.address,\\n  message: &#x27;hello world&#x27;,\\n  signature,\\n})\\n// trueimport { createWalletClient, custom } from &#x27;viem&#x27;\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum)\\n})\\n \\n// JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n// Local Account\\nexport const account = privateKeyToAccount(...)\\n\",\"title\":\"Usage\",\"titles\":[\"verifyMessage\"]},{\"href\":\"/docs/utilities/verifyMessage#returns\",\"html\":\"\\n<p><code>boolean</code></p>\\n<p>Whether the provided <code>address</code> generated the <code>signature</code>.</p>\\n\",\"id\":\"pages/docs/utilities/verifyMessage.md#returns\",\"isPage\":false,\"text\":\"\\nboolean\\nWhether the provided address generated the signature.\\n\",\"title\":\"Returns\",\"titles\":[\"verifyMessage\"]},{\"href\":\"/docs/utilities/verifyMessage#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/utilities/verifyMessage.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"verifyMessage\"]},{\"href\":\"/docs/utilities/verifyMessage#address\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#address\\\"><code>Address</code></a></li>\\n</ul>\\n<p>The Ethereum address that signed the original message.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> valid</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> verifyMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  signature:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/verifyMessage.md#address\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\n\\nThe Ethereum address that signed the original message.\\nconst valid = await verifyMessage({\\n  address: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;, \\n  message: &#x27;hello world&#x27;,\\n  signature:\\n    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;,\\n})\\n\",\"title\":\"address\",\"titles\":[\"verifyMessage\",\"Parameters\"]},{\"href\":\"/docs/utilities/verifyMessage#message\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n</ul>\\n<p>The message to be verified.</p>\\n<p>By default, viem signs the UTF-8 representation of the message.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> valid</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> verifyMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  signature:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n<p>To sign the data representation of the message, you can use the <code>raw</code> attribute.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> valid</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> verifyMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: { raw: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x68656c6c6f20776f726c64&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  signature:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/utilities/verifyMessage.md#message\",\"isPage\":false,\"text\":\"\\n\\nType: string\\n\\nThe message to be verified.\\nBy default, viem signs the UTF-8 representation of the message.\\nconst valid = await verifyMessage({\\n  address: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  message: &#x27;hello world&#x27;, \\n  signature:\\n    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;,\\n})\\nTo sign the data representation of the message, you can use the raw attribute.\\nconst valid = await verifyMessage({\\n  address: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  message: { raw: &#x27;0x68656c6c6f20776f726c64&#x27; }, \\n  signature:\\n    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;,\\n})\\n\",\"title\":\"message\",\"titles\":[\"verifyMessage\",\"Parameters\"]},{\"href\":\"/docs/utilities/verifyMessage#signature\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Hex | ByteArray | Signature</code></li>\\n</ul>\\n<p>The signature that was generated by signing the message with the address&#x27;s private key.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> valid</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> verifyMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  address: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  message: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;hello world&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  signature: </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/utilities/verifyMessage.md#signature\",\"isPage\":false,\"text\":\"\\n\\nType: Hex | ByteArray | Signature\\n\\nThe signature that was generated by signing the message with the address&#x27;s private key.\\nconst valid = await verifyMessage({\\n  address: &#x27;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#x27;,\\n  message: &#x27;hello world&#x27;,\\n  signature: \\n    &#x27;0x66edc32e2ab001213321ab7d959a2207fcef5190cc9abb6da5b0d2a8a9af2d4d2b0700e2c317c4106f337fd934fbbb0bf62efc8811a78603b33a8265d3b8f8cb1c&#x27;,\\n})\",\"title\":\"signature\",\"titles\":[\"verifyMessage\",\"Parameters\"]}]}}"
