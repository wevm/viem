"{\"value\":{\"mdx\":\"# Smart Accounts\\n\\nA **Smart Account** is an account whose implementation resides in a **Smart Contract**, and implements the [ERC-4337 interface](https://eips.ethereum.org/EIPS/eip-4337#account-contract-interface). \\n\\nA **Smart Account** can be controlled by one or more **Owners**, which can be a [Local](/docs/accounts/local) or [JSON-RPC Account](/docs/accounts/jsonRpc) (if supported). The **Owner Account** is responsible for signing User Operations (transactions) on behalf of the **Smart Account**, which are then broadcasted to the Network via a [Bundler](https://eips.ethereum.org/EIPS/eip-4337#bundling).\\n\\n:::note\\n**Compatibility Note**\\n\\nAs ERC-4337 is not enshrined on the protocol, this means that Smart Accounts are incompatible with Viem's Transaction APIs such as `sendTransaction` and `writeContract`.\\n\\nSending \\\"transactions\\\" can be achieved by broadcasting a **User Operation** to a **Bundler**, which will then broadcast it to the Network shortly after.\\n\\nThe most common Actions for **User Operations** are:\\n\\n- [`sendUserOperation`](/account-abstraction/actions/bundler/sendUserOperation) (also supports [Contract Writes](/account-abstraction/actions/bundler/sendUserOperation#contract-calls))\\n- [`estimateUserOperationGas`](/account-abstraction/actions/bundler/estimateUserOperationGas)\\n- [`getUserOperation`](/account-abstraction/actions/bundler/getUserOperation)\\n- [`getUserOperationReceipt`](/account-abstraction/actions/bundler/getUserOperationReceipt)\\n\\nOnce Account Abstraction is enshrined on the protocol, we anticipate the above Actions will become redundant in favor of Viem's Transaction APIs.\\n:::\",\"document\":[{\"href\":\"/account-abstraction/accounts/smart#smart-accounts\",\"html\":\"</header>\\n<p>A <strong>Smart Account</strong> is an account whose implementation resides in a <strong>Smart Contract</strong>, and implements the <a href=\\\"https://eips.ethereum.org/EIPS/eip-4337#account-contract-interface\\\">ERC-4337 interface</a>.</p>\\n<p>A <strong>Smart Account</strong> can be controlled by one or more <strong>Owners</strong>, which can be a <a href=\\\"/docs/accounts/local\\\">Local</a> or <a href=\\\"/docs/accounts/jsonRpc\\\">JSON-RPC Account</a> (if supported). The <strong>Owner Account</strong> is responsible for signing User Operations (transactions) on behalf of the <strong>Smart Account</strong>, which are then broadcasted to the Network via a <a href=\\\"https://eips.ethereum.org/EIPS/eip-4337#bundling\\\">Bundler</a>.</p>\\n<aside data-callout=\\\"note\\\"><strong>Compatibility Note</strong><p>As ERC-4337 is not enshrined on the protocol, this means that Smart Accounts are incompatible with Viem&#x27;s Transaction APIs such as <code>sendTransaction</code> and <code>writeContract</code>.</p><p>Sending &quot;transactions&quot; can be achieved by broadcasting a <strong>User Operation</strong> to a <strong>Bundler</strong>, which will then broadcast it to the Network shortly after.</p><p>The most common Actions for <strong>User Operations</strong> are:</p><ul>\\n<li><a href=\\\"/account-abstraction/actions/bundler/sendUserOperation\\\"><code>sendUserOperation</code></a> (also supports <a href=\\\"/account-abstraction/actions/bundler/sendUserOperation#contract-calls\\\">Contract Writes</a>)</li>\\n<li><a href=\\\"/account-abstraction/actions/bundler/estimateUserOperationGas\\\"><code>estimateUserOperationGas</code></a></li>\\n<li><a href=\\\"/account-abstraction/actions/bundler/getUserOperation\\\"><code>getUserOperation</code></a></li>\\n<li><a href=\\\"/account-abstraction/actions/bundler/getUserOperationReceipt\\\"><code>getUserOperationReceipt</code></a></li>\\n</ul><p>Once Account Abstraction is enshrined on the protocol, we anticipate the above Actions will become redundant in favor of Viem&#x27;s Transaction APIs.</p></aside>\",\"id\":\"pages/account-abstraction/accounts/smart.md#smart-accounts\",\"isPage\":true,\"text\":\"\\nA Smart Account is an account whose implementation resides in a Smart Contract, and implements the ERC-4337 interface.\\nA Smart Account can be controlled by one or more Owners, which can be a Local or JSON-RPC Account (if supported). The Owner Account is responsible for signing User Operations (transactions) on behalf of the Smart Account, which are then broadcasted to the Network via a Bundler.\\nCompatibility NoteAs ERC-4337 is not enshrined on the protocol, this means that Smart Accounts are incompatible with Viem&#x27;s Transaction APIs such as sendTransaction and writeContract.Sending &quot;transactions&quot; can be achieved by broadcasting a User Operation to a Bundler, which will then broadcast it to the Network shortly after.The most common Actions for User Operations are:\\nsendUserOperation (also supports Contract Writes)\\nestimateUserOperationGas\\ngetUserOperation\\ngetUserOperationReceipt\\nOnce Account Abstraction is enshrined on the protocol, we anticipate the above Actions will become redundant in favor of Viem&#x27;s Transaction APIs.\",\"title\":\"Smart Accounts\",\"titles\":[]}]}}"
