"{\"value\":{\"code\":\"import { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum!)\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\\n\\n// export const account = privateKeyToAccount(...)\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createPublicClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function createWalletClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":29,\"length\":18,\"target\":\"createWalletClient\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) function custom<provider extends EthereumProvider>(provider: provider, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":49,\"length\":6,\"target\":\"custom\",\"line\":0,\"character\":49},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":57,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":57},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":85,\"length\":7,\"target\":\"mainnet\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":128,\"length\":12,\"target\":\"publicClient\",\"line\":3,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":143,\"length\":18,\"target\":\"createPublicClient\",\"line\":3,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":166,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":173,\"length\":7,\"target\":\"mainnet\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":184,\"length\":9,\"target\":\"transport\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":195,\"length\":4,\"target\":\"http\",\"line\":5,\"character\":13},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":219,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<CustomTransport, undefined, undefined, undefined>(parameters: {\\n    cacheTime?: number | undefined | undefined;\\n    ccipRead?: {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | false | undefined | undefined;\\n    ... 6 more ...;\\n    account?: `0x${string}` | ... 1 more ... | undefined;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":234,\"length\":18,\"target\":\"createWalletClient\",\"line\":8,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) transport: CustomTransport\",\"docs\":\"The RPC transport\",\"start\":257,\"length\":9,\"target\":\"transport\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) custom<{\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}>(provider: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":268,\"length\":6,\"target\":\"custom\",\"line\":9,\"character\":13},{\"type\":\"hover\",\"text\":\"var window: Window & typeof globalThis\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)\",\"start\":275,\"length\":6,\"target\":\"window\",\"line\":9,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) Window.ethereum?: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n} | undefined\",\"start\":282,\"length\":8,\"target\":\"ethereum\",\"line\":9,\"character\":27},{\"type\":\"tag\",\"name\":\"log\",\"start\":297,\"length\":0,\"text\":\"â†“ JSON-RPC Account\",\"line\":12,\"character\":0},{\"type\":\"hover\",\"text\":\"const account: `0x${string}`\",\"start\":311,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":14},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":328,\"length\":12,\"target\":\"walletClient\",\"line\":12,\"character\":31},{\"type\":\"hover\",\"text\":\"(property) getAddresses: () => Promise<GetAddressesReturnType>\",\"docs\":\"Returns a list of account addresses owned by the wallet or client.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/getAddresses\\n- JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\",\"tags\":[[\"returns\",\"List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst accounts = await client.getAddresses()\"]],\"start\":341,\"length\":12,\"target\":\"getAddresses\",\"line\":12,\"character\":44},{\"type\":\"tag\",\"name\":\"log\",\"start\":357,\"length\":0,\"text\":\"â†“ Local Account\",\"line\":14,\"character\":0}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[419,444],[331,359],[0,34]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"â†“ JSON-RPC Account\",\"start\":331,\"end\":359},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"â†“ Local Account\",\"start\":419,\"end\":444}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\n// ---cut---\\nimport { createPublicClient, createWalletClient, custom, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n\\nexport const walletClient = createWalletClient({\\n  transport: custom(window.ethereum!)\\n})\\n\\n// @log: â†“ JSON-RPC Account\\nexport const [account] = await walletClient.getAddresses()\\n\\n// @log: â†“ Local Account\\n\\n// export const account = privateKeyToAccount(...)\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createPublicClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function createWalletClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":29,\"length\":18,\"target\":\"createWalletClient\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) function custom<provider extends EthereumProvider>(provider: provider, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":49,\"length\":6,\"target\":\"custom\",\"line\":0,\"character\":49},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":57,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":57},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":85,\"length\":7,\"target\":\"mainnet\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":128,\"length\":12,\"target\":\"publicClient\",\"line\":3,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":143,\"length\":18,\"target\":\"createPublicClient\",\"line\":3,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":166,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}\\nimport mainnet\",\"start\":173,\"length\":7,\"target\":\"mainnet\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":184,\"length\":9,\"target\":\"transport\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":195,\"length\":4,\"target\":\"http\",\"line\":5,\"character\":13},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":219,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<CustomTransport, undefined, undefined, undefined>(parameters: {\\n    cacheTime?: number | undefined | undefined;\\n    ccipRead?: {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | false | undefined | undefined;\\n    ... 6 more ...;\\n    account?: `0x${string}` | ... 1 more ... | undefined;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0xâ€¦')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":234,\"length\":18,\"target\":\"createWalletClient\",\"line\":8,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) transport: CustomTransport\",\"docs\":\"The RPC transport\",\"start\":257,\"length\":9,\"target\":\"transport\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) custom<{\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}>(provider: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":268,\"length\":6,\"target\":\"custom\",\"line\":9,\"character\":13},{\"type\":\"hover\",\"text\":\"var window: Window & typeof globalThis\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)\",\"start\":275,\"length\":6,\"target\":\"window\",\"line\":9,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) Window.ethereum?: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n} | undefined\",\"start\":282,\"length\":8,\"target\":\"ethereum\",\"line\":9,\"character\":27},{\"type\":\"hover\",\"text\":\"const account: `0x${string}`\",\"start\":311,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":14},{\"type\":\"hover\",\"text\":\"const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 26 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":328,\"length\":12,\"target\":\"walletClient\",\"line\":12,\"character\":31},{\"type\":\"hover\",\"text\":\"(property) getAddresses: () => Promise<GetAddressesReturnType>\",\"docs\":\"Returns a list of account addresses owned by the wallet or client.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/getAddresses\\n- JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\",\"tags\":[[\"returns\",\"List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst accounts = await client.getAddresses()\"]],\"start\":341,\"length\":12,\"target\":\"getAddresses\",\"line\":12,\"character\":44}],\"tags\":[{\"type\":\"tag\",\"name\":\"log\",\"start\":297,\"length\":0,\"text\":\"â†“ JSON-RPC Account\",\"line\":12,\"character\":0},{\"type\":\"tag\",\"name\":\"log\",\"start\":357,\"length\":0,\"text\":\"â†“ Local Account\",\"line\":14,\"character\":0}]}}"
