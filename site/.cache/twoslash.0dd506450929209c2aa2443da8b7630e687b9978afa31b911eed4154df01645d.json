"{\"value\":{\"code\":\"import { parseAbi } from 'viem'\\nimport { walletClient } from './config'\\n\\nconst abi = parseAbi([\\n  'function approve(address, uint256) returns (bool)',\\n  'function transferFrom(address, address, uint256) returns (bool)',\\n])\\n \\nconst { id } = await walletClient.sendCalls({ // [!code focus:99]\\n  calls: [\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1')\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'approve',\\n      args: [\\n        '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', \\n        100n\\n      ],\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'transferFrom',\\n      args: [\\n        '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n        '0x0000000000000000000000000000000000000000',\\n        100n\\n      ],\\n    },\\n  ],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":41,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":79,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]>(signatures: [\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":85,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const id: string\",\"start\":233,\"length\":2,\"target\":\"id\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":246,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCalls: <readonly [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"approve\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [...];\\n    }, {\\n        ...;\\n    }];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {\\n    ...;\\n}], undefined>(parameters: SendCallsParameters<...>) => Promise<...>\",\"docs\":\"Requests the connected wallet to send a batch of calls.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendCalls\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Transaction identifier. {@link SendCallsReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst id = await client.sendCalls({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":259,\"length\":9,\"target\":\"sendCalls\",\"line\":8,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {}>>, Prettify<Call<{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [...];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {}>>, Prettify<...>]\",\"start\":293,\"length\":5,\"target\":\"calls\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":314,\"length\":2,\"target\":\"to\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":370,\"length\":5,\"target\":\"value\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":377,\"length\":10,\"target\":\"parseEther\",\"line\":12,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":412,\"length\":2,\"target\":\"to\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":468,\"length\":3,\"target\":\"abi\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\" | \\\"transferFrom\\\"\",\"start\":479,\"length\":12,\"target\":\"functionName\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`, bigint]\",\"start\":510,\"length\":4,\"target\":\"args\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":614,\"length\":2,\"target\":\"to\",\"line\":24,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":670,\"length\":3,\"target\":\"abi\",\"line\":25,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\" | \\\"transferFrom\\\"\",\"start\":681,\"length\":12,\"target\":\"functionName\",\"line\":26,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`, `0x${string}`, bigint]\",\"start\":717,\"length\":4,\"target\":\"args\",\"line\":27,\"character\":6}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1337]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":316,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum!.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":649,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum!.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":982,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1298,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseAbi } from 'viem'\\nimport { walletClient } from './config'\\n\\nconst abi = parseAbi([\\n  'function approve(address, uint256) returns (bool)',\\n  'function transferFrom(address, address, uint256) returns (bool)',\\n])\\n \\nconst { id } = await walletClient.sendCalls({ // [!code focus:99]\\n  calls: [\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1')\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'approve',\\n      args: [\\n        '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', \\n        100n\\n      ],\\n    },\\n    {\\n      to: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n      abi,\\n      functionName: 'transferFrom',\\n      args: [\\n        '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\\n        '0x0000000000000000000000000000000000000000',\\n        100n\\n      ],\\n    },\\n  ],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbi<const signatures extends readonly string[]>(signatures: signatures[\\\"length\\\"] extends 0 ? Error<\\\"At least one signature required\\\"> : Signatures<signatures> extends signatures ? signatures : Signatures<signatures>): ParseAbi<signatures>\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":9,\"length\":8,\"target\":\"parseAbi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":41,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":79,\"length\":3,\"target\":\"abi\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseAbi<[\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]>(signatures: [\\\"function approve(address, uint256) returns (bool)\\\", \\\"function transferFrom(address, address, uint256) returns (bool)\\\"]): readonly [...]\\nimport parseAbi\",\"docs\":\"Parses human-readable ABI into JSON \\n{@link \\nAbi\\n}\",\"tags\":[[\"param\",\"signatures - Human-Readable ABI\"],[\"returns\",\"Parsed {@link Abi}\"],[\"example\",\"const abi = parseAbi([\\n  //  ^? const abi: readonly [{ name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability:...\\n  'function balanceOf(address owner) view returns (uint256)',\\n  'event Transfer(address indexed from, address indexed to, uint256 amount)',\\n])\"]],\"start\":85,\"length\":8,\"target\":\"parseAbi\",\"line\":3,\"character\":12},{\"type\":\"hover\",\"text\":\"const id: string\",\"start\":233,\"length\":2,\"target\":\"id\",\"line\":8,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":246,\"length\":12,\"target\":\"walletClient\",\"line\":8,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCalls: <readonly [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [{\\n        readonly name: \\\"approve\\\";\\n        readonly type: \\\"function\\\";\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly inputs: readonly [...];\\n        readonly outputs: readonly [...];\\n    }, {\\n        ...;\\n    }];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {\\n    ...;\\n}], undefined>(parameters: SendCallsParameters<...>) => Promise<...>\",\"docs\":\"Requests the connected wallet to send a batch of calls.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendCalls\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Transaction identifier. {@link SendCallsReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst id = await client.sendCalls({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":259,\"length\":9,\"target\":\"sendCalls\",\"line\":8,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {}>>, Prettify<Call<{\\n    readonly to: \\\"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2\\\";\\n    readonly abi: readonly [...];\\n    readonly functionName: \\\"approve\\\";\\n    readonly args: readonly [...];\\n}, {}>>, Prettify<...>]\",\"start\":293,\"length\":5,\"target\":\"calls\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":314,\"length\":2,\"target\":\"to\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":370,\"length\":5,\"target\":\"value\",\"line\":12,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":377,\"length\":10,\"target\":\"parseEther\",\"line\":12,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":412,\"length\":2,\"target\":\"to\",\"line\":15,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":468,\"length\":3,\"target\":\"abi\",\"line\":16,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\" | \\\"transferFrom\\\"\",\"start\":479,\"length\":12,\"target\":\"functionName\",\"line\":17,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`, bigint]\",\"start\":510,\"length\":4,\"target\":\"args\",\"line\":18,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":614,\"length\":2,\"target\":\"to\",\"line\":24,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly name: \\\"approve\\\";\\n    readonly type: \\\"function\\\";\\n    readonly stateMutability: \\\"nonpayable\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly type: \\\"uint256\\\";\\n    }];\\n    readonly outputs: readonly [...];\\n}, {\\n    ...;\\n}]\",\"start\":670,\"length\":3,\"target\":\"abi\",\"line\":25,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\" | \\\"transferFrom\\\"\",\"start\":681,\"length\":12,\"target\":\"functionName\",\"line\":26,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: readonly [`0x${string}`, `0x${string}`, bigint]\",\"start\":717,\"length\":4,\"target\":\"args\",\"line\":27,\"character\":6}],\"tags\":[]}}"
