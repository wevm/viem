"{\"value\":{\"code\":\"import { mainnet } from 'viem/chains'\\nimport { walletClient } from './config'\\n\\nconst { id } = await walletClient.sendCalls({\\n  chain: mainnet,\\n  calls: [ \\n    { \\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n      value: parseEther('1') \\n    }, \\n    { \\n      data: '0xdeadbeef', \\n      to: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', // [!code focus]\\n    },\\n  ],\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    contracts: {\\n        readonly ensRegistry: {\\n            ...;\\n        };\\n        readonly ensUniversalResolver: {\\n            ...;\\n        };\\n        readonly multicall3: {\\n            ...;\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":9,\"length\":7,\"target\":\"mainnet\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":47,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const id: string\",\"start\":87,\"length\":2,\"target\":\"id\",\"line\":3,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":100,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCalls: <readonly [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: \\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\";\\n}], {\\n    ...;\\n}>(parameters: SendCallsParameters<...>) => Promise<...>\",\"docs\":\"Requests the connected wallet to send a batch of calls.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendCalls\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Transaction identifier. {@link SendCallsReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst id = await client.sendCalls({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":113,\"length\":9,\"target\":\"sendCalls\",\"line\":3,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) chain?: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    contracts: {\\n        readonly ensRegistry: {\\n            ...;\\n        };\\n        readonly ensUniversalResolver: {\\n            ...;\\n        };\\n        readonly multicall3: {\\n            ...;\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n} | Chain | undefined\",\"start\":127,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    contracts: {\\n        readonly ensRegistry: {\\n            ...;\\n        };\\n        readonly ensUniversalResolver: {\\n            ...;\\n        };\\n        readonly multicall3: {\\n            ...;\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":134,\"length\":7,\"target\":\"mainnet\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {}>>, Prettify<Call<{\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: \\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\";\\n}, {}>>]\",\"start\":145,\"length\":5,\"target\":\"calls\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":168,\"length\":2,\"target\":\"to\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":241,\"length\":5,\"target\":\"value\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":248,\"length\":10,\"target\":\"parseEther\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) data?: `0x${string}` | undefined\",\"start\":286,\"length\":4,\"target\":\"data\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":313,\"length\":2,\"target\":\"to\",\"line\":12,\"character\":6}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,1337]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":316,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum!.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":649,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\nimport { createWalletClient, custom } from 'viem'\\n\\n// Retrieve Account from an EIP-1193 Provider.\\nconst [account] = await window.ethereum!.request({ \\n  method: 'eth_requestAccounts' \\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  transport: custom(window.ethereum!)\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":982,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum!),\\n})\\n\\nexport const [account] = await walletClient.getAddresses()\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1298,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { mainnet } from 'viem/chains'\\nimport { walletClient } from './config'\\n\\nconst { id } = await walletClient.sendCalls({\\n  chain: mainnet,\\n  calls: [ \\n    { \\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', // [!code focus]\\n      value: parseEther('1') \\n    }, \\n    { \\n      data: '0xdeadbeef', \\n      to: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC', // [!code focus]\\n    },\\n  ],\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    contracts: {\\n        readonly ensRegistry: {\\n            ...;\\n        };\\n        readonly ensUniversalResolver: {\\n            ...;\\n        };\\n        readonly multicall3: {\\n            ...;\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":9,\"length\":7,\"target\":\"mainnet\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":47,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const id: string\",\"start\":87,\"length\":2,\"target\":\"id\",\"line\":3,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 33 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":100,\"length\":12,\"target\":\"walletClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) sendCalls: <readonly [{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: \\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\";\\n}], {\\n    ...;\\n}>(parameters: SendCallsParameters<...>) => Promise<...>\",\"docs\":\"Requests the connected wallet to send a batch of calls.\\n\\n- Docs: https://viem.sh/docs/actions/wallet/sendCalls\\n- JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\",\"tags\":[[\"param\",\"client - Client to use\"],[\"returns\",\"Transaction identifier. {@link SendCallsReturnType}\"],[\"example\",\"import { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\n\\nconst id = await client.sendCalls({\\n  account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n  calls: [\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: 69420n,\\n    },\\n  ],\\n})\"]],\"start\":113,\"length\":9,\"target\":\"sendCalls\",\"line\":3,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) chain?: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    contracts: {\\n        readonly ensRegistry: {\\n            ...;\\n        };\\n        readonly ensUniversalResolver: {\\n            ...;\\n        };\\n        readonly multicall3: {\\n            ...;\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n} | Chain | undefined\",\"start\":127,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    contracts: {\\n        readonly ensRegistry: {\\n            ...;\\n        };\\n        readonly ensUniversalResolver: {\\n            ...;\\n        };\\n        readonly multicall3: {\\n            ...;\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":134,\"length\":7,\"target\":\"mainnet\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\";\\n    readonly value: any;\\n}, {}>>, Prettify<Call<{\\n    readonly data: \\\"0xdeadbeef\\\";\\n    readonly to: \\\"0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC\\\";\\n}, {}>>]\",\"start\":145,\"length\":5,\"target\":\"calls\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0x70997970c51812dc3a010c7d01b50e0d17dc79c8\\\"\",\"start\":168,\"length\":2,\"target\":\"to\",\"line\":7,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: any\",\"start\":241,\"length\":5,\"target\":\"value\",\"line\":8,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":248,\"length\":10,\"target\":\"parseEther\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) data?: `0x${string}` | undefined\",\"start\":286,\"length\":4,\"target\":\"data\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) to: `0x${string}`\",\"start\":313,\"length\":2,\"target\":\"to\",\"line\":12,\"character\":6}],\"tags\":[]}}"
