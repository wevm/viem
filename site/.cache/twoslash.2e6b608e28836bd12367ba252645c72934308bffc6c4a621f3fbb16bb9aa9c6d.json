"{\"value\":{\"code\":\"import { account, walletClient } from './config'\\n \\nconst signature_1 = await walletClient.signMessage({ // [!code focus:99]\\n  // Account used for signing.\\n  account,\\n  message: 'hello world',\\n  // Verifying contract address (e.g. ERC-4337 Smart Account).\\n  verifier: '0xCB9fA1eA9b8A3bf422a8639f23Df77ea66020eC2'\\n})\\n\\nconst signature_2 = await walletClient.signMessage({\\n  // Account used for signing.\\n  account,\\n  // Hex data representation of message.\\n  message: { raw: '0x68656c6c6f20776f726c64' },\\n  // Verifying contract address (e.g. ERC-4337 Smart Account)\\n  verifier: '0xCB9fA1eA9b8A3bf422a8639f23Df77ea66020eC2'\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":9,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":18,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const signature_1: `0x${string}`\",\"start\":57,\"length\":11,\"target\":\"signature_1\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":77,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) signMessage: <Account | undefined>(parameters: SignMessageParameters<undefined, Account | undefined, undefined>) => Promise<SignMessageReturnType> (+1 overload)\",\"start\":90,\"length\":11,\"target\":\"signMessage\",\"line\":2,\"character\":39},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account\",\"start\":157,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: SignableMessage\",\"start\":168,\"length\":7,\"target\":\"message\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) verifier: `0x${string}`\",\"start\":257,\"length\":8,\"target\":\"verifier\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const signature_2: `0x${string}`\",\"start\":322,\"length\":11,\"target\":\"signature_2\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":342,\"length\":12,\"target\":\"walletClient\",\"line\":10,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) signMessage: <Account | undefined>(parameters: SignMessageParameters<undefined, Account | undefined, undefined>) => Promise<SignMessageReturnType> (+1 overload)\",\"start\":355,\"length\":11,\"target\":\"signMessage\",\"line\":10,\"character\":39},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account\",\"start\":402,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: SignableMessage\",\"start\":454,\"length\":7,\"target\":\"message\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) raw: `0x${string}` | ByteArray\",\"docs\":\"Raw data representation of the message.\",\"start\":465,\"length\":3,\"target\":\"raw\",\"line\":14,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) verifier: `0x${string}`\",\"start\":564,\"length\":8,\"target\":\"verifier\",\"line\":16,\"character\":2}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,859]],\"flagNotations\":[{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↑ JSON-RPC Account\",\"start\":714,\"end\":742},{\"type\":\"tag\",\"name\":\"log\",\"value\":\"↑ Local Account\",\"start\":794,\"end\":819}],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { erc7739Actions } from 'viem/experimental'\\n\\nexport const walletClient = createWalletClient({\\n  account: privateKeyToAccount('0x...'),\\n  transport: http()\\n}).extend(erc7739Actions({ \\n  verifier: '0xCB9fA1eA9b8A3bf422a8639f23Df77ea66020eC2' \\n}))\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":376,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createWalletClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\nimport { erc7739Actions } from 'viem/experimental'\\n\\nexport const walletClient = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n}).extend(erc7739Actions())\\n\\nexport const [account] = await walletClient.getAddresses()\\n// @log: ↑ JSON-RPC Account\\n\\n// export const account = privateKeyToAccount(...)\\n// @log: ↑ Local Account\\n\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":820,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { account, walletClient } from './config'\\n \\nconst signature_1 = await walletClient.signMessage({ // [!code focus:99]\\n  // Account used for signing.\\n  account,\\n  message: 'hello world',\\n  // Verifying contract address (e.g. ERC-4337 Smart Account).\\n  verifier: '0xCB9fA1eA9b8A3bf422a8639f23Df77ea66020eC2'\\n})\\n\\nconst signature_2 = await walletClient.signMessage({\\n  // Account used for signing.\\n  account,\\n  // Hex data representation of message.\\n  message: { raw: '0x68656c6c6f20776f726c64' },\\n  // Verifying contract address (e.g. ERC-4337 Smart Account)\\n  verifier: '0xCB9fA1eA9b8A3bf422a8639f23Df77ea66020eC2'\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const account: `0x${string}`\\nimport account\",\"start\":9,\"length\":7,\"target\":\"account\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":18,\"length\":12,\"target\":\"walletClient\",\"line\":0,\"character\":18},{\"type\":\"hover\",\"text\":\"const signature_1: `0x${string}`\",\"start\":57,\"length\":11,\"target\":\"signature_1\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":77,\"length\":12,\"target\":\"walletClient\",\"line\":2,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) signMessage: <Account | undefined>(parameters: SignMessageParameters<undefined, Account | undefined, undefined>) => Promise<SignMessageReturnType> (+1 overload)\",\"start\":90,\"length\":11,\"target\":\"signMessage\",\"line\":2,\"character\":39},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account\",\"start\":157,\"length\":7,\"target\":\"account\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: SignableMessage\",\"start\":168,\"length\":7,\"target\":\"message\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) verifier: `0x${string}`\",\"start\":257,\"length\":8,\"target\":\"verifier\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const signature_2: `0x${string}`\",\"start\":322,\"length\":11,\"target\":\"signature_2\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers?: import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").ChainSerializers<undefined, import(\\\"/Users/jakemoxey/git/viem/src/_types/index\\\").TransactionSerializable> | undefined;\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\\nimport walletClient\",\"start\":342,\"length\":12,\"target\":\"walletClient\",\"line\":10,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) signMessage: <Account | undefined>(parameters: SignMessageParameters<undefined, Account | undefined, undefined>) => Promise<SignMessageReturnType> (+1 overload)\",\"start\":355,\"length\":11,\"target\":\"signMessage\",\"line\":10,\"character\":39},{\"type\":\"hover\",\"text\":\"(property) account: `0x${string}` | Account\",\"start\":402,\"length\":7,\"target\":\"account\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) message: SignableMessage\",\"start\":454,\"length\":7,\"target\":\"message\",\"line\":14,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) raw: `0x${string}` | ByteArray\",\"docs\":\"Raw data representation of the message.\",\"start\":465,\"length\":3,\"target\":\"raw\",\"line\":14,\"character\":13},{\"type\":\"hover\",\"text\":\"(property) verifier: `0x${string}`\",\"start\":564,\"length\":8,\"target\":\"verifier\",\"line\":16,\"character\":2}],\"tags\":[]}}"
