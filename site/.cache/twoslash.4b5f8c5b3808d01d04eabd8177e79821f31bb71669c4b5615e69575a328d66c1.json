"{\"value\":{\"code\":\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction' // [!code focus]\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst owner = privateKeyToAccount('0x...')\\n\\nconst account = await toCoinbaseSmartAccount({ // [!code focus]\\n  client, // [!code focus]\\n  owners: [owner] // [!code focus]\\n}) // [!code focus]\\n\\nconst bundlerClient = createBundlerClient({\\n  account, // [!code focus]\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":9,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":92,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":142,\"length\":5,\"target\":\"owner\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":150,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":14},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":186,\"length\":7,\"target\":\"account\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":202,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":5,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client: Client\",\"start\":246,\"length\":6,\"target\":\"client\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: readonly (`0x${string}` | OneOf<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} | WebAuthnAccount>)[]\",\"start\":273,\"length\":6,\"target\":\"owners\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":282,\"length\":5,\"target\":\"owner\",\"line\":7,\"character\":11},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    ...;\\n}, undefined>\",\"start\":333,\"length\":13,\"target\":\"bundlerClient\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createBundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        ...;\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    ...;\\n}, undefined>(parameters: BundlerClientConfig<...>): BundlerClient<...>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":349,\"length\":19,\"target\":\"createBundlerClient\",\"line\":10,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":373,\"length\":7,\"target\":\"account\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) client?: {\\n    ...;\\n} | Client | undefined\",\"docs\":\"Client that points to an Execution RPC URL.\",\"start\":401,\"length\":6,\"target\":\"client\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":411,\"length\":9,\"target\":\"transport\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":422,\"length\":4,\"target\":\"http\",\"line\":13,\"character\":13}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,242]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { createPublicClient, http } from 'viem' \\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains' \\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http()\\n})\\n// ---cut---\\nimport { toCoinbaseSmartAccount } from 'viem/account-abstraction' // [!code focus]\\nimport { privateKeyToAccount } from 'viem/accounts'\\n\\nconst owner = privateKeyToAccount('0x...')\\n\\nconst account = await toCoinbaseSmartAccount({ // [!code focus]\\n  client, // [!code focus]\\n  owners: [owner] // [!code focus]\\n}) // [!code focus]\\n\\nconst bundlerClient = createBundlerClient({\\n  account, // [!code focus]\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":9,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":92,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":142,\"length\":5,\"target\":\"owner\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) privateKeyToAccount(privateKey: Hex, options?: PrivateKeyToAccountOptions): PrivateKeyAccount\\nimport privateKeyToAccount\",\"tags\":[[\"description\",\"Creates an Account from a private key.\"],[\"returns\",\"A Private Key Account.\"]],\"start\":150,\"length\":19,\"target\":\"privateKeyToAccount\",\"line\":3,\"character\":14},{\"type\":\"hover\",\"text\":\"const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"bytes\\\";\\n        }];\\n        readonly name: \\\"AlreadyOwner\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":186,\"length\":7,\"target\":\"account\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) toCoinbaseSmartAccount(parameters: ToCoinbaseSmartAccountParameters): Promise<ToCoinbaseSmartAccountReturnType>\\nimport toCoinbaseSmartAccount\",\"tags\":[[\"description\",\"Create a Coinbase Smart Account.\"],[\"param\",\"parameters - {@link ToCoinbaseSmartAccountParameters}\"],[\"returns\",\"Coinbase Smart Account. {@link ToCoinbaseSmartAccountReturnType}\"],[\"example\",\"import { toCoinbaseSmartAccount } from 'viem/account-abstraction'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { client } from './client.js'\\n\\nconst account = toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')],\\n})\"]],\"start\":202,\"length\":22,\"target\":\"toCoinbaseSmartAccount\",\"line\":5,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) client: Client\",\"start\":246,\"length\":6,\"target\":\"client\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) owners: readonly (`0x${string}` | OneOf<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign?: ((parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>) | undefined | undefined;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n} | WebAuthnAccount>)[]\",\"start\":273,\"length\":6,\"target\":\"owners\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"const owner: {\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    ... 6 more ...;\\n    type: \\\"local\\\";\\n}\",\"start\":282,\"length\":5,\"target\":\"owner\",\"line\":7,\"character\":11},{\"type\":\"hover\",\"text\":\"const bundlerClient: BundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    ...;\\n}, undefined>\",\"start\":333,\"length\":13,\"target\":\"bundlerClient\",\"line\":10,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createBundlerClient<HttpTransport<undefined, false>, undefined, {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, {\\n        ...;\\n    }, ... 43 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n}, {\\n    ...;\\n}, undefined>(parameters: BundlerClientConfig<...>): BundlerClient<...>\\nimport createBundlerClient\",\"docs\":\"Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/account-abstraction/clients/bundler\",\"tags\":[[\"param\",\"config - {@link BundlerClientConfig}\"],[\"returns\",\"A Bundler Client. {@link BundlerClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { createBundlerClient } from 'viem/account-abstraction'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst bundlerClient = createBundlerClient({\\n  client,\\n  transport: http('https://public.pimlico.io/v2/1/rpc'),\\n})\"]],\"start\":349,\"length\":19,\"target\":\"createBundlerClient\",\"line\":10,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly stateMutability: \\\"nonpayable\\\";\\n        readonly type: \\\"constructor\\\";\\n    }, ... 44 more ..., {\\n        ...;\\n    }];\\n    ... 18 more ...;\\n    type: \\\"smart\\\";\\n} | undefined\",\"docs\":\"The Account to use for the Client. This will be used for Actions that require an account as an argument.\",\"start\":373,\"length\":7,\"target\":\"account\",\"line\":11,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) client?: {\\n    ...;\\n} | Client | undefined\",\"docs\":\"Client that points to an Execution RPC URL.\",\"start\":401,\"length\":6,\"target\":\"client\",\"line\":12,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":411,\"length\":9,\"target\":\"transport\",\"line\":13,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":422,\"length\":4,\"target\":\"http\",\"line\":13,\"character\":13}],\"tags\":[]}}"
