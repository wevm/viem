"{\"value\":{\"code\":\"import { erc20Abi, parseUnits } from 'viem'\\nimport { account, client, usdcAddress } from './config'\\nimport { paymaster } from './paymaster'\\n\\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  paymaster,\\n  transport: http(`https://public.pimlico.io/v2/${client.chain.id}/rpc`),\\n  userOperation: {\\n    estimateFeesPerGas: async ({ account, bundlerClient, userOperation }) => {\\n      const { standard: fees } = await bundlerClient.request({\\n        method: 'pimlico_getUserOperationGasPrice',\\n      })\\n      const maxFeePerGas = hexToBigInt(fees.maxFeePerGas)\\n      const maxPriorityFeePerGas = hexToBigInt(fees.maxPriorityFeePerGas)\\n      return { maxFeePerGas, maxPriorityFeePerGas }\\n    },\\n  },\\n})\\n\\nconst authorization = await client.signAuthorization(account.authorization) // [!code focus:99]\\n\\nconst hash = await bundlerClient.sendUserOperation({\\n  account,\\n  authorization,\\n  calls: [\\n    {\\n      to: usdcAddress,\\n      abi: erc20Abi,\\n      functionName: 'transfer',\\n      args: ['0x{recipient}', parseUnits('10', 6)], // 10 USDC\\n    },\\n  ],\\n})\\n\\nconst receipt = await bundlerClient.waitForUserOperationReceipt({ hash })\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const erc20Abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport erc20Abi\",\"docs\":\"[ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\",\"start\":9,\"length\":8,\"target\":\"erc20Abi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":19,\"length\":10,\"target\":\"parseUnits\",\"line\":0,\"character\":19},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\\nimport account\",\"start\":53,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\\nimport client\",\"start\":62,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\\\"\\nimport usdcAddress\",\"start\":70,\"length\":11,\"target\":\"usdcAddress\",\"line\":1,\"character\":26},{\"type\":\"hover\",\"text\":\"import paymaster\",\"start\":109,\"length\":9,\"target\":\"paymaster\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const bundlerClient: any\",\"start\":147,\"length\":13,\"target\":\"bundlerClient\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":163,\"length\":19,\"target\":\"createBundlerClient\",\"line\":4,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":187,\"length\":7,\"target\":\"account\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\",\"start\":198,\"length\":6,\"target\":\"client\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) paymaster: any\",\"start\":208,\"length\":9,\"target\":\"paymaster\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: any\",\"start\":221,\"length\":9,\"target\":\"transport\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":232,\"length\":4,\"target\":\"http\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\\nimport client\",\"start\":269,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":50},{\"type\":\"hover\",\"text\":\"(property) chain: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\",\"docs\":\"Chain for the client.\",\"start\":276,\"length\":5,\"target\":\"chain\",\"line\":8,\"character\":57},{\"type\":\"hover\",\"text\":\"(property) id: 421614\",\"docs\":\"ID in number form\",\"start\":282,\"length\":2,\"target\":\"id\",\"line\":8,\"character\":63},{\"type\":\"hover\",\"text\":\"(property) userOperation: {\\n    estimateFeesPerGas: ({ account, bundlerClient, userOperation }: {\\n        account: any;\\n        bundlerClient: any;\\n        userOperation: any;\\n    }) => Promise<{\\n        maxFeePerGas: any;\\n        maxPriorityFeePerGas: any;\\n    }>;\\n}\",\"start\":295,\"length\":13,\"target\":\"userOperation\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) estimateFeesPerGas: ({ account, bundlerClient, userOperation }: {\\n    account: any;\\n    bundlerClient: any;\\n    userOperation: any;\\n}) => Promise<{\\n    maxFeePerGas: any;\\n    maxPriorityFeePerGas: any;\\n}>\",\"start\":316,\"length\":18,\"target\":\"estimateFeesPerGas\",\"line\":10,\"character\":4},{\"type\":\"hover\",\"text\":\"(parameter) account: any\",\"start\":345,\"length\":7,\"target\":\"account\",\"line\":10,\"character\":33},{\"type\":\"hover\",\"text\":\"(parameter) bundlerClient: any\",\"start\":354,\"length\":13,\"target\":\"bundlerClient\",\"line\":10,\"character\":42},{\"type\":\"hover\",\"text\":\"(parameter) userOperation: any\",\"start\":369,\"length\":13,\"target\":\"userOperation\",\"line\":10,\"character\":57},{\"type\":\"hover\",\"text\":\"any\",\"start\":405,\"length\":8,\"target\":\"standard\",\"line\":11,\"character\":14},{\"type\":\"hover\",\"text\":\"const fees: any\",\"start\":415,\"length\":4,\"target\":\"fees\",\"line\":11,\"character\":24},{\"type\":\"hover\",\"text\":\"(parameter) bundlerClient: any\",\"start\":430,\"length\":13,\"target\":\"bundlerClient\",\"line\":11,\"character\":39},{\"type\":\"hover\",\"text\":\"any\",\"start\":444,\"length\":7,\"target\":\"request\",\"line\":11,\"character\":53},{\"type\":\"hover\",\"text\":\"(property) method: string\",\"start\":462,\"length\":6,\"target\":\"method\",\"line\":12,\"character\":8},{\"type\":\"hover\",\"text\":\"const maxFeePerGas: any\",\"start\":527,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":14,\"character\":12},{\"type\":\"hover\",\"text\":\"any\",\"start\":542,\"length\":11,\"target\":\"hexToBigInt\",\"line\":14,\"character\":27},{\"type\":\"hover\",\"text\":\"const fees: any\",\"start\":554,\"length\":4,\"target\":\"fees\",\"line\":14,\"character\":39},{\"type\":\"hover\",\"text\":\"any\",\"start\":559,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":14,\"character\":44},{\"type\":\"hover\",\"text\":\"const maxPriorityFeePerGas: any\",\"start\":585,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":15,\"character\":12},{\"type\":\"hover\",\"text\":\"any\",\"start\":608,\"length\":11,\"target\":\"hexToBigInt\",\"line\":15,\"character\":35},{\"type\":\"hover\",\"text\":\"const fees: any\",\"start\":620,\"length\":4,\"target\":\"fees\",\"line\":15,\"character\":47},{\"type\":\"hover\",\"text\":\"any\",\"start\":625,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":15,\"character\":52},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas: any\",\"start\":662,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":16,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) maxPriorityFeePerGas: any\",\"start\":676,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":16,\"character\":29},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":721,\"length\":13,\"target\":\"authorization\",\"line\":21,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\\nimport client\",\"start\":743,\"length\":6,\"target\":\"client\",\"line\":21,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":750,\"length\":17,\"target\":\"signAuthorization\",\"line\":21,\"character\":35},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\\nimport account\",\"start\":768,\"length\":7,\"target\":\"account\",\"line\":21,\"character\":53},{\"type\":\"hover\",\"text\":\"(property) authorization: {\\n    account: PrivateKeyAccount;\\n    address: Address;\\n}\",\"docs\":\"EIP-7702 authorization properties, if applicable.\",\"start\":776,\"length\":13,\"target\":\"authorization\",\"line\":21,\"character\":61},{\"type\":\"hover\",\"text\":\"const hash: any\",\"start\":818,\"length\":4,\"target\":\"hash\",\"line\":23,\"character\":6},{\"type\":\"hover\",\"text\":\"const bundlerClient: any\",\"start\":831,\"length\":13,\"target\":\"bundlerClient\",\"line\":23,\"character\":19},{\"type\":\"hover\",\"text\":\"any\",\"start\":845,\"length\":17,\"target\":\"sendUserOperation\",\"line\":23,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":867,\"length\":7,\"target\":\"account\",\"line\":24,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) authorization: SignAuthorizationReturnType\",\"start\":878,\"length\":13,\"target\":\"authorization\",\"line\":25,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: {\\n    to: string;\\n    abi: readonly [{\\n        readonly type: \\\"event\\\";\\n        readonly name: \\\"Approval\\\";\\n        readonly inputs: readonly [{\\n            readonly indexed: true;\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"address\\\";\\n        }, {\\n            readonly indexed: true;\\n            readonly name: \\\"spender\\\";\\n            readonly type: \\\"address\\\";\\n        }, {\\n            ...;\\n        }];\\n    }, ... 9 more ..., {\\n        ...;\\n    }];\\n    functionName: string;\\n    args: (string | bigint)[];\\n}[]\",\"start\":895,\"length\":5,\"target\":\"calls\",\"line\":26,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":916,\"length\":2,\"target\":\"to\",\"line\":28,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\\\"\\nimport usdcAddress\",\"start\":920,\"length\":11,\"target\":\"usdcAddress\",\"line\":28,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"start\":939,\"length\":3,\"target\":\"abi\",\"line\":29,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const erc20Abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport erc20Abi\",\"docs\":\"[ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\",\"start\":944,\"length\":8,\"target\":\"erc20Abi\",\"line\":29,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":960,\"length\":12,\"target\":\"functionName\",\"line\":30,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: (string | bigint)[]\",\"start\":992,\"length\":4,\"target\":\"args\",\"line\":31,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":1016,\"length\":10,\"target\":\"parseUnits\",\"line\":31,\"character\":30},{\"type\":\"hover\",\"text\":\"const receipt: any\",\"start\":1071,\"length\":7,\"target\":\"receipt\",\"line\":36,\"character\":6},{\"type\":\"hover\",\"text\":\"const bundlerClient: any\",\"start\":1087,\"length\":13,\"target\":\"bundlerClient\",\"line\":36,\"character\":22},{\"type\":\"hover\",\"text\":\"any\",\"start\":1101,\"length\":27,\"target\":\"waitForUserOperationReceipt\",\"line\":36,\"character\":36},{\"type\":\"hover\",\"text\":\"(property) hash: any\",\"start\":1131,\"length\":4,\"target\":\"hash\",\"line\":36,\"character\":66}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,735]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createClient, http, publicActions, walletActions } from 'viem'\\nimport { arbitrumSepolia } from 'viem/chains'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { toSimple7702SmartAccount } from 'viem/account-abstraction'\\n\\nexport const owner = privateKeyToAccount('0x...')\\n\\nexport const client = createClient({ \\n  account: owner,\\n  chain: arbitrumSepolia, \\n  transport: http() \\n})\\n  .extend(publicActions)\\n  .extend(walletActions)\\n\\nexport const account = await toSimple7702SmartAccount({ client, owner })\\n\\nexport const paymasterAddress = '0x3BA9A96eE3eFf3A69E2B18886AcF52027EFF8966'\\nexport const usdcAddress = '0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d' \\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":696,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { erc20Abi, parseUnits } from 'viem'\\nimport { account, client, usdcAddress } from './config'\\nimport { paymaster } from './paymaster'\\n\\nconst bundlerClient = createBundlerClient({\\n  account,\\n  client,\\n  paymaster,\\n  transport: http(`https://public.pimlico.io/v2/${client.chain.id}/rpc`),\\n  userOperation: {\\n    estimateFeesPerGas: async ({ account, bundlerClient, userOperation }) => {\\n      const { standard: fees } = await bundlerClient.request({\\n        method: 'pimlico_getUserOperationGasPrice',\\n      })\\n      const maxFeePerGas = hexToBigInt(fees.maxFeePerGas)\\n      const maxPriorityFeePerGas = hexToBigInt(fees.maxPriorityFeePerGas)\\n      return { maxFeePerGas, maxPriorityFeePerGas }\\n    },\\n  },\\n})\\n\\nconst authorization = await client.signAuthorization(account.authorization) // [!code focus:99]\\n\\nconst hash = await bundlerClient.sendUserOperation({\\n  account,\\n  authorization,\\n  calls: [\\n    {\\n      to: usdcAddress,\\n      abi: erc20Abi,\\n      functionName: 'transfer',\\n      args: ['0x{recipient}', parseUnits('10', 6)], // 10 USDC\\n    },\\n  ],\\n})\\n\\nconst receipt = await bundlerClient.waitForUserOperationReceipt({ hash })\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const erc20Abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport erc20Abi\",\"docs\":\"[ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\",\"start\":9,\"length\":8,\"target\":\"erc20Abi\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":19,\"length\":10,\"target\":\"parseUnits\",\"line\":0,\"character\":19},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\\nimport account\",\"start\":53,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\\nimport client\",\"start\":62,\"length\":6,\"target\":\"client\",\"line\":1,\"character\":18},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\\\"\\nimport usdcAddress\",\"start\":70,\"length\":11,\"target\":\"usdcAddress\",\"line\":1,\"character\":26},{\"type\":\"hover\",\"text\":\"import paymaster\",\"start\":109,\"length\":9,\"target\":\"paymaster\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const bundlerClient: any\",\"start\":147,\"length\":13,\"target\":\"bundlerClient\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"any\",\"start\":163,\"length\":19,\"target\":\"createBundlerClient\",\"line\":4,\"character\":22},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":187,\"length\":7,\"target\":\"account\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\",\"start\":198,\"length\":6,\"target\":\"client\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) paymaster: any\",\"start\":208,\"length\":9,\"target\":\"paymaster\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) transport: any\",\"start\":221,\"length\":9,\"target\":\"transport\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"any\",\"start\":232,\"length\":4,\"target\":\"http\",\"line\":8,\"character\":13},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\\nimport client\",\"start\":269,\"length\":6,\"target\":\"client\",\"line\":8,\"character\":50},{\"type\":\"hover\",\"text\":\"(property) chain: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\",\"docs\":\"Chain for the client.\",\"start\":276,\"length\":5,\"target\":\"chain\",\"line\":8,\"character\":57},{\"type\":\"hover\",\"text\":\"(property) id: 421614\",\"docs\":\"ID in number form\",\"start\":282,\"length\":2,\"target\":\"id\",\"line\":8,\"character\":63},{\"type\":\"hover\",\"text\":\"(property) userOperation: {\\n    estimateFeesPerGas: ({ account, bundlerClient, userOperation }: {\\n        account: any;\\n        bundlerClient: any;\\n        userOperation: any;\\n    }) => Promise<{\\n        maxFeePerGas: any;\\n        maxPriorityFeePerGas: any;\\n    }>;\\n}\",\"start\":295,\"length\":13,\"target\":\"userOperation\",\"line\":9,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) estimateFeesPerGas: ({ account, bundlerClient, userOperation }: {\\n    account: any;\\n    bundlerClient: any;\\n    userOperation: any;\\n}) => Promise<{\\n    maxFeePerGas: any;\\n    maxPriorityFeePerGas: any;\\n}>\",\"start\":316,\"length\":18,\"target\":\"estimateFeesPerGas\",\"line\":10,\"character\":4},{\"type\":\"hover\",\"text\":\"(parameter) account: any\",\"start\":345,\"length\":7,\"target\":\"account\",\"line\":10,\"character\":33},{\"type\":\"hover\",\"text\":\"(parameter) bundlerClient: any\",\"start\":354,\"length\":13,\"target\":\"bundlerClient\",\"line\":10,\"character\":42},{\"type\":\"hover\",\"text\":\"(parameter) userOperation: any\",\"start\":369,\"length\":13,\"target\":\"userOperation\",\"line\":10,\"character\":57},{\"type\":\"hover\",\"text\":\"any\",\"start\":405,\"length\":8,\"target\":\"standard\",\"line\":11,\"character\":14},{\"type\":\"hover\",\"text\":\"const fees: any\",\"start\":415,\"length\":4,\"target\":\"fees\",\"line\":11,\"character\":24},{\"type\":\"hover\",\"text\":\"(parameter) bundlerClient: any\",\"start\":430,\"length\":13,\"target\":\"bundlerClient\",\"line\":11,\"character\":39},{\"type\":\"hover\",\"text\":\"any\",\"start\":444,\"length\":7,\"target\":\"request\",\"line\":11,\"character\":53},{\"type\":\"hover\",\"text\":\"(property) method: string\",\"start\":462,\"length\":6,\"target\":\"method\",\"line\":12,\"character\":8},{\"type\":\"hover\",\"text\":\"const maxFeePerGas: any\",\"start\":527,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":14,\"character\":12},{\"type\":\"hover\",\"text\":\"any\",\"start\":542,\"length\":11,\"target\":\"hexToBigInt\",\"line\":14,\"character\":27},{\"type\":\"hover\",\"text\":\"const fees: any\",\"start\":554,\"length\":4,\"target\":\"fees\",\"line\":14,\"character\":39},{\"type\":\"hover\",\"text\":\"any\",\"start\":559,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":14,\"character\":44},{\"type\":\"hover\",\"text\":\"const maxPriorityFeePerGas: any\",\"start\":585,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":15,\"character\":12},{\"type\":\"hover\",\"text\":\"any\",\"start\":608,\"length\":11,\"target\":\"hexToBigInt\",\"line\":15,\"character\":35},{\"type\":\"hover\",\"text\":\"const fees: any\",\"start\":620,\"length\":4,\"target\":\"fees\",\"line\":15,\"character\":47},{\"type\":\"hover\",\"text\":\"any\",\"start\":625,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":15,\"character\":52},{\"type\":\"hover\",\"text\":\"(property) maxFeePerGas: any\",\"start\":662,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":16,\"character\":15},{\"type\":\"hover\",\"text\":\"(property) maxPriorityFeePerGas: any\",\"start\":676,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":16,\"character\":29},{\"type\":\"hover\",\"text\":\"const authorization: SignAuthorizationReturnType\",\"start\":721,\"length\":13,\"target\":\"authorization\",\"line\":21,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const client: Client<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Arbiscan\\\";\\n            readonly url: \\\"https://sepolia.arbiscan.io\\\";\\n            readonly apiUrl: \\\"https://api-sepolia.arbiscan.io/api\\\";\\n        };\\n    };\\n    ... 13 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, {\\n    ...;\\n}, undefined, {\\n    ...;\\n} & {\\n    ...;\\n}>\\nimport client\",\"start\":743,\"length\":6,\"target\":\"client\",\"line\":21,\"character\":28},{\"type\":\"hover\",\"text\":\"(property) signAuthorization: (parameters: SignAuthorizationParameters<{\\n    address: Address;\\n    nonceManager?: NonceManager | undefined;\\n    sign: (parameters: {\\n        hash: Hash;\\n    }) => Promise<Hex>;\\n    signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n    ... 5 more ...;\\n    type: \\\"local\\\";\\n}>) => Promise<SignAuthorizationReturnType>\",\"docs\":\"Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\\n\\nWith the calculated signature, you can:\\n- use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\\n- use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link SignAuthorizationParameters}\"],[\"returns\",\"The signed Authorization object. {@link SignAuthorizationReturnType}\"],[\"example\",\"import { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst signature = await client.signAuthorization({\\n  account: privateKeyToAccount('0x..'),\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"],[\"example\",\"// Account Hoisting\\nimport { createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…'),\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst signature = await client.signAuthorization({\\n  contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\\n})\"]],\"start\":750,\"length\":17,\"target\":\"signAuthorization\",\"line\":21,\"character\":35},{\"type\":\"hover\",\"text\":\"(alias) const account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\\nimport account\",\"start\":768,\"length\":7,\"target\":\"account\",\"line\":21,\"character\":53},{\"type\":\"hover\",\"text\":\"(property) authorization: {\\n    account: PrivateKeyAccount;\\n    address: Address;\\n}\",\"docs\":\"EIP-7702 authorization properties, if applicable.\",\"start\":776,\"length\":13,\"target\":\"authorization\",\"line\":21,\"character\":61},{\"type\":\"hover\",\"text\":\"const hash: any\",\"start\":818,\"length\":4,\"target\":\"hash\",\"line\":23,\"character\":6},{\"type\":\"hover\",\"text\":\"const bundlerClient: any\",\"start\":831,\"length\":13,\"target\":\"bundlerClient\",\"line\":23,\"character\":19},{\"type\":\"hover\",\"text\":\"any\",\"start\":845,\"length\":17,\"target\":\"sendUserOperation\",\"line\":23,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) account: {\\n    abi: readonly [{\\n        readonly inputs: readonly [];\\n        readonly name: \\\"ECDSAInvalidSignature\\\";\\n        readonly type: \\\"error\\\";\\n    }, {\\n        readonly inputs: readonly [{\\n            readonly internalType: \\\"uint256\\\";\\n            readonly name: \\\"length\\\";\\n            readonly type: \\\"uint256\\\";\\n        }];\\n        readonly name: \\\"ECDSAInvalidSignatureLength\\\";\\n        readonly type: \\\"error\\\";\\n    }, ... 13 more ..., {\\n        ...;\\n    }];\\n    ... 19 more ...;\\n    type: \\\"smart\\\";\\n}\",\"start\":867,\"length\":7,\"target\":\"account\",\"line\":24,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) authorization: SignAuthorizationReturnType\",\"start\":878,\"length\":13,\"target\":\"authorization\",\"line\":25,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: {\\n    to: string;\\n    abi: readonly [{\\n        readonly type: \\\"event\\\";\\n        readonly name: \\\"Approval\\\";\\n        readonly inputs: readonly [{\\n            readonly indexed: true;\\n            readonly name: \\\"owner\\\";\\n            readonly type: \\\"address\\\";\\n        }, {\\n            readonly indexed: true;\\n            readonly name: \\\"spender\\\";\\n            readonly type: \\\"address\\\";\\n        }, {\\n            ...;\\n        }];\\n    }, ... 9 more ..., {\\n        ...;\\n    }];\\n    functionName: string;\\n    args: (string | bigint)[];\\n}[]\",\"start\":895,\"length\":5,\"target\":\"calls\",\"line\":26,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: string\",\"start\":916,\"length\":2,\"target\":\"to\",\"line\":28,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\\\"\\nimport usdcAddress\",\"start\":920,\"length\":11,\"target\":\"usdcAddress\",\"line\":28,\"character\":10},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"start\":939,\"length\":3,\"target\":\"abi\",\"line\":29,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const erc20Abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport erc20Abi\",\"docs\":\"[ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\",\"start\":944,\"length\":8,\"target\":\"erc20Abi\",\"line\":29,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) functionName: string\",\"start\":960,\"length\":12,\"target\":\"functionName\",\"line\":30,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) args: (string | bigint)[]\",\"start\":992,\"length\":4,\"target\":\"args\",\"line\":31,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":1016,\"length\":10,\"target\":\"parseUnits\",\"line\":31,\"character\":30},{\"type\":\"hover\",\"text\":\"const receipt: any\",\"start\":1071,\"length\":7,\"target\":\"receipt\",\"line\":36,\"character\":6},{\"type\":\"hover\",\"text\":\"const bundlerClient: any\",\"start\":1087,\"length\":13,\"target\":\"bundlerClient\",\"line\":36,\"character\":22},{\"type\":\"hover\",\"text\":\"any\",\"start\":1101,\"length\":27,\"target\":\"waitForUserOperationReceipt\",\"line\":36,\"character\":36},{\"type\":\"hover\",\"text\":\"(property) hash: any\",\"start\":1131,\"length\":4,\"target\":\"hash\",\"line\":36,\"character\":66}],\"tags\":[]}}"
