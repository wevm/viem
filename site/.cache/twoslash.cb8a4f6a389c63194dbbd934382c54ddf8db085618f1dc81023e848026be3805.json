"{\"value\":{\"code\":\"import { formatUnits } from 'viem'\\nimport { publicClient } from './config'\\nimport { usdcAddress, usdcAbi } from './contract'\\n\\nconst unwatch = publicClient.watchContractEvent({\\n  address: usdcAddress,\\n  abi: usdcAbi,\\n  eventName: 'Transfer',\\n  onLogs: (logs) => {\\n    logs.forEach((log) => {\\n      const { from, to, value } = log.args\\n      console.log(`Transfer: ${from} â†’ ${to} (${formatUnits(value, 6)} USDC)`)\\n    })\\n  },\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function formatUnits(value: bigint, decimals: number): string\\nimport formatUnits\",\"docs\":\"Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\\n\\n- Docs: https://viem.sh/docs/utilities/formatUnits\",\"tags\":[[\"example\",\"import { formatUnits } from 'viem'\\n\\nformatUnits(420000000000n, 9)\\n// '420'\"]],\"start\":9,\"length\":11,\"target\":\"formatUnits\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 65 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":44,\"length\":12,\"target\":\"publicClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":84,\"length\":11,\"target\":\"usdcAddress\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":97,\"length\":7,\"target\":\"usdcAbi\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"const unwatch: WatchContractEventReturnType\",\"start\":132,\"length\":7,\"target\":\"unwatch\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 65 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":142,\"length\":12,\"target\":\"publicClient\",\"line\":4,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) watchContractEvent: <readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"Transfer\\\", undefined>(args: WatchContractEventParameters<...>) => WatchContractEventReturnType\",\"docs\":\"Watches and returns emitted contract event logs.\\n\\n- Docs: https://viem.sh/docs/contract/watchContractEvent\",\"tags\":[[\"remarks\",\"This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\\n\\n`watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\"],[\"param\",\"args - {@link WatchContractEventParameters}\"],[\"returns\",\"A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst unwatch = client.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\\n  eventName: 'Transfer',\\n  args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\\n  onLogs: (logs) => console.log(logs),\\n})\"]],\"start\":155,\"length\":18,\"target\":\"watchContractEvent\",\"line\":4,\"character\":29},{\"type\":\"hover\",\"text\":\"(property) address?: `0x${string}` | `0x${string}`[] | undefined\",\"docs\":\"The address of the contract.\",\"start\":178,\"length\":7,\"target\":\"address\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":187,\"length\":11,\"target\":\"usdcAddress\",\"line\":5,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"docs\":\"Contract ABI.\",\"start\":202,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":207,\"length\":7,\"target\":\"usdcAbi\",\"line\":6,\"character\":7},{\"type\":\"hover\",\"text\":\"(property) eventName?: \\\"Approval\\\" | \\\"Transfer\\\" | undefined\",\"docs\":\"Contract event.\",\"start\":218,\"length\":9,\"target\":\"eventName\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) onLogs: WatchContractEventOnLogsFn<readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"Transfer\\\", undefined>\",\"docs\":\"The callback to call when new event logs are received.\",\"start\":243,\"length\":6,\"target\":\"onLogs\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(parameter) logs: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>[]\",\"start\":252,\"length\":4,\"target\":\"logs\",\"line\":8,\"character\":11},{\"type\":\"hover\",\"text\":\"(parameter) logs: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>[]\",\"start\":267,\"length\":4,\"target\":\"logs\",\"line\":9,\"character\":4},{\"type\":\"hover\",\"text\":\"(method) Array<Log<bigint, number, false, { readonly type: \\\"event\\\"; readonly name: \\\"Transfer\\\"; readonly inputs: readonly [{ readonly indexed: true; readonly name: \\\"from\\\"; readonly type: \\\"address\\\"; }, { readonly indexed: true; readonly name: \\\"to\\\"; readonly type: \\\"address\\\"; }, { ...; }]; }, undefined>>.forEach(callbackfn: (value: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>, index: number, array: Log<...>[]) => void, thisArg?: any): void\",\"docs\":\"Performs the specified action for each element in an array.\",\"tags\":[[\"param\",\"callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\"],[\"param\",\"thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\"]],\"start\":272,\"length\":7,\"target\":\"forEach\",\"line\":9,\"character\":9},{\"type\":\"hover\",\"text\":\"(parameter) log: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>\",\"start\":281,\"length\":3,\"target\":\"log\",\"line\":9,\"character\":18},{\"type\":\"hover\",\"text\":\"const from: `0x${string}` | undefined\",\"start\":305,\"length\":4,\"target\":\"from\",\"line\":10,\"character\":14},{\"type\":\"hover\",\"text\":\"const to: `0x${string}` | undefined\",\"start\":311,\"length\":2,\"target\":\"to\",\"line\":10,\"character\":20},{\"type\":\"hover\",\"text\":\"const value: bigint | undefined\",\"start\":315,\"length\":5,\"target\":\"value\",\"line\":10,\"character\":24},{\"type\":\"hover\",\"text\":\"(parameter) log: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>\",\"start\":325,\"length\":3,\"target\":\"log\",\"line\":10,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) args: {\\n    from?: `0x${string}` | undefined;\\n    to?: `0x${string}` | undefined;\\n    value?: bigint | undefined;\\n}\",\"start\":329,\"length\":4,\"target\":\"args\",\"line\":10,\"character\":38},{\"type\":\"hover\",\"text\":\"namespace console\\nvar console: Console\",\"docs\":\"The `console` module provides a simple debugging console that is similar to the\\nJavaScript console mechanism provided by web browsers.\\n\\nThe module exports two specific components:\\n\\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) and\\n[`process.stderr`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\\n\\n_**Warning**_: The global console object's methods are neither consistently\\nsynchronous like the browser APIs they resemble, nor are they consistently\\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v22.x/api/process.html#a-note-on-process-io) for\\nmore information.\\n\\nExample using the global `console`:\\n\\n```js\\nconsole.log('hello world');\\n// Prints: hello world, to stdout\\nconsole.log('hello %s', 'world');\\n// Prints: hello world, to stdout\\nconsole.error(new Error('Whoops, something bad happened'));\\n// Prints error message and stack trace to stderr:\\n//   Error: Whoops, something bad happened\\n//     at [eval]:5:15\\n//     at Script.runInThisContext (node:vm:132:18)\\n//     at Object.runInThisContext (node:vm:309:38)\\n//     at node:internal/process/execution:77:19\\n//     at [eval]-wrapper:6:22\\n//     at evalScript (node:internal/process/execution:76:60)\\n//     at node:internal/main/eval_string:23:3\\n\\nconst name = 'Will Robinson';\\nconsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to stderr\\n```\\n\\nExample using the `Console` class:\\n\\n```js\\nconst out = getStreamSomehow();\\nconst err = getStreamSomehow();\\nconst myConsole = new console.Console(out, err);\\n\\nmyConsole.log('hello world');\\n// Prints: hello world, to out\\nmyConsole.log('hello %s', 'world');\\n// Prints: hello world, to out\\nmyConsole.error(new Error('Whoops, something bad happened'));\\n// Prints: [Error: Whoops, something bad happened], to err\\n\\nconst name = 'Will Robinson';\\nmyConsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to err\\n```\",\"tags\":[[\"see\",\"[source](https://github.com/nodejs/node/blob/v22.x/lib/console.js)\"]],\"start\":340,\"length\":7,\"target\":\"console\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(method) Console.log(...data: any[]): void (+2 overloads)\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)\",\"start\":348,\"length\":3,\"target\":\"log\",\"line\":11,\"character\":14},{\"type\":\"hover\",\"text\":\"const from: `0x${string}` | undefined\",\"start\":365,\"length\":4,\"target\":\"from\",\"line\":11,\"character\":31},{\"type\":\"hover\",\"text\":\"const to: `0x${string}` | undefined\",\"start\":375,\"length\":2,\"target\":\"to\",\"line\":11,\"character\":41},{\"type\":\"hover\",\"text\":\"(alias) formatUnits(value: bigint, decimals: number): string\\nimport formatUnits\",\"docs\":\"Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\\n\\n- Docs: https://viem.sh/docs/utilities/formatUnits\",\"tags\":[[\"example\",\"import { formatUnits } from 'viem'\\n\\nformatUnits(420000000000n, 9)\\n// '420'\"]],\"start\":382,\"length\":11,\"target\":\"formatUnits\",\"line\":11,\"character\":48},{\"type\":\"hover\",\"text\":\"const value: bigint | undefined\",\"start\":394,\"length\":5,\"target\":\"value\",\"line\":11,\"character\":60}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,3004]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":163,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":593,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":756,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1186,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1349,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1779,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1942,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2372,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2535,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2965,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { formatUnits } from 'viem'\\nimport { publicClient } from './config'\\nimport { usdcAddress, usdcAbi } from './contract'\\n\\nconst unwatch = publicClient.watchContractEvent({\\n  address: usdcAddress,\\n  abi: usdcAbi,\\n  eventName: 'Transfer',\\n  onLogs: (logs) => {\\n    logs.forEach((log) => {\\n      const { from, to, value } = log.args\\n      console.log(`Transfer: ${from} â†’ ${to} (${formatUnits(value, 6)} USDC)`)\\n    })\\n  },\\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function formatUnits(value: bigint, decimals: number): string\\nimport formatUnits\",\"docs\":\"Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\\n\\n- Docs: https://viem.sh/docs/utilities/formatUnits\",\"tags\":[[\"example\",\"import { formatUnits } from 'viem'\\n\\nformatUnits(420000000000n, 9)\\n// '420'\"]],\"start\":9,\"length\":11,\"target\":\"formatUnits\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 65 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":44,\"length\":12,\"target\":\"publicClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":84,\"length\":11,\"target\":\"usdcAddress\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":97,\"length\":7,\"target\":\"usdcAbi\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"const unwatch: WatchContractEventReturnType\",\"start\":132,\"length\":7,\"target\":\"unwatch\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 65 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport publicClient\",\"start\":142,\"length\":12,\"target\":\"publicClient\",\"line\":4,\"character\":16},{\"type\":\"hover\",\"text\":\"(property) watchContractEvent: <readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"Transfer\\\", undefined>(args: WatchContractEventParameters<...>) => WatchContractEventReturnType\",\"docs\":\"Watches and returns emitted contract event logs.\\n\\n- Docs: https://viem.sh/docs/contract/watchContractEvent\",\"tags\":[[\"remarks\",\"This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\\n\\n`watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\"],[\"param\",\"args - {@link WatchContractEventParameters}\"],[\"returns\",\"A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst unwatch = client.watchContractEvent({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\\n  eventName: 'Transfer',\\n  args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\\n  onLogs: (logs) => console.log(logs),\\n})\"]],\"start\":155,\"length\":18,\"target\":\"watchContractEvent\",\"line\":4,\"character\":29},{\"type\":\"hover\",\"text\":\"(property) address?: `0x${string}` | `0x${string}`[] | undefined\",\"docs\":\"The address of the contract.\",\"start\":178,\"length\":7,\"target\":\"address\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":187,\"length\":11,\"target\":\"usdcAddress\",\"line\":5,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"docs\":\"Contract ABI.\",\"start\":202,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":207,\"length\":7,\"target\":\"usdcAbi\",\"line\":6,\"character\":7},{\"type\":\"hover\",\"text\":\"(property) eventName?: \\\"Approval\\\" | \\\"Transfer\\\" | undefined\",\"docs\":\"Contract event.\",\"start\":218,\"length\":9,\"target\":\"eventName\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) onLogs: WatchContractEventOnLogsFn<readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"Transfer\\\", undefined>\",\"docs\":\"The callback to call when new event logs are received.\",\"start\":243,\"length\":6,\"target\":\"onLogs\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(parameter) logs: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>[]\",\"start\":252,\"length\":4,\"target\":\"logs\",\"line\":8,\"character\":11},{\"type\":\"hover\",\"text\":\"(parameter) logs: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>[]\",\"start\":267,\"length\":4,\"target\":\"logs\",\"line\":9,\"character\":4},{\"type\":\"hover\",\"text\":\"(method) Array<Log<bigint, number, false, { readonly type: \\\"event\\\"; readonly name: \\\"Transfer\\\"; readonly inputs: readonly [{ readonly indexed: true; readonly name: \\\"from\\\"; readonly type: \\\"address\\\"; }, { readonly indexed: true; readonly name: \\\"to\\\"; readonly type: \\\"address\\\"; }, { ...; }]; }, undefined>>.forEach(callbackfn: (value: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>, index: number, array: Log<...>[]) => void, thisArg?: any): void\",\"docs\":\"Performs the specified action for each element in an array.\",\"tags\":[[\"param\",\"callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\"],[\"param\",\"thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\"]],\"start\":272,\"length\":7,\"target\":\"forEach\",\"line\":9,\"character\":9},{\"type\":\"hover\",\"text\":\"(parameter) log: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>\",\"start\":281,\"length\":3,\"target\":\"log\",\"line\":9,\"character\":18},{\"type\":\"hover\",\"text\":\"const from: `0x${string}` | undefined\",\"start\":305,\"length\":4,\"target\":\"from\",\"line\":10,\"character\":14},{\"type\":\"hover\",\"text\":\"const to: `0x${string}` | undefined\",\"start\":311,\"length\":2,\"target\":\"to\",\"line\":10,\"character\":20},{\"type\":\"hover\",\"text\":\"const value: bigint | undefined\",\"start\":315,\"length\":5,\"target\":\"value\",\"line\":10,\"character\":24},{\"type\":\"hover\",\"text\":\"(parameter) log: Log<bigint, number, false, {\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Transfer\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"from\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"to\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, undefined>\",\"start\":325,\"length\":3,\"target\":\"log\",\"line\":10,\"character\":34},{\"type\":\"hover\",\"text\":\"(property) args: {\\n    from?: `0x${string}` | undefined;\\n    to?: `0x${string}` | undefined;\\n    value?: bigint | undefined;\\n}\",\"start\":329,\"length\":4,\"target\":\"args\",\"line\":10,\"character\":38},{\"type\":\"hover\",\"text\":\"namespace console\\nvar console: Console\",\"docs\":\"The `console` module provides a simple debugging console that is similar to the\\nJavaScript console mechanism provided by web browsers.\\n\\nThe module exports two specific components:\\n\\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) and\\n[`process.stderr`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\\n\\n_**Warning**_: The global console object's methods are neither consistently\\nsynchronous like the browser APIs they resemble, nor are they consistently\\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v22.x/api/process.html#a-note-on-process-io) for\\nmore information.\\n\\nExample using the global `console`:\\n\\n```js\\nconsole.log('hello world');\\n// Prints: hello world, to stdout\\nconsole.log('hello %s', 'world');\\n// Prints: hello world, to stdout\\nconsole.error(new Error('Whoops, something bad happened'));\\n// Prints error message and stack trace to stderr:\\n//   Error: Whoops, something bad happened\\n//     at [eval]:5:15\\n//     at Script.runInThisContext (node:vm:132:18)\\n//     at Object.runInThisContext (node:vm:309:38)\\n//     at node:internal/process/execution:77:19\\n//     at [eval]-wrapper:6:22\\n//     at evalScript (node:internal/process/execution:76:60)\\n//     at node:internal/main/eval_string:23:3\\n\\nconst name = 'Will Robinson';\\nconsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to stderr\\n```\\n\\nExample using the `Console` class:\\n\\n```js\\nconst out = getStreamSomehow();\\nconst err = getStreamSomehow();\\nconst myConsole = new console.Console(out, err);\\n\\nmyConsole.log('hello world');\\n// Prints: hello world, to out\\nmyConsole.log('hello %s', 'world');\\n// Prints: hello world, to out\\nmyConsole.error(new Error('Whoops, something bad happened'));\\n// Prints: [Error: Whoops, something bad happened], to err\\n\\nconst name = 'Will Robinson';\\nmyConsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to err\\n```\",\"tags\":[[\"see\",\"[source](https://github.com/nodejs/node/blob/v22.x/lib/console.js)\"]],\"start\":340,\"length\":7,\"target\":\"console\",\"line\":11,\"character\":6},{\"type\":\"hover\",\"text\":\"(method) Console.log(...data: any[]): void (+2 overloads)\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)\",\"start\":348,\"length\":3,\"target\":\"log\",\"line\":11,\"character\":14},{\"type\":\"hover\",\"text\":\"const from: `0x${string}` | undefined\",\"start\":365,\"length\":4,\"target\":\"from\",\"line\":11,\"character\":31},{\"type\":\"hover\",\"text\":\"const to: `0x${string}` | undefined\",\"start\":375,\"length\":2,\"target\":\"to\",\"line\":11,\"character\":41},{\"type\":\"hover\",\"text\":\"(alias) formatUnits(value: bigint, decimals: number): string\\nimport formatUnits\",\"docs\":\"Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\\n\\n- Docs: https://viem.sh/docs/utilities/formatUnits\",\"tags\":[[\"example\",\"import { formatUnits } from 'viem'\\n\\nformatUnits(420000000000n, 9)\\n// '420'\"]],\"start\":382,\"length\":11,\"target\":\"formatUnits\",\"line\":11,\"character\":48},{\"type\":\"hover\",\"text\":\"const value: bigint | undefined\",\"start\":394,\"length\":5,\"target\":\"value\",\"line\":11,\"character\":60}],\"tags\":[]}}"
