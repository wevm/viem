"{\"value\":{\"code\":\"const { results } = await client.simulateCalls({\\n  account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929', // [!code focus]\\n  calls: [ \\n    { \\n      to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n      value: parseEther('2'),\\n    },  \\n  ], \\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"const results: [({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n})]\",\"docs\":\"Call results.\",\"start\":8,\"length\":7,\"target\":\"results\",\"line\":0,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":26,\"length\":6,\"target\":\"client\",\"line\":0,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) simulateCalls: <readonly [{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: bigint;\\n}]>(args: SimulateCallsParameters<readonly [{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: bigint;\\n}]>) => Promise<...>\",\"docs\":\"Simulates a set of calls.\",\"tags\":[[\"example\",\"```ts\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst result = await client.simulateCalls({\\n  account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n  calls: [{\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1'),\\n    },\\n  ]\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link SimulateCallsParameters}\"],[\"returns\",\"Results. {@link SimulateCallsReturnType}\"]],\"start\":33,\"length\":13,\"target\":\"simulateCalls\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"docs\":\"Account attached to the calls (msg.sender).\",\"start\":51,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: bigint;\\n}, {}>>]\",\"docs\":\"Calls to simulate.\",\"start\":125,\"length\":5,\"target\":\"calls\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\"\",\"start\":148,\"length\":2,\"target\":\"to\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":204,\"length\":5,\"target\":\"value\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":211,\"length\":10,\"target\":\"parseEther\",\"line\":5,\"character\":13}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,904]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":196,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":392,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":588,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":784,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseEther } from 'viem'\\nimport { client } from './config'\\n// ---cut---\\nconst { results } = await client.simulateCalls({\\n  account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929', // [!code focus]\\n  calls: [ \\n    { \\n      to: '0xcb98643b8786950F0461f3B0edf99D88F274574D',\\n      value: parseEther('2'),\\n    },  \\n  ], \\n})\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"const results: [({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    error: Error;\\n    result?: undefined;\\n    status: \\\"failure\\\";\\n}) | ({\\n    data: Hex;\\n    gasUsed: bigint;\\n    logs?: Log[] | undefined;\\n} & {\\n    ...;\\n})]\",\"docs\":\"Call results.\",\"start\":8,\"length\":7,\"target\":\"results\",\"line\":0,\"character\":8},{\"type\":\"hover\",\"text\":\"(alias) const client: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport client\",\"start\":26,\"length\":6,\"target\":\"client\",\"line\":0,\"character\":26},{\"type\":\"hover\",\"text\":\"(property) simulateCalls: <readonly [{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: bigint;\\n}]>(args: SimulateCallsParameters<readonly [{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: bigint;\\n}]>) => Promise<...>\",\"docs\":\"Simulates a set of calls.\",\"tags\":[[\"example\",\"```ts\\nimport { createPublicClient, http, parseEther } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n\\nconst result = await client.simulateCalls({\\n  account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\\n  calls: [{\\n    {\\n      data: '0xdeadbeef',\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n    },\\n    {\\n      to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\\n      value: parseEther('1'),\\n    },\\n  ]\\n})\\n```\"],[\"param\",\"client - Client to use.\"],[\"param\",\"parameters - {@link SimulateCallsParameters}\"],[\"returns\",\"Results. {@link SimulateCallsReturnType}\"]],\"start\":33,\"length\":13,\"target\":\"simulateCalls\",\"line\":0,\"character\":33},{\"type\":\"hover\",\"text\":\"(property) account?: `0x${string}` | Account | undefined\",\"docs\":\"Account attached to the calls (msg.sender).\",\"start\":51,\"length\":7,\"target\":\"account\",\"line\":1,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) calls: readonly [Prettify<Call<{\\n    readonly to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\";\\n    readonly value: bigint;\\n}, {}>>]\",\"docs\":\"Calls to simulate.\",\"start\":125,\"length\":5,\"target\":\"calls\",\"line\":2,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) to: \\\"0xcb98643b8786950F0461f3B0edf99D88F274574D\\\"\",\"start\":148,\"length\":2,\"target\":\"to\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(property) value: bigint\",\"start\":204,\"length\":5,\"target\":\"value\",\"line\":5,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) parseEther(ether: string, unit?: \\\"wei\\\" | \\\"gwei\\\"): bigint\\nimport parseEther\",\"docs\":\"Converts a string representation of ether to numerical wei.\\n\\n- Docs: https://viem.sh/docs/utilities/parseEther\",\"tags\":[[\"example\",\"import { parseEther } from 'viem'\\n\\nparseEther('420')\\n// 420000000000000000000n\"]],\"start\":211,\"length\":10,\"target\":\"parseEther\",\"line\":5,\"character\":13}],\"tags\":[]}}"
