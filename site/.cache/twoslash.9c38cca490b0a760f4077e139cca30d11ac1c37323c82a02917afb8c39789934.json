"{\"value\":{\"code\":\"import { optimism } from 'viem/chains' // [!code focus]\\n\\nconst { maxFeePerGas, maxPriorityFeePerGas } = \\n  await publicClient.estimateFeesPerGas({\\n    chain: optimism // [!code focus]\\n  })\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n}\\nimport optimism\",\"start\":9,\"length\":8,\"target\":\"optimism\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const maxFeePerGas: bigint\",\"docs\":\"Total fee per gas in wei (gasPrice/baseFeePerGas + maxPriorityFeePerGas).\",\"start\":65,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":2,\"character\":8},{\"type\":\"hover\",\"text\":\"const maxPriorityFeePerGas: bigint\",\"docs\":\"Max priority fee per gas (in wei).\",\"start\":79,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":113,\"length\":12,\"target\":\"publicClient\",\"line\":3,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) estimateFeesPerGas: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n}, \\\"eip1559\\\">(args?: EstimateFeesPerGasParameters<...> | undefined) => Promise<...>\",\"docs\":\"Returns an estimate for the fees per gas for a transaction to be included\\nin the next block.\\n\\n- Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link EstimateFeesPerGasParameters}\"],[\"returns\",\"An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst maxPriorityFeePerGas = await client.estimateFeesPerGas()\\n// { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\"]],\"start\":126,\"length\":18,\"target\":\"estimateFeesPerGas\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) chain?: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n} | null | undefined\",\"start\":151,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n}\\nimport optimism\",\"start\":158,\"length\":8,\"target\":\"optimism\",\"line\":4,\"character\":11}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nimport { optimism } from 'viem/chains' // [!code focus]\\n\\nconst { maxFeePerGas, maxPriorityFeePerGas } = \\n  await publicClient.estimateFeesPerGas({\\n    chain: optimism // [!code focus]\\n  })\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n}\\nimport optimism\",\"start\":9,\"length\":8,\"target\":\"optimism\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const maxFeePerGas: bigint\",\"docs\":\"Total fee per gas in wei (gasPrice/baseFeePerGas + maxPriorityFeePerGas).\",\"start\":65,\"length\":12,\"target\":\"maxFeePerGas\",\"line\":2,\"character\":8},{\"type\":\"hover\",\"text\":\"const maxPriorityFeePerGas: bigint\",\"docs\":\"Max priority fee per gas (in wei).\",\"start\":79,\"length\":20,\"target\":\"maxPriorityFeePerGas\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":113,\"length\":12,\"target\":\"publicClient\",\"line\":3,\"character\":8},{\"type\":\"hover\",\"text\":\"(property) estimateFeesPerGas: <{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n}, \\\"eip1559\\\">(args?: EstimateFeesPerGasParameters<...> | undefined) => Promise<...>\",\"docs\":\"Returns an estimate for the fees per gas for a transaction to be included\\nin the next block.\\n\\n- Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\",\"tags\":[[\"param\",\"client - Client to use\"],[\"param\",\"parameters - {@link EstimateFeesPerGasParameters}\"],[\"returns\",\"An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst maxPriorityFeePerGas = await client.estimateFeesPerGas()\\n// { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\"]],\"start\":126,\"length\":18,\"target\":\"estimateFeesPerGas\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) chain?: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n} | null | undefined\",\"start\":151,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const optimism: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Optimism Explorer\\\";\\n            readonly url: \\\"https://optimistic.etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api-optimistic.etherscan.io/api\\\";\\n        };\\n    };\\n    ... 10 more ...;\\n    serializers: {\\n        readonly transaction: typeof import(\\\"/Users/jakemoxey/git/viem/src/_types/op-stack/serializers\\\").serializeTransactionOpStack;\\n    };\\n}\\nimport optimism\",\"start\":158,\"length\":8,\"target\":\"optimism\",\"line\":4,\"character\":11}],\"tags\":[]}}"
