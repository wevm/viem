"{\"value\":{\"mdx\":\"# Coinbase Smart Wallet\\n\\nThe `toCoinbaseSmartAccount` implementation references the [Coinbase Smart Wallet](https://github.com/coinbase/smart-wallet) contract. \\n\\n## Usage\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { toCoinbaseSmartAccount } from 'viem/account-abstraction' // [!code focus]\\nimport { client } from './client.js'\\nimport { owner } from './owner.js'\\n\\nconst account = await toCoinbaseSmartAccount({ // [!code focus]\\n  client, // [!code focus]\\n  owners: [owner], // [!code focus]\\n}) // [!code focus]\\n```\\n\\n```ts twoslash [client.ts] filename=\\\"config.ts\\\"\\nimport { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n```ts twoslash [owner.ts (Private Key)] filename=\\\"owner.ts\\\"\\nimport { privateKeyToAccount } from 'viem/accounts'\\n \\nexport const owner = privateKeyToAccount('0x...')\\n```\\n\\n```ts twoslash [owner.ts (Passkey)] filename=\\\"owner.ts\\\"\\nimport { createWebAuthnCredential, toWebAuthnAccount } from 'viem/account-abstraction'\\n\\n// Register a credential (ie. passkey).\\nconst credential = await createWebAuthnCredential({ name: 'Wallet' })\\n \\n// Create a WebAuthn owner account from the credential.\\nexport const owner = toWebAuthnAccount({ credential })\\n```\\n\\n:::\\n\\n:::tip\\n**Tip:** You can use a Passkey (WebAuthn) to sign User Operations. Check the **owner.ts (Passkey)** tab.\\n:::\\n\\n## Returns\\n\\n`SmartAccount<CoinbaseSmartAccountImplementation>`\\n\\n## Parameters\\n\\n### client\\n\\n- **Type:** `Client`\\n\\nClient used to retrieve Smart Account data.\\n\\n```ts\\nconst client = createPublicClient({ // [!code focus]\\n  chain: mainnet, // [!code focus]\\n  transport: http(), // [!code focus]\\n}) // [!code focus]\\n\\nconst account = await toCoinbaseSmartAccount({\\n  client, // [!code focus]\\n  owners: [owner],\\n})\\n```\\n\\n### owners\\n\\n- **Type:** `(LocalAccount | WebAuthnAccount)[]`\\n\\nOwners of the Smart Account. Can be a [Local Account](/docs/accounts/local) or a [WebAuthn Account (Passkey)](/account-abstraction/accounts/webauthn).\\n\\n```ts\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...')], // [!code focus]\\n})\\n```\\n\\n### ownerIndex (optional)\\n\\n- **Type:** `number`\\n\\nIndex of the owner to use for signing messages & User Operations.\\n\\n```ts\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount('0x...'), privateKeyToAccount('0x...')],\\n  ownerIndex: 1, // [!code focus]\\n})\\n```\\n\\n### nonce (optional)\\n\\n- **Type:** `bigint`\\n\\nNonce to use for the Smart Account.\\n\\n```ts\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [owner],\\n  nonce: 1n, // [!code focus]\\n})\\n```\\n\",\"document\":[{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#coinbase-smart-wallet\",\"html\":\"</header>\\n<p>The <code>toCoinbaseSmartAccount</code> implementation references the <a href=\\\"https://github.com/coinbase/smart-wallet\\\">Coinbase Smart Wallet</a> contract.</p>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#coinbase-smart-wallet\",\"isPage\":true,\"text\":\"\\nThe toCoinbaseSmartAccount implementation references the Coinbase Smart Wallet contract.\\n\",\"title\":\"Coinbase Smart Wallet\",\"titles\":[]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: owner.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWebAuthnCredential, toWebAuthnAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Register a credential (ie. passkey).</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> credential</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWebAuthnCredential</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Wallet&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Create a WebAuthn owner account from the credential.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toWebAuthnAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ credential })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: owner.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { toCoinbaseSmartAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client.js&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { owner } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./owner.js&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toCoinbaseSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owners: [owner], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-title=\\\"owner.ts (Private Key)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"owner.ts (Private Key)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div><div data-title=\\\"owner.ts (Passkey)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"owner.ts (Passkey)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createWebAuthnCredential, toWebAuthnAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/account-abstraction&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Register a credential (ie. passkey).</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> credential</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createWebAuthnCredential</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Wallet&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Create a WebAuthn owner account from the credential.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toWebAuthnAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ credential })</span></span></code></pre></div></div>\\n<aside data-callout=\\\"tip\\\"><p><strong>Tip:</strong> You can use a Passkey (WebAuthn) to sign User Operations. Check the <strong>owner.ts (Passkey)</strong> tab.</p></aside>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#usage\",\"isPage\":false,\"text\":\"\\n// @filename: owner.ts\\nimport { createWebAuthnCredential, toWebAuthnAccount } from &#x27;viem/account-abstraction&#x27;\\n \\n// Register a credential (ie. passkey).\\nconst credential = await createWebAuthnCredential({ name: &#x27;Wallet&#x27; })\\n \\n// Create a WebAuthn owner account from the credential.\\nexport const owner = toWebAuthnAccount({ credential })\\n// @filename: owner.ts\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n// @filename: example.js\\n \\n// ---cut---\\nimport { toCoinbaseSmartAccount } from &#x27;viem/account-abstraction&#x27;\\nimport { client } from &#x27;./client.js&#x27;\\nimport { owner } from &#x27;./owner.js&#x27;\\n \\nconst account = await toCoinbaseSmartAccount({ \\n  client, \\n  owners: [owner], \\n}) import { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})import { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)import { createWebAuthnCredential, toWebAuthnAccount } from &#x27;viem/account-abstraction&#x27;\\n \\n// Register a credential (ie. passkey).\\nconst credential = await createWebAuthnCredential({ name: &#x27;Wallet&#x27; })\\n \\n// Create a WebAuthn owner account from the credential.\\nexport const owner = toWebAuthnAccount({ credential })\\nTip: You can use a Passkey (WebAuthn) to sign User Operations. Check the owner.ts (Passkey) tab.\\n\",\"title\":\"Usage\",\"titles\":[\"Coinbase Smart Wallet\"]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#returns\",\"html\":\"\\n<p><code>SmartAccount&lt;CoinbaseSmartAccountImplementation&gt;</code></p>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#returns\",\"isPage\":false,\"text\":\"\\nSmartAccount&lt;CoinbaseSmartAccountImplementation&gt;\\n\",\"title\":\"Returns\",\"titles\":[\"Coinbase Smart Wallet\"]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#parameters\",\"html\":\"\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"Coinbase Smart Wallet\"]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#client\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>Client</code></li>\\n</ul>\\n<p>Client used to retrieve Smart Account data.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(), </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toCoinbaseSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owners: [owner],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#client\",\"isPage\":false,\"text\":\"\\n\\nType: Client\\n\\nClient used to retrieve Smart Account data.\\nconst client = createPublicClient({ \\n  chain: mainnet, \\n  transport: http(), \\n}) \\n \\nconst account = await toCoinbaseSmartAccount({\\n  client, \\n  owners: [owner],\\n})\\n\",\"title\":\"client\",\"titles\":[\"Coinbase Smart Wallet\",\"Parameters\"]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#owners\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>(LocalAccount | WebAuthnAccount)[]</code></li>\\n</ul>\\n<p>Owners of the Smart Account. Can be a <a href=\\\"/docs/accounts/local\\\">Local Account</a> or a <a href=\\\"/account-abstraction/accounts/webauthn\\\">WebAuthn Account (Passkey)</a>.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toCoinbaseSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owners: [</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)], </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#owners\",\"isPage\":false,\"text\":\"\\n\\nType: (LocalAccount | WebAuthnAccount)[]\\n\\nOwners of the Smart Account. Can be a Local Account or a WebAuthn Account (Passkey).\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount(&#x27;0x...&#x27;)], \\n})\\n\",\"title\":\"owners\",\"titles\":[\"Coinbase Smart Wallet\",\"Parameters\"]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#ownerindex-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>Index of the owner to use for signing messages &amp; User Operations.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toCoinbaseSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owners: [</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  ownerIndex: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#ownerindex-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nIndex of the owner to use for signing messages &amp; User Operations.\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [privateKeyToAccount(&#x27;0x...&#x27;), privateKeyToAccount(&#x27;0x...&#x27;)],\\n  ownerIndex: 1, \\n})\\n\",\"title\":\"ownerIndex (optional)\",\"titles\":[\"Coinbase Smart Wallet\",\"Parameters\"]},{\"href\":\"/account-abstraction/accounts/smart/toCoinbaseSmartAccount#nonce-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>bigint</code></li>\\n</ul>\\n<p>Nonce to use for the Smart Account.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toCoinbaseSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  owners: [owner],</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  nonce: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">1</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/account-abstraction/accounts/smart/toCoinbaseSmartAccount.md#nonce-optional\",\"isPage\":false,\"text\":\"\\n\\nType: bigint\\n\\nNonce to use for the Smart Account.\\nconst account = await toCoinbaseSmartAccount({\\n  client,\\n  owners: [owner],\\n  nonce: 1n, \\n})\",\"title\":\"nonce (optional)\",\"titles\":[\"Coinbase Smart Wallet\",\"Parameters\"]}]}}"
