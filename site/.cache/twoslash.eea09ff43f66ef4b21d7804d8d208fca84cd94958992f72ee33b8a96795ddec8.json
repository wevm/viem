"{\"value\":{\"code\":\"import { parseAbiItem } from 'viem'\\n\\nconst logs = await publicClient.getLogs({\\n  address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\\n  event: parseAbiItem('event Transfer(address indexed from, address indexed to, uint256 value)'),\\n  args: { // [!code focus:8]\\n    // '0xd8da...' OR '0xa5cc...' OR '0xa152...'\\n    from: [\\n      '0xd8da6bf26964af9d7eed9e03e53415d37aa96045', \\n      '0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac',\\n      '0xa152f8bb749c55e9943a3a0a3111d18ee2b3f94e',\\n    ],\\n  }\\n})\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbiItem<signature extends string | readonly string[] | readonly unknown[]>(signature: Narrow<signature> & ((signature extends string ? string extends signature ? unknown : Signature<signature> : never) | (signature extends readonly string[] ? signature extends readonly [] ? Error<\\\"At least one signature required.\\\"> : string[] extends signature ? unknown : Signatures<signature> : never))): ParseAbiItem<signature>\\nimport parseAbiItem\",\"docs\":\"Parses human-readable ABI item (e.g. error, event, function) into \\n{@link \\nAbi\\n}\\n item\",\"tags\":[[\"param\",\"signature - Human-readable ABI item\"],[\"returns\",\"Parsed {@link Abi} item\"],[\"example\",\"const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\\n//    ^? const abiItem: { name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\";...\"],[\"example\",\"const abiItem = parseAbiItem([\\n  //  ^? const abiItem: { name: \\\"foo\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\"; inputs:...\\n  'function foo(Baz bar) view returns (string)',\\n  'struct Baz { string name; }',\\n])\"]],\"start\":9,\"length\":12,\"target\":\"parseAbiItem\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const logs: GetLogsReturnType<{\\n    readonly name: \\\"Transfer\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"from\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"to\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, [...], undefined, undefined, undefined>\",\"start\":43,\"length\":4,\"target\":\"logs\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":56,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) getLogs: <{\\n    readonly name: \\\"Transfer\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"from\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"to\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, [...], undefined, undefined, undefined>(args?: GetLogsParameters<...> | undefined) => Promise<...>\",\"docs\":\"Returns a list of event logs matching the provided parameters.\\n\\n- Docs: https://viem.sh/docs/actions/public/getLogs\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\\n- JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\",\"tags\":[[\"param\",\"args - {@link GetLogsParameters}\"],[\"returns\",\"A list of event logs. {@link GetLogsReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbiItem } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst logs = await client.getLogs()\"]],\"start\":69,\"length\":7,\"target\":\"getLogs\",\"line\":2,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) address?: `0x${string}` | `0x${string}`[] | undefined\",\"docs\":\"Address or list of addresses from which logs originated\",\"start\":81,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) event: {\\n    readonly name: \\\"Transfer\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"from\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"to\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}\",\"start\":138,\"length\":5,\"target\":\"event\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseAbiItem<\\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\">(signature: \\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\"): {\\n    ...;\\n}\\nimport parseAbiItem\",\"docs\":\"Parses human-readable ABI item (e.g. error, event, function) into \\n{@link \\nAbi\\n}\\n item\",\"tags\":[[\"param\",\"signature - Human-readable ABI item\"],[\"returns\",\"Parsed {@link Abi} item\"],[\"example\",\"const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\\n//    ^? const abiItem: { name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\";...\"],[\"example\",\"const abiItem = parseAbiItem([\\n  //  ^? const abiItem: { name: \\\"foo\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\"; inputs:...\\n  'function foo(Baz bar) view returns (string)',\\n  'struct Baz { string name; }',\\n])\"]],\"start\":145,\"length\":12,\"target\":\"parseAbiItem\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) args?: {\\n    from?: `0x${string}` | `0x${string}`[] | null | undefined;\\n    to?: `0x${string}` | `0x${string}`[] | null | undefined;\\n} | undefined\",\"start\":236,\"length\":4,\"target\":\"args\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from?: `0x${string}` | `0x${string}`[] | null | undefined\",\"start\":316,\"length\":4,\"target\":\"from\",\"line\":7,\"character\":4}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,191]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n// ---cut---\\nimport { parseAbiItem } from 'viem'\\n\\nconst logs = await publicClient.getLogs({\\n  address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\\n  event: parseAbiItem('event Transfer(address indexed from, address indexed to, uint256 value)'),\\n  args: { // [!code focus:8]\\n    // '0xd8da...' OR '0xa5cc...' OR '0xa152...'\\n    from: [\\n      '0xd8da6bf26964af9d7eed9e03e53415d37aa96045', \\n      '0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac',\\n      '0xa152f8bb749c55e9943a3a0a3111d18ee2b3f94e',\\n    ],\\n  }\\n})\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseAbiItem<signature extends string | readonly string[] | readonly unknown[]>(signature: Narrow<signature> & ((signature extends string ? string extends signature ? unknown : Signature<signature> : never) | (signature extends readonly string[] ? signature extends readonly [] ? Error<\\\"At least one signature required.\\\"> : string[] extends signature ? unknown : Signatures<signature> : never))): ParseAbiItem<signature>\\nimport parseAbiItem\",\"docs\":\"Parses human-readable ABI item (e.g. error, event, function) into \\n{@link \\nAbi\\n}\\n item\",\"tags\":[[\"param\",\"signature - Human-readable ABI item\"],[\"returns\",\"Parsed {@link Abi} item\"],[\"example\",\"const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\\n//    ^? const abiItem: { name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\";...\"],[\"example\",\"const abiItem = parseAbiItem([\\n  //  ^? const abiItem: { name: \\\"foo\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\"; inputs:...\\n  'function foo(Baz bar) view returns (string)',\\n  'struct Baz { string name; }',\\n])\"]],\"start\":9,\"length\":12,\"target\":\"parseAbiItem\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"const logs: GetLogsReturnType<{\\n    readonly name: \\\"Transfer\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"from\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"to\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, [...], undefined, undefined, undefined>\",\"start\":43,\"length\":4,\"target\":\"logs\",\"line\":2,\"character\":6},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    ... 64 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":56,\"length\":12,\"target\":\"publicClient\",\"line\":2,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) getLogs: <{\\n    readonly name: \\\"Transfer\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"from\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"to\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}, [...], undefined, undefined, undefined>(args?: GetLogsParameters<...> | undefined) => Promise<...>\",\"docs\":\"Returns a list of event logs matching the provided parameters.\\n\\n- Docs: https://viem.sh/docs/actions/public/getLogs\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\\n- JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\",\"tags\":[[\"param\",\"args - {@link GetLogsParameters}\"],[\"returns\",\"A list of event logs. {@link GetLogsReturnType}\"],[\"example\",\"import { createPublicClient, http, parseAbiItem } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nconst logs = await client.getLogs()\"]],\"start\":69,\"length\":7,\"target\":\"getLogs\",\"line\":2,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) address?: `0x${string}` | `0x${string}`[] | undefined\",\"docs\":\"Address or list of addresses from which logs originated\",\"start\":81,\"length\":7,\"target\":\"address\",\"line\":3,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) event: {\\n    readonly name: \\\"Transfer\\\";\\n    readonly type: \\\"event\\\";\\n    readonly inputs: readonly [{\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"from\\\";\\n        readonly indexed: true;\\n    }, {\\n        readonly type: \\\"address\\\";\\n        readonly name: \\\"to\\\";\\n        readonly indexed: true;\\n    }, {\\n        ...;\\n    }];\\n}\",\"start\":138,\"length\":5,\"target\":\"event\",\"line\":4,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseAbiItem<\\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\">(signature: \\\"event Transfer(address indexed from, address indexed to, uint256 value)\\\"): {\\n    ...;\\n}\\nimport parseAbiItem\",\"docs\":\"Parses human-readable ABI item (e.g. error, event, function) into \\n{@link \\nAbi\\n}\\n item\",\"tags\":[[\"param\",\"signature - Human-readable ABI item\"],[\"returns\",\"Parsed {@link Abi} item\"],[\"example\",\"const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\\n//    ^? const abiItem: { name: \\\"balanceOf\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\";...\"],[\"example\",\"const abiItem = parseAbiItem([\\n  //  ^? const abiItem: { name: \\\"foo\\\"; type: \\\"function\\\"; stateMutability: \\\"view\\\"; inputs:...\\n  'function foo(Baz bar) view returns (string)',\\n  'struct Baz { string name; }',\\n])\"]],\"start\":145,\"length\":12,\"target\":\"parseAbiItem\",\"line\":4,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) args?: {\\n    from?: `0x${string}` | `0x${string}`[] | null | undefined;\\n    to?: `0x${string}` | `0x${string}`[] | null | undefined;\\n} | undefined\",\"start\":236,\"length\":4,\"target\":\"args\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) from?: `0x${string}` | `0x${string}`[] | null | undefined\",\"start\":316,\"length\":4,\"target\":\"from\",\"line\":7,\"character\":4}],\"tags\":[]}}"
