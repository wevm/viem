"{\"value\":{\"mdx\":\"# MetaMask Smart Account\\n\\n:::warning\\n**Note:** This implementation is maintained & distributed by [MetaMask Delegation Toolkit](https://docs.metamask.io/delegation-toolkit).\\n:::\\n\\nMetaMask Smart Account has two types of implementations, each offering unique features \\nand use cases. See [Hybrid Smart Account](https://docs.metamask.io/delegation-toolkit/how-to/create-smart-account/configure-accounts-signers/#configure-a-hybrid-smart-account) and [Multisig Smart Account](https://docs.metamask.io/delegation-toolkit/how-to/create-smart-account/configure-accounts-signers/#configure-a-multisig-smart-account) to learn more about \\nthe implementations.\\n\\nTo implement MetaMask Smart Account, you can use the [`toMetaMaskSmartAccount`](https://docs.metamask.io/delegation-toolkit/how-to/create-smart-account/#create-a-metamasksmartaccount) function from [delegation toolkit](https://docs.metamask.io/delegation-toolkit/).\\n\\n## Install\\n\\n:::code-group\\n```bash [pnpm]\\npnpm add @metamask/delegation-toolkit\\n```\\n\\n```bash [npm]\\nnpm install @metamask/delegation-toolkit\\n```\\n\\n```bash [yarn]\\nyarn add @metamask/delegation-toolkit\\n```\\n\\n```bash [bun]\\nbun add @metamask/delegation-toolkit\\n```\\n:::\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts twoslash [example.ts]\\nimport { // [!code focus]\\n  Implementation, // [!code focus]\\n  toMetaMaskSmartAccount, // [!code focus]\\n} from \\\"@metamask/delegation-toolkit\\\" // [!code focus]\\nimport { client } from './client.js'\\nimport { owner } from './owner.js'\\n\\nconst account = await toMetaMaskSmartAccount({ // [!code focus]\\n  client, // [!code focus]\\n  implementation: Implementation.Hybrid, // [!code focus]\\n  deployParams: [owner.address, [], [], []], // [!code focus]\\n  deploySalt: \\\"0x\\\", // [!code focus]\\n  signatory: { account: owner }, // [!code focus]\\n}) // [!code focus]\\n```\\n\\n```ts twoslash [client.ts] filename=\\\"config.ts\\\"\\nimport { http, createPublicClient } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n```ts twoslash [owner.ts (Private Key)] filename=\\\"owner.ts\\\"\\nimport { privateKeyToAccount } from 'viem/accounts'\\n \\nexport const owner = privateKeyToAccount('0x...')\\n```\\n:::\\n\\n## Returns\\n\\n`SmartAccount<MetaMaskSmartAccountImplementation<TImplementation>>`\\n\\n## Parameters\\n\\n[See Parameters](https://docs.metamask.io/delegation-toolkit/reference/api/smart-account/#parameters-5)\\n\",\"document\":[{\"href\":\"/account-abstraction/accounts/smart/toMetaMaskSmartAccount#metamask-smart-account\",\"html\":\"</header>\\n<aside data-callout=\\\"warning\\\"><p><strong>Note:</strong> This implementation is maintained &amp; distributed by <a href=\\\"https://docs.metamask.io/delegation-toolkit\\\">MetaMask Delegation Toolkit</a>.</p></aside>\\n<p>MetaMask Smart Account has two types of implementations, each offering unique features\\nand use cases. See <a href=\\\"https://docs.metamask.io/delegation-toolkit/how-to/create-smart-account/configure-accounts-signers/#configure-a-hybrid-smart-account\\\">Hybrid Smart Account</a> and <a href=\\\"https://docs.metamask.io/delegation-toolkit/how-to/create-smart-account/configure-accounts-signers/#configure-a-multisig-smart-account\\\">Multisig Smart Account</a> to learn more about\\nthe implementations.</p>\\n<p>To implement MetaMask Smart Account, you can use the <a href=\\\"https://docs.metamask.io/delegation-toolkit/how-to/create-smart-account/#create-a-metamasksmartaccount\\\"><code>toMetaMaskSmartAccount</code></a> function from <a href=\\\"https://docs.metamask.io/delegation-toolkit/\\\">delegation toolkit</a>.</p>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toMetaMaskSmartAccount.md#metamask-smart-account\",\"isPage\":true,\"text\":\"\\nNote: This implementation is maintained &amp; distributed by MetaMask Delegation Toolkit.\\nMetaMask Smart Account has two types of implementations, each offering unique features\\nand use cases. See Hybrid Smart Account and Multisig Smart Account to learn more about\\nthe implementations.\\nTo implement MetaMask Smart Account, you can use the toMetaMaskSmartAccount function from delegation toolkit.\\n\",\"title\":\"MetaMask Smart Account\",\"titles\":[]},{\"href\":\"/account-abstraction/accounts/smart/toMetaMaskSmartAccount#install\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"pnpm\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"pnpm\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">pnpm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> add</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> @metamask/delegation-toolkit</span></span></code></pre></div><div data-title=\\\"npm\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"npm\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">npm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> install</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> @metamask/delegation-toolkit</span></span></code></pre></div><div data-title=\\\"yarn\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"yarn\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">yarn</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> add</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> @metamask/delegation-toolkit</span></span></code></pre></div><div data-title=\\\"bun\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"bun\\\" data-lang=\\\"bash\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">bun</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> add</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> @metamask/delegation-toolkit</span></span></code></pre></div></div>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toMetaMaskSmartAccount.md#install\",\"isPage\":false,\"text\":\"\\npnpm add @metamask/delegation-toolkitnpm install @metamask/delegation-toolkityarn add @metamask/delegation-toolkitbun add @metamask/delegation-toolkit\\n\",\"title\":\"Install\",\"titles\":[\"MetaMask Smart Account\"]},{\"href\":\"/account-abstraction/accounts/smart/toMetaMaskSmartAccount#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: owner.ts</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// @filename: example.js</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// ---cut---</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  Implementation, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  toMetaMaskSmartAccount, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;@metamask/delegation-toolkit&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { client } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client.js&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { owner } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./owner.js&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> account</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> toMetaMaskSmartAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  client, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  implementation: Implementation.Hybrid, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  deployParams: [owner.address, [], [], []], </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  deploySalt: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;0x&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  signatory: { account: owner }, </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}) </span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { http, createPublicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> client</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div><div data-title=\\\"owner.ts (Private Key)\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"owner.ts (Private Key)\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { privateKeyToAccount } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/accounts&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> owner</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> privateKeyToAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span></code></pre></div></div>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toMetaMaskSmartAccount.md#usage\",\"isPage\":false,\"text\":\"\\n// @filename: owner.ts\\nimport { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n// @filename: example.js\\n \\n// ---cut---\\nimport { \\n  Implementation, \\n  toMetaMaskSmartAccount, \\n} from &quot;@metamask/delegation-toolkit&quot;\\nimport { client } from &#x27;./client.js&#x27;\\nimport { owner } from &#x27;./owner.js&#x27;\\n \\nconst account = await toMetaMaskSmartAccount({ \\n  client, \\n  implementation: Implementation.Hybrid, \\n  deployParams: [owner.address, [], [], []], \\n  deploySalt: &quot;0x&quot;, \\n  signatory: { account: owner }, \\n}) import { http, createPublicClient } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})import { privateKeyToAccount } from &#x27;viem/accounts&#x27;\\n \\nexport const owner = privateKeyToAccount(&#x27;0x...&#x27;)\\n\",\"title\":\"Usage\",\"titles\":[\"MetaMask Smart Account\"]},{\"href\":\"/account-abstraction/accounts/smart/toMetaMaskSmartAccount#returns\",\"html\":\"\\n<p><code>SmartAccount&lt;MetaMaskSmartAccountImplementation&lt;TImplementation&gt;&gt;</code></p>\\n\",\"id\":\"pages/account-abstraction/accounts/smart/toMetaMaskSmartAccount.md#returns\",\"isPage\":false,\"text\":\"\\nSmartAccount&lt;MetaMaskSmartAccountImplementation&lt;TImplementation&gt;&gt;\\n\",\"title\":\"Returns\",\"titles\":[\"MetaMask Smart Account\"]},{\"href\":\"/account-abstraction/accounts/smart/toMetaMaskSmartAccount#parameters\",\"html\":\"\\n<p><a href=\\\"https://docs.metamask.io/delegation-toolkit/reference/api/smart-account/#parameters-5\\\">See Parameters</a></p>\",\"id\":\"pages/account-abstraction/accounts/smart/toMetaMaskSmartAccount.md#parameters\",\"isPage\":false,\"text\":\"\\nSee Parameters\",\"title\":\"Parameters\",\"titles\":[\"MetaMask Smart Account\"]}]}}"
