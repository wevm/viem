"{\"value\":{\"mdx\":\"---\\ndescription: Gets resolver for ENS name.\\n---\\n\\n# getEnsResolver\\n\\nGets resolver for ENS name.\\n\\nCalls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\\n\\n## Usage\\n\\n:::code-group\\n\\n```ts [example.ts]\\nimport { normalize } from 'viem/ens'\\nimport { publicClient } from './client'\\n \\nconst resolverAddress = await publicClient.getEnsResolver({\\n  name: normalize('wevm.eth'),\\n})\\n// '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\\n```\\n\\n```ts [client.ts]\\nimport { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\n```\\n\\n:::\\n\\n:::warning\\nSince ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsResolver`. You can use the built-in [`normalize`](/docs/ens/utilities/normalize) function for this.\\n:::\\n\\n## Returns\\n\\n[`Address`](/docs/glossary/types#address)\\n\\nThe address of the resolver.\\n\\n## Parameters\\n\\n### name\\n\\n- **Type:** `string`\\n\\nName to get the address for.\\n\\n```ts\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize('wevm.eth'), // [!code focus]\\n})\\n```\\n\\n### blockNumber (optional)\\n\\n- **Type:** `number`\\n\\nThe block number to perform the read against.\\n\\n```ts\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize('wevm.eth'),\\n  blockNumber: 15121123n, // [!code focus]\\n})\\n```\\n\\n### blockTag (optional)\\n\\n- **Type:** `'latest' | 'earliest' | 'pending' | 'safe' | 'finalized'`\\n- **Default:** `'latest'`\\n\\nThe block tag to perform the read against.\\n\\n```ts\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize('wevm.eth'),\\n  blockTag: 'safe', // [!code focus]\\n})\\n```\\n\\n### universalResolverAddress (optional)\\n\\n- **Type:** [`Address`](/docs/glossary/types#address)\\n- **Default:** `client.chain.contracts.ensUniversalResolver.address`\\n\\nAddress of ENS Universal Resolver Contract.\\n\\n```ts\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize('wevm.eth'),\\n  universalResolverAddress: '0x74E20Bd2A1fE0cdbe45b9A1d89cb7e0a45b36376', // [!code focus]\\n})\\n```\\n\",\"document\":[{\"href\":\"/docs/ens/actions/getEnsResolver#getensresolver\",\"html\":\"</header>\\n<p>Gets resolver for ENS name.</p>\\n<p>Calls <code>findResolver(bytes)</code> on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.</p>\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#getensresolver\",\"isPage\":true,\"text\":\"\\nGets resolver for ENS name.\\nCalls findResolver(bytes) on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\\n\",\"title\":\"getEnsResolver\",\"titles\":[]},{\"href\":\"/docs/ens/actions/getEnsResolver#usage\",\"html\":\"\\n<div class=\\\"code-group\\\"><div data-title=\\\"example.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"example.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { normalize } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/ens&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { publicClient } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./client&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> resolverAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getEnsResolver</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">normalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wevm.eth&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// &#x27;0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41&#x27;</span></span></code></pre></div><div data-title=\\\"client.ts\\\"><pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\" data-title=\\\"client.ts\\\" data-lang=\\\"ts\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { createPublicClient, http } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { mainnet } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem/chains&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> publicClient</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> createPublicClient</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  chain: mainnet,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  transport: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">http</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre></div></div>\\n<aside data-callout=\\\"warning\\\"><p>Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to <a href=\\\"https://docs.ens.domains/contract-api-reference/name-processing#normalising-names\\\">normalize ENS names</a> with <a href=\\\"https://unicode.org/reports/tr46\\\">UTS-46 normalization</a> before passing them to <code>getEnsResolver</code>. You can use the built-in <a href=\\\"/docs/ens/utilities/normalize\\\"><code>normalize</code></a> function for this.</p></aside>\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#usage\",\"isPage\":false,\"text\":\"\\nimport { normalize } from &#x27;viem/ens&#x27;\\nimport { publicClient } from &#x27;./client&#x27;\\n \\nconst resolverAddress = await publicClient.getEnsResolver({\\n  name: normalize(&#x27;wevm.eth&#x27;),\\n})\\n// &#x27;0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41&#x27;import { createPublicClient, http } from &#x27;viem&#x27;\\nimport { mainnet } from &#x27;viem/chains&#x27;\\n \\nexport const publicClient = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\\nSince ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to normalize ENS names with UTS-46 normalization before passing them to getEnsResolver. You can use the built-in normalize function for this.\\n\",\"title\":\"Usage\",\"titles\":[\"getEnsResolver\"]},{\"href\":\"/docs/ens/actions/getEnsResolver#returns\",\"html\":\"\\n<p><a href=\\\"/docs/glossary/types#address\\\"><code>Address</code></a></p>\\n<p>The address of the resolver.</p>\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#returns\",\"isPage\":false,\"text\":\"\\nAddress\\nThe address of the resolver.\\n\",\"title\":\"Returns\",\"titles\":[\"getEnsResolver\"]},{\"href\":\"/docs/ens/actions/getEnsResolver#parameters\",\"html\":\"\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#parameters\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Parameters\",\"titles\":[\"getEnsResolver\"]},{\"href\":\"/docs/ens/actions/getEnsResolver#name\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>string</code></li>\\n</ul>\\n<p>Name to get the address for.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> ensName</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getEnsResolver</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">normalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wevm.eth&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">), </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#name\",\"isPage\":false,\"text\":\"\\n\\nType: string\\n\\nName to get the address for.\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize(&#x27;wevm.eth&#x27;), \\n})\\n\",\"title\":\"name\",\"titles\":[\"getEnsResolver\",\"Parameters\"]},{\"href\":\"/docs/ens/actions/getEnsResolver#blocknumber-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>number</code></li>\\n</ul>\\n<p>The block number to perform the read against.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> ensName</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getEnsResolver</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">normalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wevm.eth&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  blockNumber: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">15121123</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">n</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#blocknumber-optional\",\"isPage\":false,\"text\":\"\\n\\nType: number\\n\\nThe block number to perform the read against.\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize(&#x27;wevm.eth&#x27;),\\n  blockNumber: 15121123n, \\n})\\n\",\"title\":\"blockNumber (optional)\",\"titles\":[\"getEnsResolver\",\"Parameters\"]},{\"href\":\"/docs/ens/actions/getEnsResolver#blocktag-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <code>&#x27;latest&#x27; | &#x27;earliest&#x27; | &#x27;pending&#x27; | &#x27;safe&#x27; | &#x27;finalized&#x27;</code></li>\\n<li><strong>Default:</strong> <code>&#x27;latest&#x27;</code></li>\\n</ul>\\n<p>The block tag to perform the read against.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> ensName</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getEnsResolver</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">normalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wevm.eth&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  blockTag: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;safe&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#blocktag-optional\",\"isPage\":false,\"text\":\"\\n\\nType: &#x27;latest&#x27; | &#x27;earliest&#x27; | &#x27;pending&#x27; | &#x27;safe&#x27; | &#x27;finalized&#x27;\\nDefault: &#x27;latest&#x27;\\n\\nThe block tag to perform the read against.\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize(&#x27;wevm.eth&#x27;),\\n  blockTag: &#x27;safe&#x27;, \\n})\\n\",\"title\":\"blockTag (optional)\",\"titles\":[\"getEnsResolver\",\"Parameters\"]},{\"href\":\"/docs/ens/actions/getEnsResolver#universalresolveraddress-optional\",\"html\":\"\\n<ul>\\n<li><strong>Type:</strong> <a href=\\\"/docs/glossary/types#address\\\"><code>Address</code></a></li>\\n<li><strong>Default:</strong> <code>client.chain.contracts.ensUniversalResolver.address</code></li>\\n</ul>\\n<p>Address of ENS Universal Resolver Contract.</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> ensName</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> publicClient.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">getEnsResolver</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">normalize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;wevm.eth&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">),</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  universalResolverAddress: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x74E20Bd2A1fE0cdbe45b9A1d89cb7e0a45b36376&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/ens/actions/getEnsResolver.md#universalresolveraddress-optional\",\"isPage\":false,\"text\":\"\\n\\nType: Address\\nDefault: client.chain.contracts.ensUniversalResolver.address\\n\\nAddress of ENS Universal Resolver Contract.\\nconst ensName = await publicClient.getEnsResolver({\\n  name: normalize(&#x27;wevm.eth&#x27;),\\n  universalResolverAddress: &#x27;0x74E20Bd2A1fE0cdbe45b9A1d89cb7e0a45b36376&#x27;, \\n})\",\"title\":\"universalResolverAddress (optional)\",\"titles\":[\"getEnsResolver\",\"Parameters\"]}]}}"
