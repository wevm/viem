"{\"value\":{\"code\":\"import { createWalletClient, custom } from 'viem'\\nimport { zksync } from 'viem/chains'\\nimport { eip712WalletActions } from 'viem/zksync'\\n\\nconst walletClient = createWalletClient({ // [!code hl]\\n  chain: zksync, // [!code hl]\\n  transport: custom(window.ethereum!), // [!code hl]\\n}).extend(eip712WalletActions()) // [!code hl]\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createWalletClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createWalletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function custom<provider extends EthereumProvider>(provider: provider, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":29,\"length\":6,\"target\":\"custom\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const zksync: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}\\nimport zksync\",\"start\":59,\"length\":6,\"target\":\"zksync\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function eip712WalletActions(): <transport extends Transport, chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>) => Eip712WalletActions<chain, account>\\nimport eip712WalletActions\",\"start\":96,\"length\":19,\"target\":\"eip712WalletActions\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\",\"start\":144,\"length\":12,\"target\":\"walletClient\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":159,\"length\":18,\"target\":\"createWalletClient\",\"line\":4,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":196,\"length\":5,\"target\":\"chain\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const zksync: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}\\nimport zksync\",\"start\":203,\"length\":6,\"target\":\"zksync\",\"line\":5,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: CustomTransport\",\"docs\":\"The RPC transport\",\"start\":227,\"length\":9,\"target\":\"transport\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) custom<{\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}>(provider: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":238,\"length\":6,\"target\":\"custom\",\"line\":6,\"character\":13},{\"type\":\"hover\",\"text\":\"var window: Window & typeof globalThis\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)\",\"start\":245,\"length\":6,\"target\":\"window\",\"line\":6,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) Window.ethereum?: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n} | undefined\",\"start\":252,\"length\":8,\"target\":\"ethereum\",\"line\":6,\"character\":27},{\"type\":\"hover\",\"text\":\"(property) extend: <Eip712WalletActions<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}, undefined>>(fn: (client: Client<...>) => Eip712WalletActions<...>) => Client<...>\",\"start\":281,\"length\":6,\"target\":\"extend\",\"line\":7,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) eip712WalletActions(): <transport extends Transport, chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>) => Eip712WalletActions<chain, account>\\nimport eip712WalletActions\",\"start\":288,\"length\":19,\"target\":\"eip712WalletActions\",\"line\":7,\"character\":10}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,34]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/index.ts\",\"content\":\"import 'viem/window'\\n// ---cut---\\nimport { createWalletClient, custom } from 'viem'\\nimport { zksync } from 'viem/chains'\\nimport { eip712WalletActions } from 'viem/zksync'\\n\\nconst walletClient = createWalletClient({ // [!code hl]\\n  chain: zksync, // [!code hl]\\n  transport: custom(window.ethereum!), // [!code hl]\\n}).extend(eip712WalletActions()) // [!code hl]\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createWalletClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createWalletClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function custom<provider extends EthereumProvider>(provider: provider, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":29,\"length\":6,\"target\":\"custom\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const zksync: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}\\nimport zksync\",\"start\":59,\"length\":6,\"target\":\"zksync\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function eip712WalletActions(): <transport extends Transport, chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>) => Eip712WalletActions<chain, account>\\nimport eip712WalletActions\",\"start\":96,\"length\":19,\"target\":\"eip712WalletActions\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"const walletClient: Client<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}, undefined, WalletRpcSchema, {\\n    ...;\\n} & WalletActions<...>>\",\"start\":144,\"length\":12,\"target\":\"walletClient\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createWalletClient<CustomTransport, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createWalletClient\",\"docs\":\"Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/wallet\\n\\nA Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\\n\\nThe Wallet Client supports signing over:\\n- [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\\n- [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\",\"tags\":[[\"param\",\"config - {@link WalletClientConfig}\"],[\"returns\",\"A Wallet Client. {@link WalletClient}\"],[\"example\",\"// JSON-RPC Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\"],[\"example\",\"// Local Account\\nimport { createWalletClient, custom } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  account: privateKeyToAccount('0x…')\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":159,\"length\":18,\"target\":\"createWalletClient\",\"line\":4,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":196,\"length\":5,\"target\":\"chain\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const zksync: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}\\nimport zksync\",\"start\":203,\"length\":6,\"target\":\"zksync\",\"line\":5,\"character\":9},{\"type\":\"hover\",\"text\":\"(property) transport: CustomTransport\",\"docs\":\"The RPC transport\",\"start\":227,\"length\":9,\"target\":\"transport\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) custom<{\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}>(provider: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n}, config?: CustomTransportConfig): CustomTransport\\nimport custom\",\"tags\":[[\"description\",\"Creates a custom transport given an EIP-1193 compliant `request` attribute.\"]],\"start\":238,\"length\":6,\"target\":\"custom\",\"line\":6,\"character\":13},{\"type\":\"hover\",\"text\":\"var window: Window & typeof globalThis\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window)\",\"start\":245,\"length\":6,\"target\":\"window\",\"line\":6,\"character\":20},{\"type\":\"hover\",\"text\":\"(property) Window.ethereum?: {\\n    on: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    removeListener: <event extends keyof EIP1193EventMap>(event: event, listener: EIP1193EventMap[event]) => void;\\n    request: EIP1193RequestFn<EIP1474Methods>;\\n} | undefined\",\"start\":252,\"length\":8,\"target\":\"ethereum\",\"line\":6,\"character\":27},{\"type\":\"hover\",\"text\":\"(property) extend: <Eip712WalletActions<{\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://era.zksync.network/\\\";\\n            readonly apiUrl: \\\"https://api-era.zksync.network/api\\\";\\n        };\\n        readonly native: {\\n            readonly name: \\\"ZKsync Explorer\\\";\\n            readonly url: \\\"https://explorer.zksync.io/\\\";\\n            readonly apiUrl: \\\"https://block-explorer-api.mainnet.zksync.io/api\\\";\\n        };\\n    };\\n    ... 11 more ...;\\n    readonly network: \\\"zksync-era\\\";\\n}, undefined>>(fn: (client: Client<...>) => Eip712WalletActions<...>) => Client<...>\",\"start\":281,\"length\":6,\"target\":\"extend\",\"line\":7,\"character\":3},{\"type\":\"hover\",\"text\":\"(alias) eip712WalletActions(): <transport extends Transport, chain extends ChainEIP712 | undefined = ChainEIP712 | undefined, account extends Account | undefined = Account | undefined>(client: Client<transport, chain, account>) => Eip712WalletActions<chain, account>\\nimport eip712WalletActions\",\"start\":288,\"length\":19,\"target\":\"eip712WalletActions\",\"line\":7,\"character\":10}],\"tags\":[]}}"
