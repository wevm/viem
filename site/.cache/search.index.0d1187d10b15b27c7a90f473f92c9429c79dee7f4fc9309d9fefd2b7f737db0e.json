"{\"value\":{\"mdx\":\"# Serializers [Configure chain-based serializers in Viem]\\n\\n## Usage\\n\\n```ts\\nimport { defineChain, serializeTransaction } from 'viem'\\n\\nconst example = defineChain({\\n  /* ... */\\n  serializers: {\\n    transaction(transaction, signature) {\\n      return serializeTransaction(transaction, signature)\\n    },\\n  },\\n})\\n```\\n\\n## API\\n\\n### `serializers.transaction`\\n\\n- **Type**: `(transaction: Transaction, signature?: Signature) => \\\"0x${string}\\\"`\\n\\nYou can modify how Transactions are serialized by using the `serializers.transaction` property on the Chain.\\n\\n**Parameters**\\n\\n- `transaction`: The transaction to serialize.\\n- `signature`: The transaction signature (if exists).\\n\\n```ts\\nimport { defineChain, serializeTransaction } from 'viem'\\n\\nconst example = defineChain({\\n  /* ... */\\n  serializers: { // [!code focus:5]\\n    transaction(transaction, signature) {\\n      return serializeTransaction(transaction, signature)\\n    },\\n  },\\n})\\n```\",\"document\":[{\"href\":\"/docs/chains/serializers#serializers\",\"html\":\"<div role=\\\"doc-subtitle\\\">Configure chain-based serializers in Viem</div></header>\\n\",\"id\":\"pages/docs/chains/serializers.md#serializers\",\"isPage\":true,\"text\":\"Configure chain-based serializers in Viem\\n\",\"title\":\"Serializers\",\"titles\":[]},{\"href\":\"/docs/chains/serializers#usage\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { defineChain, serializeTransaction } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> example</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> defineChain</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /* ... */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  serializers: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    transaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">transaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">signature</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> serializeTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(transaction, signature)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\\n\",\"id\":\"pages/docs/chains/serializers.md#usage\",\"isPage\":false,\"text\":\"\\nimport { defineChain, serializeTransaction } from &#x27;viem&#x27;\\n \\nconst example = defineChain({\\n  /* ... */\\n  serializers: {\\n    transaction(transaction, signature) {\\n      return serializeTransaction(transaction, signature)\\n    },\\n  },\\n})\\n\",\"title\":\"Usage\",\"titles\":[\"Serializers\"]},{\"href\":\"/docs/chains/serializers#api\",\"html\":\"\\n\",\"id\":\"pages/docs/chains/serializers.md#api\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"API\",\"titles\":[\"Serializers\"]},{\"href\":\"/docs/chains/serializers#serializerstransaction\",\"html\":\"\\n<ul>\\n<li><strong>Type</strong>: <code>(transaction: Transaction, signature?: Signature) =&gt; &quot;0x${string}&quot;</code></li>\\n</ul>\\n<p>You can modify how Transactions are serialized by using the <code>serializers.transaction</code> property on the Chain.</p>\\n<strong>Parameters</strong>\\n<ul>\\n<li><code>transaction</code>: The transaction to serialize.</li>\\n<li><code>signature</code>: The transaction signature (if exists).</li>\\n</ul>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed has-focused\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { defineChain, serializeTransaction } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> example</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> defineChain</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /* ... */</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  serializers: { </span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    transaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">transaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">signature</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> serializeTransaction</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(transaction, signature)</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    },</span></span>\\n<span class=\\\"line focused\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">})</span></span></code></pre>\",\"id\":\"pages/docs/chains/serializers.md#serializerstransaction\",\"isPage\":false,\"text\":\"\\n\\nType: (transaction: Transaction, signature?: Signature) =&gt; &quot;0x${string}&quot;\\n\\nYou can modify how Transactions are serialized by using the serializers.transaction property on the Chain.\\nParameters\\n\\ntransaction: The transaction to serialize.\\nsignature: The transaction signature (if exists).\\n\\nimport { defineChain, serializeTransaction } from &#x27;viem&#x27;\\n \\nconst example = defineChain({\\n  /* ... */\\n  serializers: { \\n    transaction(transaction, signature) {\\n      return serializeTransaction(transaction, signature)\\n    },\\n  },\\n})\",\"title\":\"serializers.transaction\",\"titles\":[\"Serializers\",\"API\"]}]}}"
