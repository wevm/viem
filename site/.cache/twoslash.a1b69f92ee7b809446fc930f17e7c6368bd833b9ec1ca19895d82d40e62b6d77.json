"{\"value\":{\"code\":\"import { parseUnits } from 'viem'\\nimport { walletClient } from './config'\\nimport { usdcAddress, usdcAbi } from './contract'\\n\\nconst hash = await walletClient.writeContract({\\n  address: usdcAddress,\\n  abi: usdcAbi,\\n  functionName: 'approve',\\n  args: [\\n    '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\\n    parseUnits('1000', 6),\\n  ],\\n})\\n\\nconsole.log(`Approved 1000 USDC for Uniswap. Tx Hash: ${hash}`)\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseUnits\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n        ... 5 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":43,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":83,\"length\":11,\"target\":\"usdcAddress\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":96,\"length\":7,\"target\":\"usdcAbi\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":131,\"length\":4,\"target\":\"hash\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n        ... 5 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":144,\"length\":12,\"target\":\"walletClient\",\"line\":4,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) writeContract: <readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"approve\\\", readonly [...], undefined>(args: WriteContractParameters<...>) => Promise<WriteContractReturnType>\",\"docs\":\"Executes a write function on a contract.\\n\\n- Docs: https://viem.sh/docs/contract/writeContract\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\\n\\nA \\\"write\\\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\\n\\nInternally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\\n\\n__Warning: The `write` internally sends a transaction â€“ it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\",\"tags\":[[\"param\",\"args - {@link WriteContractParameters}\"],[\"returns\",\"A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\"],[\"example\",\"import { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.writeContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n})\"],[\"example\",\"// With Validation\\nimport { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst { request } = await client.simulateContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n}\\nconst hash = await client.writeContract(request)\"]],\"start\":157,\"length\":13,\"target\":\"writeContract\",\"line\":4,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":175,\"length\":7,\"target\":\"address\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":184,\"length\":11,\"target\":\"usdcAddress\",\"line\":5,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"start\":199,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":204,\"length\":7,\"target\":\"usdcAbi\",\"line\":6,\"character\":7},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\" | \\\"transfer\\\" | \\\"transferFrom\\\"\",\"start\":215,\"length\":12,\"target\":\"functionName\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) args: [\\\"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\\", bigint]\",\"start\":242,\"length\":4,\"target\":\"args\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":304,\"length\":10,\"target\":\"parseUnits\",\"line\":10,\"character\":4},{\"type\":\"hover\",\"text\":\"namespace console\\nvar console: Console\",\"docs\":\"The `console` module provides a simple debugging console that is similar to the\\nJavaScript console mechanism provided by web browsers.\\n\\nThe module exports two specific components:\\n\\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) and\\n[`process.stderr`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\\n\\n_**Warning**_: The global console object's methods are neither consistently\\nsynchronous like the browser APIs they resemble, nor are they consistently\\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v22.x/api/process.html#a-note-on-process-io) for\\nmore information.\\n\\nExample using the global `console`:\\n\\n```js\\nconsole.log('hello world');\\n// Prints: hello world, to stdout\\nconsole.log('hello %s', 'world');\\n// Prints: hello world, to stdout\\nconsole.error(new Error('Whoops, something bad happened'));\\n// Prints error message and stack trace to stderr:\\n//   Error: Whoops, something bad happened\\n//     at [eval]:5:15\\n//     at Script.runInThisContext (node:vm:132:18)\\n//     at Object.runInThisContext (node:vm:309:38)\\n//     at node:internal/process/execution:77:19\\n//     at [eval]-wrapper:6:22\\n//     at evalScript (node:internal/process/execution:76:60)\\n//     at node:internal/main/eval_string:23:3\\n\\nconst name = 'Will Robinson';\\nconsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to stderr\\n```\\n\\nExample using the `Console` class:\\n\\n```js\\nconst out = getStreamSomehow();\\nconst err = getStreamSomehow();\\nconst myConsole = new console.Console(out, err);\\n\\nmyConsole.log('hello world');\\n// Prints: hello world, to out\\nmyConsole.log('hello %s', 'world');\\n// Prints: hello world, to out\\nmyConsole.error(new Error('Whoops, something bad happened'));\\n// Prints: [Error: Whoops, something bad happened], to err\\n\\nconst name = 'Will Robinson';\\nmyConsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to err\\n```\",\"tags\":[[\"see\",\"[source](https://github.com/nodejs/node/blob/v22.x/lib/console.js)\"]],\"start\":336,\"length\":7,\"target\":\"console\",\"line\":14,\"character\":0},{\"type\":\"hover\",\"text\":\"(method) Console.log(...data: any[]): void (+2 overloads)\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)\",\"start\":344,\"length\":3,\"target\":\"log\",\"line\":14,\"character\":8},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":392,\"length\":4,\"target\":\"hash\",\"line\":14,\"character\":56}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/jakemoxey/git/viem/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[[0,3004]],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":163,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":593,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":756,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1186,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1349,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1779,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":1942,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2372,\"filename\":\"contract.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/contract.ts\",\"content\":\"// @filename: contract.ts\\nimport { erc20Abi } from 'viem'\\n\\nexport const usdcAbi = erc20Abi\\nexport const usdcAddress = '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2535,\"filename\":\"config.ts\",\"filepath\":\"/Users/jakemoxey/git/viem/site/config.ts\",\"content\":\"// @filename: config.ts\\nimport { createPublicClient, createWalletClient, http } from 'viem'\\nimport { privateKeyToAccount } from 'viem/accounts'\\nimport { sepolia } from 'viem/chains'\\n\\nexport const account = privateKeyToAccount('0x...')\\n\\nexport const publicClient = createPublicClient({\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\\nexport const walletClient = createWalletClient({\\n  account,\\n  chain: sepolia,\\n  transport: http(),\\n})\\n\",\"extension\":\"ts\",\"supportLsp\":true},{\"offset\":2965,\"filename\":\"example.js\",\"filepath\":\"/Users/jakemoxey/git/viem/site/example.js\",\"content\":\"// @filename: example.js\\n\\n// ---cut---\\nimport { parseUnits } from 'viem'\\nimport { walletClient } from './config'\\nimport { usdcAddress, usdcAbi } from './contract'\\n\\nconst hash = await walletClient.writeContract({\\n  address: usdcAddress,\\n  abi: usdcAbi,\\n  functionName: 'approve',\\n  args: [\\n    '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\\n    parseUnits('1000', 6),\\n  ],\\n})\\n\\nconsole.log(`Approved 1000 USDC for Uniswap. Tx Hash: ${hash}`)\",\"extension\":\"js\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":9,\"length\":10,\"target\":\"parseUnits\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n        ... 5 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":43,\"length\":12,\"target\":\"walletClient\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":83,\"length\":11,\"target\":\"usdcAddress\",\"line\":2,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":96,\"length\":7,\"target\":\"usdcAbi\",\"line\":2,\"character\":22},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":131,\"length\":4,\"target\":\"hash\",\"line\":4,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) const walletClient: {\\n    account: {\\n        address: Address;\\n        nonceManager?: NonceManager | undefined;\\n        sign: (parameters: {\\n            hash: Hash;\\n        }) => Promise<Hex>;\\n        signAuthorization: (parameters: AuthorizationRequest) => Promise<SignAuthorizationReturnType>;\\n        ... 5 more ...;\\n        type: \\\"local\\\";\\n    };\\n    ... 35 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\\nimport walletClient\",\"start\":144,\"length\":12,\"target\":\"walletClient\",\"line\":4,\"character\":19},{\"type\":\"hover\",\"text\":\"(property) writeContract: <readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}], \\\"approve\\\", readonly [...], undefined>(args: WriteContractParameters<...>) => Promise<WriteContractReturnType>\",\"docs\":\"Executes a write function on a contract.\\n\\n- Docs: https://viem.sh/docs/contract/writeContract\\n- Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\\n\\nA \\\"write\\\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\\n\\nInternally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\\n\\n__Warning: The `write` internally sends a transaction â€“ it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\",\"tags\":[[\"param\",\"args - {@link WriteContractParameters}\"],[\"returns\",\"A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\"],[\"example\",\"import { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst hash = await client.writeContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n})\"],[\"example\",\"// With Validation\\nimport { createWalletClient, custom, parseAbi } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createWalletClient({\\n  chain: mainnet,\\n  transport: custom(window.ethereum),\\n})\\nconst { request } = await client.simulateContract({\\n  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\\n  abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\\n  functionName: 'mint',\\n  args: [69420],\\n}\\nconst hash = await client.writeContract(request)\"]],\"start\":157,\"length\":13,\"target\":\"writeContract\",\"line\":4,\"character\":32},{\"type\":\"hover\",\"text\":\"(property) address: `0x${string}`\",\"start\":175,\"length\":7,\"target\":\"address\",\"line\":5,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAddress: \\\"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\\\"\\nimport usdcAddress\",\"start\":184,\"length\":11,\"target\":\"usdcAddress\",\"line\":5,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) abi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\",\"start\":199,\"length\":3,\"target\":\"abi\",\"line\":6,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) const usdcAbi: readonly [{\\n    readonly type: \\\"event\\\";\\n    readonly name: \\\"Approval\\\";\\n    readonly inputs: readonly [{\\n        readonly indexed: true;\\n        readonly name: \\\"owner\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        readonly indexed: true;\\n        readonly name: \\\"spender\\\";\\n        readonly type: \\\"address\\\";\\n    }, {\\n        ...;\\n    }];\\n}, ... 9 more ..., {\\n    ...;\\n}]\\nimport usdcAbi\",\"start\":204,\"length\":7,\"target\":\"usdcAbi\",\"line\":6,\"character\":7},{\"type\":\"hover\",\"text\":\"(property) functionName: \\\"approve\\\" | \\\"transfer\\\" | \\\"transferFrom\\\"\",\"start\":215,\"length\":12,\"target\":\"functionName\",\"line\":7,\"character\":2},{\"type\":\"hover\",\"text\":\"(property) args: [\\\"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\\", bigint]\",\"start\":242,\"length\":4,\"target\":\"args\",\"line\":8,\"character\":2},{\"type\":\"hover\",\"text\":\"(alias) parseUnits(value: string, decimals: number): bigint\\nimport parseUnits\",\"docs\":\"Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\\n\\n- Docs: https://viem.sh/docs/utilities/parseUnits\",\"tags\":[[\"example\",\"import { parseUnits } from 'viem'\\n\\nparseUnits('420', 9)\\n// 420000000000n\"]],\"start\":304,\"length\":10,\"target\":\"parseUnits\",\"line\":10,\"character\":4},{\"type\":\"hover\",\"text\":\"namespace console\\nvar console: Console\",\"docs\":\"The `console` module provides a simple debugging console that is similar to the\\nJavaScript console mechanism provided by web browsers.\\n\\nThe module exports two specific components:\\n\\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) and\\n[`process.stderr`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\\n\\n_**Warning**_: The global console object's methods are neither consistently\\nsynchronous like the browser APIs they resemble, nor are they consistently\\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v22.x/api/process.html#a-note-on-process-io) for\\nmore information.\\n\\nExample using the global `console`:\\n\\n```js\\nconsole.log('hello world');\\n// Prints: hello world, to stdout\\nconsole.log('hello %s', 'world');\\n// Prints: hello world, to stdout\\nconsole.error(new Error('Whoops, something bad happened'));\\n// Prints error message and stack trace to stderr:\\n//   Error: Whoops, something bad happened\\n//     at [eval]:5:15\\n//     at Script.runInThisContext (node:vm:132:18)\\n//     at Object.runInThisContext (node:vm:309:38)\\n//     at node:internal/process/execution:77:19\\n//     at [eval]-wrapper:6:22\\n//     at evalScript (node:internal/process/execution:76:60)\\n//     at node:internal/main/eval_string:23:3\\n\\nconst name = 'Will Robinson';\\nconsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to stderr\\n```\\n\\nExample using the `Console` class:\\n\\n```js\\nconst out = getStreamSomehow();\\nconst err = getStreamSomehow();\\nconst myConsole = new console.Console(out, err);\\n\\nmyConsole.log('hello world');\\n// Prints: hello world, to out\\nmyConsole.log('hello %s', 'world');\\n// Prints: hello world, to out\\nmyConsole.error(new Error('Whoops, something bad happened'));\\n// Prints: [Error: Whoops, something bad happened], to err\\n\\nconst name = 'Will Robinson';\\nmyConsole.warn(`Danger ${name}! Danger!`);\\n// Prints: Danger Will Robinson! Danger!, to err\\n```\",\"tags\":[[\"see\",\"[source](https://github.com/nodejs/node/blob/v22.x/lib/console.js)\"]],\"start\":336,\"length\":7,\"target\":\"console\",\"line\":14,\"character\":0},{\"type\":\"hover\",\"text\":\"(method) Console.log(...data: any[]): void (+2 overloads)\",\"docs\":\"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)\",\"start\":344,\"length\":3,\"target\":\"log\",\"line\":14,\"character\":8},{\"type\":\"hover\",\"text\":\"const hash: `0x${string}`\",\"start\":392,\"length\":4,\"target\":\"hash\",\"line\":14,\"character\":56}],\"tags\":[]}}"
